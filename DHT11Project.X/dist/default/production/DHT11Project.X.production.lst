

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Jan 25 03:09:29 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4553
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51  0000                     
    52                           ; Version 2.20
    53                           ; Generated 12/02/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4553 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     
    87                           	psect	idataBANK0
    88  001DC8                     __pidataBANK0:
    89                           	callstack 0
    90                           
    91                           ;initializer for _END_CMD
    92  001DC8  20                 	db	low STR_2
    93  001DC9  08                 	db	high STR_2
    94                           
    95                           ;initializer for _LED0_CMD
    96  001DCA  11                 	db	low STR_1
    97  001DCB  08                 	db	high STR_1
    98  0000                     _TXREG	set	4013
    99  0000                     _RCREG	set	4014
   100  0000                     _PIE1bits	set	3997
   101  0000                     _INTCONbits	set	4082
   102  0000                     _RCSTAbits	set	4011
   103  0000                     _TXSTAbits	set	4012
   104  0000                     _SPBRG	set	4015
   105  0000                     _PORTDbits	set	3971
   106  0000                     _LATDbits	set	3980
   107  0000                     _LATD	set	3980
   108  0000                     _TRISD	set	3989
   109  0000                     _TXIF	set	31988
   110  0000                     _CREN	set	32092
   111  0000                     _RCIF	set	31989
   112  0000                     _TRISC7	set	31911
   113  0000                     _TRISC6	set	31910
   114                           
   115                           	psect	smallconst
   116  000800                     __psmallconst:
   117                           	callstack 0
   118  000800  00                 	db	0
   119  000801                     STR_3:
   120  000801  54                 	db	84	;'T'
   121  000802  65                 	db	101	;'e'
   122  000803  6D                 	db	109	;'m'
   123  000804  70                 	db	112	;'p'
   124  000805  65                 	db	101	;'e'
   125  000806  72                 	db	114	;'r'
   126  000807  61                 	db	97	;'a'
   127  000808  74                 	db	116	;'t'
   128  000809  75                 	db	117	;'u'
   129  00080A  72                 	db	114	;'r'
   130  00080B  65                 	db	101	;'e'
   131  00080C  3A                 	db	58	;':'
   132  00080D  20                 	db	32
   133  00080E  25                 	db	37
   134  00080F  64                 	db	100	;'d'
   135  000810  00                 	db	0
   136  000811                     STR_1:
   137  000811  43                 	db	67	;'C'
   138  000812  4D                 	db	77	;'M'
   139  000813  44                 	db	68	;'D'
   140  000814  2B                 	db	43
   141  000815  4C                 	db	76	;'L'
   142  000816  45                 	db	69	;'E'
   143  000817  44                 	db	68	;'D'
   144  000818  00                 	db	0
   145  000819                     STR_4:
   146  000819  52                 	db	82	;'R'
   147  00081A  48                 	db	72	;'H'
   148  00081B  3A                 	db	58	;':'
   149  00081C  20                 	db	32
   150  00081D  25                 	db	37
   151  00081E  64                 	db	100	;'d'
   152  00081F  00                 	db	0
   153  000820                     STR_2:
   154  000820  3E                 	db	62	;'>'
   155  000821  3E                 	db	62	;'>'
   156  000822  3E                 	db	62	;'>'
   157  000823  00                 	db	0
   158  000824                     STR_5:
   159  000824  3D                 	db	61	;'='
   160  000825  00                 	db	0
   161  000826  00                 	db	0	; dummy byte at the end
   162  0000                     
   163                           ; #config settings
   164                           
   165                           	psect	cinit
   166  0019D2                     __pcinit:
   167                           	callstack 0
   168  0019D2                     start_initialization:
   169                           	callstack 0
   170  0019D2                     __initialization:
   171                           	callstack 0
   172                           
   173                           ; Initialize objects allocated to BANK0 (4 bytes)
   174                           ; load TBLPTR registers with __pidataBANK0
   175  0019D2  0EC8               	movlw	low __pidataBANK0
   176  0019D4  6EF6               	movwf	tblptrl,c
   177  0019D6  0E1D               	movlw	high __pidataBANK0
   178  0019D8  6EF7               	movwf	tblptrh,c
   179  0019DA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   180  0019DC  6EF8               	movwf	tblptru,c
   181  0019DE  EE00  F0D9         	lfsr	0,__pdataBANK0
   182  0019E2  EE10 F004          	lfsr	1,4
   183  0019E6                     copy_data0:
   184  0019E6  0009               	tblrd		*+
   185  0019E8  CFF5 FFEE          	movff	tablat,postinc0
   186  0019EC  50E5               	movf	postdec1,w,c
   187  0019EE  50E1               	movf	fsr1l,w,c
   188  0019F0  E1FA               	bnz	copy_data0
   189                           
   190                           ; Clear objects allocated to BIGRAM (512 bytes)
   191  0019F2  EE01  F050         	lfsr	0,__pbssBIGRAM
   192  0019F6  EE12 F000          	lfsr	1,512
   193  0019FA                     clear_0:
   194  0019FA  6AEE               	clrf	postinc0,c
   195  0019FC  50E5               	movf	postdec1,w,c
   196  0019FE  50E1               	movf	fsr1l,w,c
   197  001A00  E1FC               	bnz	clear_0
   198  001A02  50E2               	movf	fsr1h,w,c
   199  001A04  E1FA               	bnz	clear_0
   200                           
   201                           ; Clear objects allocated to BANK1 (80 bytes)
   202  001A06  EE01  F000         	lfsr	0,__pbssBANK1
   203  001A0A  0E50               	movlw	80
   204  001A0C                     clear_1:
   205  001A0C  6AEE               	clrf	postinc0,c
   206  001A0E  06E8               	decf	wreg,f,c
   207  001A10  E1FD               	bnz	clear_1
   208                           
   209                           ; Clear objects allocated to BANK0 (89 bytes)
   210  001A12  EE00  F060         	lfsr	0,__pbssBANK0
   211  001A16  0E59               	movlw	89
   212  001A18                     clear_2:
   213  001A18  6AEE               	clrf	postinc0,c
   214  001A1A  06E8               	decf	wreg,f,c
   215  001A1C  E1FD               	bnz	clear_2
   216                           
   217                           ; Clear objects allocated to COMRAM (2 bytes)
   218  001A1E  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   219  001A20  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   220  001A22                     end_of_initialization:
   221                           	callstack 0
   222  001A22                     __end_of__initialization:
   223                           	callstack 0
   224  001A22  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   225  001A24  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   226  001A26  0E00               	movlw	low (__Lmediumconst shr (0+16))
   227  001A28  6EF8               	movwf	tblptru,c
   228  001A2A  0100               	movlb	0
   229  001A2C  EF18  F00C         	goto	_main	;jump to C main() function
   230                           
   231                           	psect	bssCOMRAM
   232  00005B                     __pbssCOMRAM:
   233                           	callstack 0
   234  00005B                     _flags:
   235                           	callstack 0
   236  00005B                     	ds	2
   237                           
   238                           	psect	bssBANK0
   239  000060                     __pbssBANK0:
   240                           	callstack 0
   241  000060                     _nout:
   242                           	callstack 0
   243  000060                     	ds	2
   244  000062                     _width:
   245                           	callstack 0
   246  000062                     	ds	2
   247  000064                     _prec:
   248                           	callstack 0
   249  000064                     	ds	2
   250  000066                     _position:
   251                           	callstack 0
   252  000066                     	ds	1
   253  000067                     _data_out:
   254                           	callstack 0
   255  000067                     	ds	50
   256  000099                     _dbuf:
   257                           	callstack 0
   258  000099                     	ds	32
   259                           
   260                           	psect	dataBANK0
   261  0000D9                     __pdataBANK0:
   262                           	callstack 0
   263  0000D9                     	ds	2
   264  0000DB                     	ds	2
   265                           
   266                           	psect	bssBANK1
   267  000100                     __pbssBANK1:
   268                           	callstack 0
   269  000100                     _dht_raw_data:
   270                           	callstack 0
   271  000100                     	ds	80
   272                           
   273                           	psect	bssBIGRAM
   274  000150                     __pbssBIGRAM:
   275                           	callstack 0
   276  000150                     _data_in:
   277                           	callstack 0
   278  000150                     	ds	512
   279                           
   280                           	psect	cstackBANK0
   281  0000B9                     __pcstackBANK0:
   282                           	callstack 0
   283  0000B9                     ?_sprintf:
   284                           	callstack 0
   285  0000B9                     sprintf@s:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0x0
   289  0000B9                     	ds	2
   290  0000BB                     sprintf@fmt:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x2
   294  0000BB                     	ds	6
   295  0000C1                     sprintf@ap:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x8
   299  0000C1                     	ds	2
   300  0000C3                     sprintf@f:
   301                           	callstack 0
   302                           
   303                           ; 6 bytes @ 0xA
   304  0000C3                     	ds	6
   305  0000C9                     ??_dht_read:
   306                           
   307                           ; 1 bytes @ 0x10
   308  0000C9                     	ds	3
   309  0000CC                     dht_read@index:
   310                           	callstack 0
   311                           
   312                           ; 1 bytes @ 0x13
   313  0000CC                     	ds	1
   314  0000CD                     dht_read@relative_humidity:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x14
   318  0000CD                     	ds	2
   319  0000CF                     dht_read@temperature:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x16
   323  0000CF                     	ds	2
   324  0000D1                     dht_read@bit_position:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0x18
   328  0000D1                     	ds	2
   329  0000D3                     dht_read@mask:
   330                           	callstack 0
   331                           
   332                           ; 2 bytes @ 0x1A
   333  0000D3                     	ds	2
   334  0000D5                     dht_read@bit_index:
   335                           	callstack 0
   336                           
   337                           ; 2 bytes @ 0x1C
   338  0000D5                     	ds	2
   339  0000D7                     ??_main:
   340                           
   341                           ; 1 bytes @ 0x1E
   342  0000D7                     	ds	2
   343                           
   344                           	psect	cstackCOMRAM
   345  000001                     __pcstackCOMRAM:
   346                           	callstack 0
   347  000001                     ??_isr:
   348  000001                     
   349                           ; 1 bytes @ 0x0
   350  000001                     	ds	2
   351  000003                     ?_dht_read_bit:
   352                           	callstack 0
   353  000003                     ?_strlen:
   354                           	callstack 0
   355  000003                     ?_isspace:
   356                           	callstack 0
   357  000003                     ?_isdigit:
   358                           	callstack 0
   359  000003                     ?_strncmp:
   360                           	callstack 0
   361  000003                     ?_strchr:
   362                           	callstack 0
   363  000003                     ?___wmul:
   364                           	callstack 0
   365  000003                     ?___aodiv:
   366                           	callstack 0
   367  000003                     ?___aomod:
   368                           	callstack 0
   369  000003                     USART_SendChar@data:
   370                           	callstack 0
   371  000003                     ___wmul@multiplier:
   372                           	callstack 0
   373  000003                     isdigit@c:
   374                           	callstack 0
   375  000003                     isspace@c:
   376                           	callstack 0
   377  000003                     memset@dest:
   378                           	callstack 0
   379  000003                     fputc@c:
   380                           	callstack 0
   381  000003                     strlen@s:
   382                           	callstack 0
   383  000003                     strchr@s:
   384                           	callstack 0
   385  000003                     strncmp@_l:
   386                           	callstack 0
   387  000003                     ___aodiv@dividend:
   388                           	callstack 0
   389  000003                     ___aomod@dividend:
   390                           	callstack 0
   391                           
   392                           ; 8 bytes @ 0x2
   393  000003                     	ds	2
   394  000005                     ??_isspace:
   395  000005                     ??_isdigit:
   396  000005                     ___wmul@multiplicand:
   397                           	callstack 0
   398  000005                     memset@c:
   399                           	callstack 0
   400  000005                     fputc@fp:
   401                           	callstack 0
   402  000005                     strlen@a:
   403                           	callstack 0
   404  000005                     strchr@c:
   405                           	callstack 0
   406  000005                     strncmp@_r:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x4
   410  000005                     	ds	2
   411  000007                     ??_fputc:
   412  000007                     USART_SendString@data:
   413                           	callstack 0
   414  000007                     ___wmul@product:
   415                           	callstack 0
   416  000007                     memset@n:
   417                           	callstack 0
   418  000007                     strncmp@n:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x6
   422  000007                     	ds	2
   423  000009                     ??_memset:
   424  000009                     ??_USART_SendString:
   425  000009                     ??_strncmp:
   426  000009                     _isspace$946:
   427                           	callstack 0
   428                           
   429                           ; 1 bytes @ 0x8
   430  000009                     	ds	1
   431  00000A                     ?_atoi:
   432                           	callstack 0
   433  00000A                     atoi@s:
   434                           	callstack 0
   435  00000A                     strncmp@l:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0x9
   439  00000A                     	ds	1
   440  00000B                     USART_SendString@index:
   441                           	callstack 0
   442  00000B                     memset@k:
   443                           	callstack 0
   444  00000B                     ___aodiv@divisor:
   445                           	callstack 0
   446  00000B                     ___aomod@divisor:
   447                           	callstack 0
   448                           
   449                           ; 8 bytes @ 0xA
   450  00000B                     	ds	1
   451  00000C                     ??_atoi:
   452  00000C                     fputs@s:
   453                           	callstack 0
   454  00000C                     strncmp@r:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0xB
   458  00000C                     	ds	1
   459  00000D                     memset@s:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0xC
   463  00000D                     	ds	1
   464  00000E                     ?_strstr:
   465                           	callstack 0
   466  00000E                     fputs@fp:
   467                           	callstack 0
   468  00000E                     strstr@h:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0xD
   472  00000E                     	ds	2
   473  000010                     fputs@c:
   474                           	callstack 0
   475  000010                     atoi@neg:
   476                           	callstack 0
   477  000010                     strstr@n:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0xF
   481  000010                     	ds	1
   482  000011                     fputs@i:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x10
   486  000011                     	ds	1
   487  000012                     _atoi$928:
   488                           	callstack 0
   489  000012                     strstr@nl:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x11
   493  000012                     	ds	1
   494  000013                     ?_pad:
   495                           	callstack 0
   496  000013                     ___aodiv@counter:
   497                           	callstack 0
   498  000013                     ___aomod@counter:
   499                           	callstack 0
   500  000013                     pad@fp:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x12
   504  000013                     	ds	1
   505  000014                     ___aodiv@sign:
   506                           	callstack 0
   507  000014                     ___aomod@sign:
   508                           	callstack 0
   509  000014                     data_received@ptr:
   510                           	callstack 0
   511  000014                     is_command@command:
   512                           	callstack 0
   513  000014                     _atoi$930:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x13
   517  000014                     	ds	1
   518  000015                     ?_abs:
   519                           	callstack 0
   520  000015                     pad@buf:
   521                           	callstack 0
   522  000015                     abs@a:
   523                           	callstack 0
   524  000015                     ___aodiv@quotient:
   525                           	callstack 0
   526                           
   527                           ; 8 bytes @ 0x14
   528  000015                     	ds	1
   529  000016                     _atoi$929:
   530                           	callstack 0
   531  000016                     is_command@ptr:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x15
   535  000016                     	ds	1
   536  000017                     ??_abs:
   537  000017                     atoi@n:
   538                           	callstack 0
   539  000017                     pad@p:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x16
   543  000017                     	ds	2
   544  000019                     ??_pad:
   545  000019                     get_action@str_value:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x18
   549  000019                     	ds	1
   550  00001A                     pad@i:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x19
   554  00001A                     	ds	1
   555  00001B                     get_action@value:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x1A
   559  00001B                     	ds	1
   560  00001C                     pad@w:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x1B
   564  00001C                     	ds	2
   565  00001E                     ?_dtoa:
   566                           	callstack 0
   567  00001E                     dtoa@fp:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x1D
   571  00001E                     	ds	2
   572  000020                     dtoa@d:
   573                           	callstack 0
   574                           
   575                           ; 8 bytes @ 0x1F
   576  000020                     	ds	8
   577  000028                     ??_dtoa:
   578                           
   579                           ; 1 bytes @ 0x27
   580  000028                     	ds	8
   581  000030                     _dtoa$1026:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x2F
   585  000030                     	ds	2
   586  000032                     dtoa@p:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x31
   590  000032                     	ds	2
   591  000034                     dtoa@w:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x33
   595  000034                     	ds	2
   596  000036                     dtoa@s:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x35
   600  000036                     	ds	2
   601  000038                     dtoa@n:
   602                           	callstack 0
   603                           
   604                           ; 8 bytes @ 0x37
   605  000038                     	ds	8
   606  000040                     dtoa@i:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x3F
   610  000040                     	ds	2
   611  000042                     ?_vfpfcnvrt:
   612                           	callstack 0
   613  000042                     vfpfcnvrt@fp:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x41
   617  000042                     	ds	2
   618  000044                     vfpfcnvrt@fmt:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x43
   622  000044                     	ds	2
   623  000046                     vfpfcnvrt@ap:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x45
   627  000046                     	ds	2
   628  000048                     ??_vfpfcnvrt:
   629                           
   630                           ; 1 bytes @ 0x47
   631  000048                     	ds	2
   632  00004A                     vfpfcnvrt@ll:
   633                           	callstack 0
   634                           
   635                           ; 8 bytes @ 0x49
   636  00004A                     	ds	8
   637  000052                     ?_vfprintf:
   638                           	callstack 0
   639  000052                     vfprintf@fp:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x51
   643  000052                     	ds	2
   644  000054                     vfprintf@fmt:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x53
   648  000054                     	ds	2
   649  000056                     vfprintf@ap:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x55
   653  000056                     	ds	2
   654  000058                     vfprintf@cfmt:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x57
   658  000058                     	ds	2
   659  00005A                     main@action:
   660                           	callstack 0
   661                           
   662                           ; 1 bytes @ 0x59
   663  00005A                     	ds	1
   664                           
   665 ;;
   666 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   667 ;;
   668 ;; *************** function _main *****************
   669 ;; Defined at:
   670 ;;		line 112 in file "main.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;		None
   673 ;; Auto vars:     Size  Location     Type
   674 ;;  action          1   89[COMRAM] enum E3677
   675 ;; Return value:  Size  Location     Type
   676 ;;                  1    wreg      void 
   677 ;; Registers used:
   678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   684 ;;      Params:         0       0       0       0       0       0       0       0       0
   685 ;;      Locals:         1       0       0       0       0       0       0       0       0
   686 ;;      Temps:          0       2       0       0       0       0       0       0       0
   687 ;;      Totals:         1       2       0       0       0       0       0       0       0
   688 ;;Total ram usage:        3 bytes
   689 ;; Hardware stack levels required when called:   10
   690 ;; This function calls:
   691 ;;		_USART_Init
   692 ;;		_data_received
   693 ;;		_dht_read
   694 ;;		_get_action
   695 ;;		_memset
   696 ;; This function is called by:
   697 ;;		Startup code after reset
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           	psect	text0
   702  001830                     __ptext0:
   703                           	callstack 0
   704  001830                     _main:
   705                           	callstack 21
   706  001830                     
   707                           ;main.c: 113:     USART_Init();
   708  001830  ECCC  F00E         	call	_USART_Init	;wreg free
   709  001834                     
   710                           ;main.c: 114:     memset(data_in, 0, 512);
   711  001834  0E50               	movlw	low _data_in
   712  001836  6E03               	movwf	memset@dest^0,c
   713  001838  0E01               	movlw	high _data_in
   714  00183A  6E04               	movwf	(memset@dest+1)^0,c
   715  00183C  0E00               	movlw	0
   716  00183E  6E06               	movwf	(memset@c+1)^0,c
   717  001840  0E00               	movlw	0
   718  001842  6E05               	movwf	memset@c^0,c
   719  001844  0E02               	movlw	2
   720  001846  6E08               	movwf	(memset@n+1)^0,c
   721  001848  0E00               	movlw	0
   722  00184A  6E07               	movwf	memset@n^0,c
   723  00184C  EC1A  F009         	call	_memset	;wreg free
   724  001850                     
   725                           ;main.c: 115:     position = 0;
   726  001850  0E00               	movlw	0
   727  001852  0100               	movlb	0	; () banked
   728  001854  6F66               	movwf	_position& (0+255),b
   729  001856                     
   730                           ; BSR set to: 0
   731                           ;main.c: 116:     TRISD = 0;
   732  001856  0E00               	movlw	0
   733  001858  6E95               	movwf	149,c	;volatile
   734  00185A                     
   735                           ; BSR set to: 0
   736                           ;main.c: 117:     LATD = 0xff;
   737  00185A  688C               	setf	140,c	;volatile
   738  00185C                     l2922:
   739                           
   740                           ;main.c: 120:         _delay((unsigned long)((1000)*(16000000/4000.0)));
   741  00185C  0E15               	movlw	21
   742  00185E  0100               	movlb	0	; () banked
   743  001860  6FD8               	movwf	(??_main+1)& (0+255),b
   744  001862  0E4B               	movlw	75
   745  001864  6FD7               	movwf	??_main& (0+255),b
   746  001866  0EBE               	movlw	190
   747  001868                     u2787:
   748  001868  2EE8               	decfsz	wreg,f,c
   749  00186A  D7FE               	bra	u2787
   750  00186C  2FD7               	decfsz	??_main& (0+255),f,b
   751  00186E  D7FC               	bra	u2787
   752  001870  2FD8               	decfsz	(??_main+1)& (0+255),f,b
   753  001872  D7FA               	bra	u2787
   754  001874  F000               	nop	
   755  001876                     
   756                           ;main.c: 121:         dht_read();
   757  001876  EC83  F005         	call	_dht_read	;wreg free
   758  00187A                     
   759                           ;main.c: 123:         if (data_received()) {
   760  00187A  EC9D  F00E         	call	_data_received	;wreg free
   761  00187E  0900               	iorlw	0
   762  001880  B4D8               	btfsc	status,2,c
   763  001882  EF45  F00C         	goto	u2771
   764  001886  EF47  F00C         	goto	u2770
   765  00188A                     u2771:
   766  00188A  EF2E  F00C         	goto	l2922
   767  00188E                     u2770:
   768  00188E                     
   769                           ;main.c: 124:             action_t action = get_action();
   770  00188E  EC70  F00C         	call	_get_action	;wreg free
   771  001892  6E5A               	movwf	main@action^0,c
   772                           
   773                           ;main.c: 126:             switch (action) {
   774  001894  EF52  F00C         	goto	l2932
   775  001898                     l80:
   776                           
   777                           ; BSR set to: 0
   778                           ;main.c: 128:                     LATDbits.LATD1 = 1;
   779  001898  828C               	bsf	140,1,c	;volatile
   780                           
   781                           ;main.c: 129:                     break;
   782  00189A  EF2E  F00C         	goto	l2922
   783  00189E                     l82:
   784                           
   785                           ; BSR set to: 0
   786                           ;main.c: 132:                     LATDbits.LATD1 = 0;
   787  00189E  928C               	bcf	140,1,c	;volatile
   788                           
   789                           ;main.c: 133:                     break;
   790  0018A0  EF2E  F00C         	goto	l2922
   791  0018A4                     l2932:
   792  0018A4  505A               	movf	main@action^0,w,c
   793  0018A6  0100               	movlb	0	; () banked
   794  0018A8  6FD7               	movwf	??_main& (0+255),b
   795  0018AA  6BD8               	clrf	(??_main+1)& (0+255),b
   796                           
   797                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   798                           ; Switch size 1, requested type "simple"
   799                           ; Number of cases is 1, Range of values is 0 to 0
   800                           ; switch strategies available:
   801                           ; Name         Instructions Cycles
   802                           ; simple_byte            4     3 (average)
   803                           ;	Chosen strategy is simple_byte
   804  0018AC  51D8               	movf	(??_main+1)& (0+255),w,b
   805  0018AE  0A00               	xorlw	0	; case 0
   806  0018B0  B4D8               	btfsc	status,2,c
   807  0018B2  EF5D  F00C         	goto	l2990
   808  0018B6  EF2E  F00C         	goto	l2922
   809  0018BA                     l2990:
   810                           
   811                           ; BSR set to: 0
   812                           ; Switch size 1, requested type "simple"
   813                           ; Number of cases is 3, Range of values is 0 to 2
   814                           ; switch strategies available:
   815                           ; Name         Instructions Cycles
   816                           ; simple_byte           10     6 (average)
   817                           ;	Chosen strategy is simple_byte
   818  0018BA  51D7               	movf	??_main& (0+255),w,b
   819  0018BC  0A00               	xorlw	0	; case 0
   820  0018BE  B4D8               	btfsc	status,2,c
   821  0018C0  EF4C  F00C         	goto	l80
   822  0018C4  0A01               	xorlw	1	; case 1
   823  0018C6  B4D8               	btfsc	status,2,c
   824  0018C8  EF4F  F00C         	goto	l82
   825  0018CC  0A03               	xorlw	3	; case 2
   826  0018CE  B4D8               	btfsc	status,2,c
   827  0018D0  EF6C  F00C         	goto	l78
   828  0018D4  EF2E  F00C         	goto	l2922
   829  0018D8                     l78:
   830                           
   831                           ; BSR set to: 0
   832  0018D8  EF2E  F00C         	goto	l2922
   833  0018DC  EF07  F000         	goto	start
   834  0018E0                     __end_of_main:
   835                           	callstack 0
   836                           
   837 ;; *************** function _get_action *****************
   838 ;; Defined at:
   839 ;;		line 216 in file "main.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;		None
   842 ;; Auto vars:     Size  Location     Type
   843 ;;  value           2   26[COMRAM] int 
   844 ;;  str_value       2   24[COMRAM] PTR unsigned char 
   845 ;;		 -> NULL(0), data_in(512), 
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      enum E3677
   848 ;; Registers used:
   849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   855 ;;      Params:         0       0       0       0       0       0       0       0       0
   856 ;;      Locals:         4       0       0       0       0       0       0       0       0
   857 ;;      Temps:          0       0       0       0       0       0       0       0       0
   858 ;;      Totals:         4       0       0       0       0       0       0       0       0
   859 ;;Total ram usage:        4 bytes
   860 ;; Hardware stack levels used:    1
   861 ;; Hardware stack levels required when called:    4
   862 ;; This function calls:
   863 ;;		_atoi
   864 ;;		_is_command
   865 ;;		_memset
   866 ;;		_strstr
   867 ;; This function is called by:
   868 ;;		_main
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           	psect	text1
   873  0018E0                     __ptext1:
   874                           	callstack 0
   875  0018E0                     _get_action:
   876                           	callstack 26
   877  0018E0                     
   878                           ;main.c: 217:     if (is_command(LED0_CMD)) {
   879  0018E0  0E11               	movlw	low STR_1
   880  0018E2  6E14               	movwf	is_command@command^0,c
   881  0018E4  0E08               	movlw	high STR_1
   882  0018E6  6E15               	movwf	(is_command@command+1)^0,c
   883  0018E8  EC65  F00E         	call	_is_command	;wreg free
   884  0018EC  0900               	iorlw	0
   885  0018EE  B4D8               	btfsc	status,2,c
   886  0018F0  EF7C  F00C         	goto	u2741
   887  0018F4  EF7E  F00C         	goto	u2740
   888  0018F8                     u2741:
   889  0018F8  EFB6  F00C         	goto	l2908
   890  0018FC                     u2740:
   891  0018FC                     
   892                           ;main.c: 218:         char * str_value = (strstr(data_in, "=") + 1);
   893  0018FC  0E50               	movlw	low _data_in
   894  0018FE  6E0E               	movwf	strstr@h^0,c
   895  001900  0E01               	movlw	high _data_in
   896  001902  6E0F               	movwf	(strstr@h+1)^0,c
   897  001904  0E24               	movlw	low STR_5
   898  001906  6E10               	movwf	strstr@n^0,c
   899  001908  0E08               	movlw	high STR_5
   900  00190A  6E11               	movwf	(strstr@n+1)^0,c
   901  00190C  ECB8  F00B         	call	_strstr	;wreg free
   902  001910  0E01               	movlw	1
   903  001912  240E               	addwf	?_strstr^0,w,c
   904  001914  6E19               	movwf	get_action@str_value^0,c
   905  001916  0E00               	movlw	0
   906  001918  200F               	addwfc	(?_strstr+1)^0,w,c
   907  00191A  6E1A               	movwf	(get_action@str_value+1)^0,c
   908  00191C                     
   909                           ;main.c: 219:         int value = atoi(str_value);
   910  00191C  C019  F00A         	movff	get_action@str_value,atoi@s
   911  001920  C01A  F00B         	movff	get_action@str_value+1,atoi@s+1
   912  001924  EC91  F007         	call	_atoi	;wreg free
   913  001928  C00A  F01B         	movff	?_atoi,get_action@value
   914  00192C  C00B  F01C         	movff	?_atoi+1,get_action@value+1
   915  001930                     
   916                           ;main.c: 220:         memset(data_in, '\0', 512);
   917  001930  0E50               	movlw	low _data_in
   918  001932  6E03               	movwf	memset@dest^0,c
   919  001934  0E01               	movlw	high _data_in
   920  001936  6E04               	movwf	(memset@dest+1)^0,c
   921  001938  0E00               	movlw	0
   922  00193A  6E06               	movwf	(memset@c+1)^0,c
   923  00193C  0E00               	movlw	0
   924  00193E  6E05               	movwf	memset@c^0,c
   925  001940  0E02               	movlw	2
   926  001942  6E08               	movwf	(memset@n+1)^0,c
   927  001944  0E00               	movlw	0
   928  001946  6E07               	movwf	memset@n^0,c
   929  001948  EC1A  F009         	call	_memset	;wreg free
   930  00194C                     
   931                           ;main.c: 221:         position = 0;
   932  00194C  0E00               	movlw	0
   933  00194E  0100               	movlb	0	; () banked
   934  001950  6F66               	movwf	_position& (0+255),b
   935  001952                     
   936                           ; BSR set to: 0
   937                           ;main.c: 223:         return (value == 1) ? LED_ON : LED_OFF;
   938  001952  041B               	decf	get_action@value^0,w,c
   939  001954  101C               	iorwf	(get_action@value+1)^0,w,c
   940  001956  A4D8               	btfss	status,2,c
   941  001958  EFB0  F00C         	goto	u2751
   942  00195C  EFB3  F00C         	goto	u2750
   943  001960                     u2751:
   944  001960  0E01               	movlw	1
   945  001962  EFB4  F00C         	goto	u2760
   946  001966                     u2750:
   947  001966  0E00               	movlw	0
   948  001968                     u2760:
   949  001968  EFB7  F00C         	goto	l123
   950  00196C                     l2908:
   951                           
   952                           ;main.c: 228:     return NO_OP;
   953  00196C  0E02               	movlw	2
   954  00196E                     l123:
   955  00196E  0012               	return		;funcret
   956  001970                     __end_of_get_action:
   957                           	callstack 0
   958                           
   959 ;; *************** function _is_command *****************
   960 ;; Defined at:
   961 ;;		line 231 in file "main.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;  command         2   19[COMRAM] PTR const unsigned char 
   964 ;;		 -> STR_1(8), 
   965 ;; Auto vars:     Size  Location     Type
   966 ;;  ptr             2   21[COMRAM] PTR unsigned char 
   967 ;;		 -> NULL(0), data_in(512), 
   968 ;; Return value:  Size  Location     Type
   969 ;;                  1    wreg      _Bool 
   970 ;; Registers used:
   971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   977 ;;      Params:         2       0       0       0       0       0       0       0       0
   978 ;;      Locals:         2       0       0       0       0       0       0       0       0
   979 ;;      Temps:          0       0       0       0       0       0       0       0       0
   980 ;;      Totals:         4       0       0       0       0       0       0       0       0
   981 ;;Total ram usage:        4 bytes
   982 ;; Hardware stack levels used:    1
   983 ;; Hardware stack levels required when called:    3
   984 ;; This function calls:
   985 ;;		_strstr
   986 ;; This function is called by:
   987 ;;		_get_action
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           	psect	text2
   992  001CCA                     __ptext2:
   993                           	callstack 0
   994  001CCA                     _is_command:
   995                           	callstack 26
   996  001CCA                     
   997                           ;main.c: 232:     char * ptr = strstr(data_in, command);
   998  001CCA  0E50               	movlw	low _data_in
   999  001CCC  6E0E               	movwf	strstr@h^0,c
  1000  001CCE  0E01               	movlw	high _data_in
  1001  001CD0  6E0F               	movwf	(strstr@h+1)^0,c
  1002  001CD2  C014  F010         	movff	is_command@command,strstr@n
  1003  001CD6  C015  F011         	movff	is_command@command+1,strstr@n+1
  1004  001CDA  ECB8  F00B         	call	_strstr	;wreg free
  1005  001CDE  C00E  F016         	movff	?_strstr,is_command@ptr
  1006  001CE2  C00F  F017         	movff	?_strstr+1,is_command@ptr+1
  1007  001CE6                     
  1008                           ;main.c: 234:     if (ptr != ((void*)0)) {
  1009  001CE6  5016               	movf	is_command@ptr^0,w,c
  1010  001CE8  1017               	iorwf	(is_command@ptr+1)^0,w,c
  1011  001CEA  B4D8               	btfsc	status,2,c
  1012  001CEC  EF7A  F00E         	goto	u2571
  1013  001CF0  EF7C  F00E         	goto	u2570
  1014  001CF4                     u2571:
  1015  001CF4  EF7F  F00E         	goto	l2744
  1016  001CF8                     u2570:
  1017  001CF8                     
  1018                           ;main.c: 235:         return 1;
  1019  001CF8  0E01               	movlw	1
  1020  001CFA  EF80  F00E         	goto	l127
  1021  001CFE                     l2744:
  1022                           
  1023                           ;main.c: 238:     return 0;
  1024  001CFE  0E00               	movlw	0
  1025  001D00                     l127:
  1026  001D00  0012               	return		;funcret
  1027  001D02                     __end_of_is_command:
  1028                           	callstack 0
  1029                           
  1030 ;; *************** function _atoi *****************
  1031 ;; Defined at:
  1032 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/atoi.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1035 ;;		 -> NULL(0), data_in(512), 
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;  n               2   22[COMRAM] int 
  1038 ;;  neg             2   15[COMRAM] int 
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  2    9[COMRAM] int 
  1041 ;; Registers used:
  1042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1048 ;;      Params:         2       0       0       0       0       0       0       0       0
  1049 ;;      Locals:         9       0       0       0       0       0       0       0       0
  1050 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1051 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1052 ;;Total ram usage:       15 bytes
  1053 ;; Hardware stack levels used:    1
  1054 ;; Hardware stack levels required when called:    2
  1055 ;; This function calls:
  1056 ;;		___wmul
  1057 ;;		_isdigit
  1058 ;;		_isspace
  1059 ;; This function is called by:
  1060 ;;		_get_action
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064                           	psect	text3
  1065  000F22                     __ptext3:
  1066                           	callstack 0
  1067  000F22                     _atoi:
  1068                           	callstack 27
  1069  000F22  0E00               	movlw	0
  1070  000F24  6E18               	movwf	(atoi@n+1)^0,c
  1071  000F26  0E00               	movlw	0
  1072  000F28  6E17               	movwf	atoi@n^0,c
  1073  000F2A  0E00               	movlw	0
  1074  000F2C  6E11               	movwf	(atoi@neg+1)^0,c
  1075  000F2E  0E00               	movlw	0
  1076  000F30  6E10               	movwf	atoi@neg^0,c
  1077  000F32  EF9D  F007         	goto	l2752
  1078  000F36                     l2750:
  1079  000F36  4A0A               	infsnz	atoi@s^0,f,c
  1080  000F38  2A0B               	incf	(atoi@s+1)^0,f,c
  1081  000F3A                     l2752:
  1082  000F3A  0E01               	movlw	1
  1083  000F3C  6E16               	movwf	_atoi$929^0,c
  1084  000F3E  C00A  FFD9         	movff	atoi@s,fsr2l
  1085  000F42  C00B  FFDA         	movff	atoi@s+1,fsr2h
  1086  000F46  0E20               	movlw	32
  1087  000F48  18DE               	xorwf	postinc2,w,c
  1088  000F4A  B4D8               	btfsc	status,2,c
  1089  000F4C  EFAA  F007         	goto	u2581
  1090  000F50  EFAC  F007         	goto	u2580
  1091  000F54                     u2581:
  1092  000F54  EFC8  F007         	goto	l2760
  1093  000F58                     u2580:
  1094  000F58  0EF7               	movlw	247
  1095  000F5A  6E0C               	movwf	??_atoi^0,c
  1096  000F5C  0EFF               	movlw	255
  1097  000F5E  6E0D               	movwf	(??_atoi+1)^0,c
  1098  000F60  C00A  FFD9         	movff	atoi@s,fsr2l
  1099  000F64  C00B  FFDA         	movff	atoi@s+1,fsr2h
  1100  000F68  50DF               	movf	indf2,w,c
  1101  000F6A  6E0E               	movwf	(??_atoi+2)^0,c
  1102  000F6C  6A0F               	clrf	(??_atoi+3)^0,c
  1103  000F6E  500C               	movf	??_atoi^0,w,c
  1104  000F70  260E               	addwf	(??_atoi+2)^0,f,c
  1105  000F72  500D               	movf	(??_atoi+1)^0,w,c
  1106  000F74  220F               	addwfc	(??_atoi+3)^0,f,c
  1107  000F76  500F               	movf	(??_atoi+3)^0,w,c
  1108  000F78  E109               	bnz	u2590
  1109  000F7A  0E05               	movlw	5
  1110  000F7C  5C0E               	subwf	(??_atoi+2)^0,w,c
  1111  000F7E  A0D8               	btfss	status,0,c
  1112  000F80  EFC4  F007         	goto	u2591
  1113  000F84  EFC6  F007         	goto	u2590
  1114  000F88                     u2591:
  1115  000F88  EFC8  F007         	goto	l2760
  1116  000F8C                     u2590:
  1117  000F8C  0E00               	movlw	0
  1118  000F8E  6E16               	movwf	_atoi$929^0,c
  1119  000F90                     l2760:
  1120  000F90  C016  F012         	movff	_atoi$929,_atoi$928
  1121  000F94  6A13               	clrf	(_atoi$928+1)^0,c
  1122  000F96  5012               	movf	_atoi$928^0,w,c
  1123  000F98  1013               	iorwf	(_atoi$928+1)^0,w,c
  1124  000F9A  A4D8               	btfss	status,2,c
  1125  000F9C  EFD2  F007         	goto	u2601
  1126  000FA0  EFD4  F007         	goto	u2600
  1127  000FA4                     u2601:
  1128  000FA4  EF9B  F007         	goto	l2750
  1129  000FA8                     u2600:
  1130  000FA8  EFDE  F007         	goto	l2770
  1131  000FAC                     l2766:
  1132  000FAC  0E00               	movlw	0
  1133  000FAE  6E11               	movwf	(atoi@neg+1)^0,c
  1134  000FB0  0E01               	movlw	1
  1135  000FB2  6E10               	movwf	atoi@neg^0,c
  1136  000FB4                     l2768:
  1137  000FB4  4A0A               	infsnz	atoi@s^0,f,c
  1138  000FB6  2A0B               	incf	(atoi@s+1)^0,f,c
  1139  000FB8  EF13  F008         	goto	l2776
  1140  000FBC                     l2770:
  1141  000FBC  C00A  FFD9         	movff	atoi@s,fsr2l
  1142  000FC0  C00B  FFDA         	movff	atoi@s+1,fsr2h
  1143  000FC4  50DF               	movf	indf2,w,c
  1144  000FC6  6E0C               	movwf	??_atoi^0,c
  1145  000FC8  6A0D               	clrf	(??_atoi+1)^0,c
  1146                           
  1147                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1148                           ; Switch size 1, requested type "simple"
  1149                           ; Number of cases is 1, Range of values is 0 to 0
  1150                           ; switch strategies available:
  1151                           ; Name         Instructions Cycles
  1152                           ; simple_byte            4     3 (average)
  1153                           ;	Chosen strategy is simple_byte
  1154  000FCA  500D               	movf	(??_atoi+1)^0,w,c
  1155  000FCC  0A00               	xorlw	0	; case 0
  1156  000FCE  B4D8               	btfsc	status,2,c
  1157  000FD0  EFEC  F007         	goto	l2992
  1158  000FD4  EF13  F008         	goto	l2776
  1159  000FD8                     l2992:
  1160                           
  1161                           ; Switch size 1, requested type "simple"
  1162                           ; Number of cases is 2, Range of values is 43 to 45
  1163                           ; switch strategies available:
  1164                           ; Name         Instructions Cycles
  1165                           ; simple_byte            7     4 (average)
  1166                           ;	Chosen strategy is simple_byte
  1167  000FD8  500C               	movf	??_atoi^0,w,c
  1168  000FDA  0A2B               	xorlw	43	; case 43
  1169  000FDC  B4D8               	btfsc	status,2,c
  1170  000FDE  EFDA  F007         	goto	l2768
  1171  000FE2  0A06               	xorlw	6	; case 45
  1172  000FE4  B4D8               	btfsc	status,2,c
  1173  000FE6  EFD6  F007         	goto	l2766
  1174  000FEA  EF13  F008         	goto	l2776
  1175  000FEE                     l2772:
  1176  000FEE  C017  F003         	movff	atoi@n,___wmul@multiplier
  1177  000FF2  C018  F004         	movff	atoi@n+1,___wmul@multiplier+1
  1178  000FF6  0E00               	movlw	0
  1179  000FF8  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  1180  000FFA  0E0A               	movlw	10
  1181  000FFC  6E05               	movwf	___wmul@multiplicand^0,c
  1182  000FFE  ECB9  F00E         	call	___wmul	;wreg free
  1183  001002  C00A  FFD9         	movff	atoi@s,fsr2l
  1184  001006  C00B  FFDA         	movff	atoi@s+1,fsr2h
  1185  00100A  50DF               	movf	indf2,w,c
  1186  00100C  6E0C               	movwf	??_atoi^0,c
  1187  00100E  500C               	movf	??_atoi^0,w,c
  1188  001010  5E03               	subwf	?___wmul^0,f,c
  1189  001012  0E00               	movlw	0
  1190  001014  5A04               	subwfb	(?___wmul+1)^0,f,c
  1191  001016  0E30               	movlw	48
  1192  001018  2403               	addwf	?___wmul^0,w,c
  1193  00101A  6E17               	movwf	atoi@n^0,c
  1194  00101C  0E00               	movlw	0
  1195  00101E  2004               	addwfc	(?___wmul+1)^0,w,c
  1196  001020  6E18               	movwf	(atoi@n+1)^0,c
  1197  001022  EFDA  F007         	goto	l2768
  1198  001026                     l2776:
  1199  001026  0ED0               	movlw	208
  1200  001028  6E0C               	movwf	??_atoi^0,c
  1201  00102A  0EFF               	movlw	255
  1202  00102C  6E0D               	movwf	(??_atoi+1)^0,c
  1203  00102E  C00A  FFD9         	movff	atoi@s,fsr2l
  1204  001032  C00B  FFDA         	movff	atoi@s+1,fsr2h
  1205  001036  50DF               	movf	indf2,w,c
  1206  001038  6E0E               	movwf	(??_atoi+2)^0,c
  1207  00103A  6A0F               	clrf	(??_atoi+3)^0,c
  1208  00103C  500C               	movf	??_atoi^0,w,c
  1209  00103E  260E               	addwf	(??_atoi+2)^0,f,c
  1210  001040  500D               	movf	(??_atoi+1)^0,w,c
  1211  001042  220F               	addwfc	(??_atoi+3)^0,f,c
  1212  001044  500F               	movf	(??_atoi+3)^0,w,c
  1213  001046  E10A               	bnz	u2610
  1214  001048  0E0A               	movlw	10
  1215  00104A  5C0E               	subwf	(??_atoi+2)^0,w,c
  1216  00104C  A0D8               	btfss	status,0,c
  1217  00104E  EF2B  F008         	goto	u2611
  1218  001052  EF2E  F008         	goto	u2610
  1219  001056                     u2611:
  1220  001056  0E01               	movlw	1
  1221  001058  EF2F  F008         	goto	u2620
  1222  00105C                     u2610:
  1223  00105C  0E00               	movlw	0
  1224  00105E                     u2620:
  1225  00105E  6E14               	movwf	_atoi$930^0,c
  1226  001060  6A15               	clrf	(_atoi$930+1)^0,c
  1227  001062  5014               	movf	_atoi$930^0,w,c
  1228  001064  1015               	iorwf	(_atoi$930+1)^0,w,c
  1229  001066  A4D8               	btfss	status,2,c
  1230  001068  EF38  F008         	goto	u2631
  1231  00106C  EF3A  F008         	goto	u2630
  1232  001070                     u2631:
  1233  001070  EFF7  F007         	goto	l2772
  1234  001074                     u2630:
  1235  001074  5010               	movf	atoi@neg^0,w,c
  1236  001076  1011               	iorwf	(atoi@neg+1)^0,w,c
  1237  001078  A4D8               	btfss	status,2,c
  1238  00107A  EF41  F008         	goto	u2641
  1239  00107E  EF43  F008         	goto	u2640
  1240  001082                     u2641:
  1241  001082  EF51  F008         	goto	l851
  1242  001086                     u2640:
  1243  001086  C017  F00C         	movff	atoi@n,??_atoi
  1244  00108A  C018  F00D         	movff	atoi@n+1,??_atoi+1
  1245  00108E  1E0C               	comf	??_atoi^0,f,c
  1246  001090  1E0D               	comf	(??_atoi+1)^0,f,c
  1247  001092  4A0C               	infsnz	??_atoi^0,f,c
  1248  001094  2A0D               	incf	(??_atoi+1)^0,f,c
  1249  001096  C00C  F00A         	movff	??_atoi,?_atoi
  1250  00109A  C00D  F00B         	movff	??_atoi+1,?_atoi+1
  1251  00109E  EF55  F008         	goto	l854
  1252  0010A2                     l851:
  1253  0010A2  C017  F00A         	movff	atoi@n,?_atoi
  1254  0010A6  C018  F00B         	movff	atoi@n+1,?_atoi+1
  1255  0010AA                     l854:
  1256  0010AA  0012               	return		;funcret
  1257  0010AC                     __end_of_atoi:
  1258                           	callstack 0
  1259                           
  1260 ;; *************** function _isspace *****************
  1261 ;; Defined at:
  1262 ;;		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/isspace.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;  c               2    2[COMRAM] int 
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;		None
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  2    2[COMRAM] int 
  1269 ;; Registers used:
  1270 ;;		wreg, status,2, status,0
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1276 ;;      Params:         2       0       0       0       0       0       0       0       0
  1277 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1278 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1279 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1280 ;;Total ram usage:        7 bytes
  1281 ;; Hardware stack levels used:    1
  1282 ;; Hardware stack levels required when called:    1
  1283 ;; This function calls:
  1284 ;;		Nothing
  1285 ;; This function is called by:
  1286 ;;		_atoi
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           	psect	text4
  1291  001A30                     __ptext4:
  1292                           	callstack 0
  1293  001A30                     _isspace:
  1294                           	callstack 27
  1295  001A30  0E01               	movlw	1
  1296  001A32  6E09               	movwf	_isspace$946^0,c
  1297  001A34  0E20               	movlw	32
  1298  001A36  1803               	xorwf	isspace@c^0,w,c
  1299  001A38  1004               	iorwf	(isspace@c+1)^0,w,c
  1300  001A3A  B4D8               	btfsc	status,2,c
  1301  001A3C  EF22  F00D         	goto	u2431
  1302  001A40  EF24  F00D         	goto	u2430
  1303  001A44                     u2431:
  1304  001A44  EF3D  F00D         	goto	l2650
  1305  001A48                     u2430:
  1306  001A48  0EF7               	movlw	247
  1307  001A4A  6E05               	movwf	??_isspace^0,c
  1308  001A4C  0EFF               	movlw	255
  1309  001A4E  6E06               	movwf	(??_isspace+1)^0,c
  1310  001A50  C003  F007         	movff	isspace@c,??_isspace+2
  1311  001A54  C004  F008         	movff	isspace@c+1,??_isspace+3
  1312  001A58  5005               	movf	??_isspace^0,w,c
  1313  001A5A  2607               	addwf	(??_isspace+2)^0,f,c
  1314  001A5C  5006               	movf	(??_isspace+1)^0,w,c
  1315  001A5E  2208               	addwfc	(??_isspace+3)^0,f,c
  1316  001A60  5008               	movf	(??_isspace+3)^0,w,c
  1317  001A62  E109               	bnz	u2440
  1318  001A64  0E05               	movlw	5
  1319  001A66  5C07               	subwf	(??_isspace+2)^0,w,c
  1320  001A68  A0D8               	btfss	status,0,c
  1321  001A6A  EF39  F00D         	goto	u2441
  1322  001A6E  EF3B  F00D         	goto	u2440
  1323  001A72                     u2441:
  1324  001A72  EF3D  F00D         	goto	l2650
  1325  001A76                     u2440:
  1326  001A76  0E00               	movlw	0
  1327  001A78  6E09               	movwf	_isspace$946^0,c
  1328  001A7A                     l2650:
  1329  001A7A  C009  F003         	movff	_isspace$946,?_isspace
  1330  001A7E  6A04               	clrf	(?_isspace+1)^0,c
  1331  001A80  0012               	return		;funcret
  1332  001A82                     __end_of_isspace:
  1333                           	callstack 0
  1334                           
  1335 ;; *************** function _isdigit *****************
  1336 ;; Defined at:
  1337 ;;		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/isdigit.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;  c               2    2[COMRAM] int 
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;		None
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  2    2[COMRAM] int 
  1344 ;; Registers used:
  1345 ;;		wreg, status,2, status,0
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1351 ;;      Params:         2       0       0       0       0       0       0       0       0
  1352 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1353 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1354 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1355 ;;Total ram usage:        6 bytes
  1356 ;; Hardware stack levels used:    1
  1357 ;; Hardware stack levels required when called:    1
  1358 ;; This function calls:
  1359 ;;		Nothing
  1360 ;; This function is called by:
  1361 ;;		_atoi
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           	psect	text5
  1366  001D02                     __ptext5:
  1367                           	callstack 0
  1368  001D02                     _isdigit:
  1369                           	callstack 27
  1370  001D02  0ED0               	movlw	208
  1371  001D04  6E05               	movwf	??_isdigit^0,c
  1372  001D06  0EFF               	movlw	255
  1373  001D08  6E06               	movwf	(??_isdigit+1)^0,c
  1374  001D0A  C003  F007         	movff	isdigit@c,??_isdigit+2
  1375  001D0E  C004  F008         	movff	isdigit@c+1,??_isdigit+3
  1376  001D12  5005               	movf	??_isdigit^0,w,c
  1377  001D14  2607               	addwf	(??_isdigit+2)^0,f,c
  1378  001D16  5006               	movf	(??_isdigit+1)^0,w,c
  1379  001D18  2208               	addwfc	(??_isdigit+3)^0,f,c
  1380  001D1A  5008               	movf	(??_isdigit+3)^0,w,c
  1381  001D1C  E10A               	bnz	u2450
  1382  001D1E  0E0A               	movlw	10
  1383  001D20  5C07               	subwf	(??_isdigit+2)^0,w,c
  1384  001D22  A0D8               	btfss	status,0,c
  1385  001D24  EF96  F00E         	goto	u2451
  1386  001D28  EF99  F00E         	goto	u2450
  1387  001D2C                     u2451:
  1388  001D2C  0E01               	movlw	1
  1389  001D2E  EF9A  F00E         	goto	u2460
  1390  001D32                     u2450:
  1391  001D32  0E00               	movlw	0
  1392  001D34                     u2460:
  1393  001D34  6E03               	movwf	?_isdigit^0,c
  1394  001D36  6A04               	clrf	(?_isdigit+1)^0,c
  1395  001D38  0012               	return		;funcret
  1396  001D3A                     __end_of_isdigit:
  1397                           	callstack 0
  1398                           
  1399 ;; *************** function ___wmul *****************
  1400 ;; Defined at:
  1401 ;;		line 15 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/Umul16.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;  multiplier      2    2[COMRAM] unsigned int 
  1404 ;;  multiplicand    2    4[COMRAM] unsigned int 
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;  product         2    6[COMRAM] unsigned int 
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  2    2[COMRAM] unsigned int 
  1409 ;; Registers used:
  1410 ;;		wreg, status,2, status,0, prodl, prodh
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1416 ;;      Params:         4       0       0       0       0       0       0       0       0
  1417 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1418 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1419 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1420 ;;Total ram usage:        6 bytes
  1421 ;; Hardware stack levels used:    1
  1422 ;; Hardware stack levels required when called:    1
  1423 ;; This function calls:
  1424 ;;		Nothing
  1425 ;; This function is called by:
  1426 ;;		_atoi
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           	psect	text6
  1431  001D72                     __ptext6:
  1432                           	callstack 0
  1433  001D72                     ___wmul:
  1434                           	callstack 27
  1435  001D72  5003               	movf	___wmul@multiplier^0,w,c
  1436  001D74  0205               	mulwf	___wmul@multiplicand^0,c
  1437  001D76  CFF3 F007          	movff	prodl,___wmul@product
  1438  001D7A  CFF4 F008          	movff	prodh,___wmul@product+1
  1439  001D7E  5003               	movf	___wmul@multiplier^0,w,c
  1440  001D80  0206               	mulwf	(___wmul@multiplicand+1)^0,c
  1441  001D82  50F3               	movf	243,w,c
  1442  001D84  2608               	addwf	(___wmul@product+1)^0,f,c
  1443  001D86  5004               	movf	(___wmul@multiplier+1)^0,w,c
  1444  001D88  0205               	mulwf	___wmul@multiplicand^0,c
  1445  001D8A  50F3               	movf	243,w,c
  1446  001D8C  2608               	addwf	(___wmul@product+1)^0,f,c
  1447  001D8E  C007  F003         	movff	___wmul@product,?___wmul
  1448  001D92  C008  F004         	movff	___wmul@product+1,?___wmul+1
  1449  001D96  0012               	return		;funcret
  1450  001D98                     __end_of___wmul:
  1451                           	callstack 0
  1452                           
  1453 ;; *************** function _dht_read *****************
  1454 ;; Defined at:
  1455 ;;		line 144 in file "main.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;		None
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;  index           1   19[BANK0 ] unsigned char 
  1460 ;;  bit_index       2   28[BANK0 ] volatile int 
  1461 ;;  mask            2   26[BANK0 ] volatile int 
  1462 ;;  bit_position    2   24[BANK0 ] volatile int 
  1463 ;;  temperature     2   22[BANK0 ] volatile int 
  1464 ;;  relative_hum    2   20[BANK0 ] volatile int 
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  1    wreg      void 
  1467 ;; Registers used:
  1468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1474 ;;      Params:         0       0       0       0       0       0       0       0       0
  1475 ;;      Locals:         0      11       0       0       0       0       0       0       0
  1476 ;;      Temps:          0       3       0       0       0       0       0       0       0
  1477 ;;      Totals:         0      14       0       0       0       0       0       0       0
  1478 ;;Total ram usage:       14 bytes
  1479 ;; Hardware stack levels used:    1
  1480 ;; Hardware stack levels required when called:    9
  1481 ;; This function calls:
  1482 ;;		_USART_SendString
  1483 ;;		_dht_read_bit
  1484 ;;		_memset
  1485 ;;		_sprintf
  1486 ;; This function is called by:
  1487 ;;		_main
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           	psect	text7
  1492  000B06                     __ptext7:
  1493                           	callstack 0
  1494  000B06                     _dht_read:
  1495                           	callstack 21
  1496  000B06                     
  1497                           ;main.c: 145:     memset(dht_raw_data, 0, 40);
  1498  000B06  0E00               	movlw	low _dht_raw_data
  1499  000B08  6E03               	movwf	memset@dest^0,c
  1500  000B0A  0E01               	movlw	high _dht_raw_data
  1501  000B0C  6E04               	movwf	(memset@dest+1)^0,c
  1502  000B0E  0E00               	movlw	0
  1503  000B10  6E06               	movwf	(memset@c+1)^0,c
  1504  000B12  0E00               	movlw	0
  1505  000B14  6E05               	movwf	memset@c^0,c
  1506  000B16  0E00               	movlw	0
  1507  000B18  6E08               	movwf	(memset@n+1)^0,c
  1508  000B1A  0E28               	movlw	40
  1509  000B1C  6E07               	movwf	memset@n^0,c
  1510  000B1E  EC1A  F009         	call	_memset	;wreg free
  1511  000B22                     
  1512                           ;main.c: 146:     TRISD = 0;
  1513  000B22  0E00               	movlw	0
  1514  000B24  6E95               	movwf	149,c	;volatile
  1515  000B26                     
  1516                           ;main.c: 147:     LATDbits.LATD2 = 0;
  1517  000B26  948C               	bcf	140,2,c	;volatile
  1518  000B28                     
  1519                           ;main.c: 148:     _delay((unsigned long)((18)*(16000000/4000.0)));
  1520  000B28  0E5E               	movlw	94
  1521  000B2A  0100               	movlb	0	; () banked
  1522  000B2C  6FC9               	movwf	??_dht_read& (0+255),b
  1523  000B2E  0E80               	movlw	128
  1524  000B30                     u2797:
  1525  000B30  2EE8               	decfsz	wreg,f,c
  1526  000B32  D7FE               	bra	u2797
  1527  000B34  2FC9               	decfsz	??_dht_read& (0+255),f,b
  1528  000B36  D7FC               	bra	u2797
  1529  000B38  F000               	nop	
  1530  000B3A                     
  1531                           ;main.c: 149:     LATDbits.LATD2 = 1;
  1532  000B3A  848C               	bsf	140,2,c	;volatile
  1533  000B3C                     
  1534                           ;main.c: 150:     _delay((unsigned long)((20)*(16000000/4000000.0)));
  1535  000B3C  0E1A               	movlw	26
  1536  000B3E                     u2807:
  1537  000B3E  2EE8               	decfsz	wreg,f,c
  1538  000B40  D7FE               	bra	u2807
  1539  000B42  D000               	nop2	
  1540  000B44                     
  1541                           ;main.c: 151:     TRISD = 1;
  1542  000B44  0E01               	movlw	1
  1543  000B46  6E95               	movwf	149,c	;volatile
  1544  000B48                     l89:
  1545  000B48  B483               	btfsc	131,2,c	;volatile
  1546  000B4A  EFA9  F005         	goto	u2651
  1547  000B4E  EFAB  F005         	goto	u2650
  1548  000B52                     u2651:
  1549  000B52  EFA4  F005         	goto	l89
  1550  000B56                     u2650:
  1551  000B56                     l92:
  1552  000B56  A483               	btfss	131,2,c	;volatile
  1553  000B58  EFB0  F005         	goto	u2661
  1554  000B5C  EFB2  F005         	goto	u2660
  1555  000B60                     u2661:
  1556  000B60  EFAB  F005         	goto	l92
  1557  000B64                     u2660:
  1558  000B64                     l95:
  1559  000B64  B483               	btfsc	131,2,c	;volatile
  1560  000B66  EFB7  F005         	goto	u2671
  1561  000B6A  EFB9  F005         	goto	u2670
  1562  000B6E                     u2671:
  1563  000B6E  EFB2  F005         	goto	l95
  1564  000B72                     u2670:
  1565  000B72                     
  1566                           ;main.c: 157:     for (uint8_t index = 0; index < 40; index++) {
  1567  000B72  0E00               	movlw	0
  1568  000B74  0100               	movlb	0	; () banked
  1569  000B76  6FCC               	movwf	dht_read@index& (0+255),b
  1570  000B78                     l2830:
  1571                           
  1572                           ; BSR set to: 0
  1573                           ;main.c: 158:         dht_raw_data[index] = dht_read_bit();
  1574  000B78  ECDD  F00D         	call	_dht_read_bit	;wreg free
  1575  000B7C  0100               	movlb	0	; () banked
  1576  000B7E  51CC               	movf	dht_read@index& (0+255),w,b
  1577  000B80  0D02               	mullw	2
  1578  000B82  0E00               	movlw	low _dht_raw_data
  1579  000B84  24F3               	addwf	243,w,c
  1580  000B86  6ED9               	movwf	fsr2l,c
  1581  000B88  0E01               	movlw	high _dht_raw_data
  1582  000B8A  20F4               	addwfc	prodh,w,c
  1583  000B8C  6EDA               	movwf	fsr2h,c
  1584  000B8E  C003  FFDE         	movff	?_dht_read_bit,postinc2
  1585  000B92  C004  FFDD         	movff	?_dht_read_bit+1,postdec2
  1586  000B96                     
  1587                           ; BSR set to: 0
  1588                           ;main.c: 159:     }
  1589  000B96  2BCC               	incf	dht_read@index& (0+255),f,b
  1590  000B98                     
  1591                           ; BSR set to: 0
  1592  000B98  0E27               	movlw	39
  1593  000B9A  65CC               	cpfsgt	dht_read@index& (0+255),b
  1594  000B9C  EFD2  F005         	goto	u2681
  1595  000BA0  EFD4  F005         	goto	u2680
  1596  000BA4                     u2681:
  1597  000BA4  EFBC  F005         	goto	l2830
  1598  000BA8                     u2680:
  1599  000BA8                     
  1600                           ; BSR set to: 0
  1601                           ;main.c: 161:     volatile int relative_humidity = 0;
  1602  000BA8  0E00               	movlw	0
  1603  000BAA  6FCE               	movwf	(dht_read@relative_humidity+1)& (0+255),b	;volatile
  1604  000BAC  0E00               	movlw	0
  1605  000BAE  6FCD               	movwf	dht_read@relative_humidity& (0+255),b	;volatile
  1606                           
  1607                           ;main.c: 162:     volatile int temperature = 0;
  1608  000BB0  0E00               	movlw	0
  1609  000BB2  6FD0               	movwf	(dht_read@temperature+1)& (0+255),b	;volatile
  1610  000BB4  0E00               	movlw	0
  1611  000BB6  6FCF               	movwf	dht_read@temperature& (0+255),b	;volatile
  1612                           
  1613                           ;main.c: 163:     volatile int mask = 0;
  1614  000BB8  0E00               	movlw	0
  1615  000BBA  6FD4               	movwf	(dht_read@mask+1)& (0+255),b	;volatile
  1616  000BBC  0E00               	movlw	0
  1617  000BBE  6FD3               	movwf	dht_read@mask& (0+255),b	;volatile
  1618                           
  1619                           ;main.c: 164:     volatile int bit_index = 0;
  1620  000BC0  0E00               	movlw	0
  1621  000BC2  6FD6               	movwf	(dht_read@bit_index+1)& (0+255),b	;volatile
  1622  000BC4  0E00               	movlw	0
  1623  000BC6  6FD5               	movwf	dht_read@bit_index& (0+255),b	;volatile
  1624                           
  1625                           ;main.c: 165:     volatile int bit_position = 7;
  1626  000BC8  0E00               	movlw	0
  1627  000BCA  6FD2               	movwf	(dht_read@bit_position+1)& (0+255),b	;volatile
  1628  000BCC  0E07               	movlw	7
  1629  000BCE  6FD1               	movwf	dht_read@bit_position& (0+255),b	;volatile
  1630                           
  1631                           ;main.c: 167:     for (bit_index = 0; bit_index < 8; bit_index++) {
  1632  000BD0  0E00               	movlw	0
  1633  000BD2  6FD6               	movwf	(dht_read@bit_index+1)& (0+255),b	;volatile
  1634  000BD4  0E00               	movlw	0
  1635  000BD6  6FD5               	movwf	dht_read@bit_index& (0+255),b	;volatile
  1636  000BD8                     l2838:
  1637                           
  1638                           ; BSR set to: 0
  1639  000BD8  BFD6               	btfsc	(dht_read@bit_index+1)& (0+255),7,b	;volatile
  1640  000BDA  EFF8  F005         	goto	u2691
  1641  000BDE  51D6               	movf	(dht_read@bit_index+1)& (0+255),w,b	;volatile
  1642  000BE0  E109               	bnz	u2690
  1643  000BE2  0E08               	movlw	8
  1644  000BE4  5DD5               	subwf	dht_read@bit_index& (0+255),w,b	;volatile
  1645  000BE6  A0D8               	btfss	status,0,c
  1646  000BE8  EFF8  F005         	goto	u2691
  1647  000BEC  EFFA  F005         	goto	u2690
  1648  000BF0                     u2691:
  1649  000BF0  EFFC  F005         	goto	l2842
  1650  000BF4                     u2690:
  1651  000BF4  EF2A  F006         	goto	l2854
  1652  000BF8                     l2842:
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;main.c: 168:         mask = dht_raw_data[bit_index];
  1656  000BF8  90D8               	bcf	status,0,c
  1657  000BFA  35D5               	rlcf	dht_read@bit_index& (0+255),w,b	;volatile
  1658  000BFC  6ED9               	movwf	fsr2l,c
  1659  000BFE  35D6               	rlcf	(dht_read@bit_index+1)& (0+255),w,b	;volatile
  1660  000C00  6EDA               	movwf	fsr2h,c
  1661  000C02  0E00               	movlw	low _dht_raw_data
  1662  000C04  26D9               	addwf	fsr2l,f,c
  1663  000C06  0E01               	movlw	high _dht_raw_data
  1664  000C08  22DA               	addwfc	fsr2h,f,c
  1665  000C0A  CFDE F0D3          	movff	postinc2,dht_read@mask	;volatile
  1666  000C0E  CFDD F0D4          	movff	postdec2,dht_read@mask+1	;volatile
  1667  000C12                     
  1668                           ; BSR set to: 0
  1669                           ;main.c: 170:         mask = (mask << bit_position);
  1670  000C12  C0D1  F0C9         	movff	dht_read@bit_position,??_dht_read	;volatile
  1671  000C16  C0D3  F0CA         	movff	dht_read@mask,??_dht_read+1	;volatile
  1672  000C1A  C0D4  F0CB         	movff	dht_read@mask+1,??_dht_read+2	;volatile
  1673  000C1E  2BC9               	incf	??_dht_read& (0+255),f,b
  1674  000C20  EF15  F006         	goto	u2704
  1675  000C24                     u2705:
  1676  000C24  90D8               	bcf	status,0,c
  1677  000C26  37CA               	rlcf	(??_dht_read+1)& (0+255),f,b
  1678  000C28  37CB               	rlcf	(??_dht_read+2)& (0+255),f,b
  1679  000C2A                     u2704:
  1680  000C2A  2FC9               	decfsz	??_dht_read& (0+255),f,b
  1681  000C2C  EF12  F006         	goto	u2705
  1682  000C30  C0CA  F0D3         	movff	??_dht_read+1,dht_read@mask	;volatile
  1683  000C34  C0CB  F0D4         	movff	??_dht_read+2,dht_read@mask+1	;volatile
  1684  000C38                     
  1685                           ;main.c: 171:         relative_humidity = (relative_humidity | mask);
  1686  000C38  0100               	movlb	0	; () banked
  1687  000C3A  51D3               	movf	dht_read@mask& (0+255),w,b	;volatile
  1688  000C3C  11CD               	iorwf	dht_read@relative_humidity& (0+255),w,b	;volatile
  1689  000C3E  6FCD               	movwf	dht_read@relative_humidity& (0+255),b	;volatile
  1690  000C40  51D4               	movf	(dht_read@mask+1)& (0+255),w,b	;volatile
  1691  000C42  11CE               	iorwf	(dht_read@relative_humidity+1)& (0+255),w,b	;volatile
  1692  000C44  6FCE               	movwf	(dht_read@relative_humidity+1)& (0+255),b	;volatile
  1693  000C46                     
  1694                           ; BSR set to: 0
  1695                           ;main.c: 172:         bit_position--;
  1696  000C46  07D1               	decf	dht_read@bit_position& (0+255),f,b	;volatile
  1697  000C48  A0D8               	btfss	status,0,c
  1698  000C4A  07D2               	decf	(dht_read@bit_position+1)& (0+255),f,b	;volatile
  1699  000C4C                     
  1700                           ; BSR set to: 0
  1701                           ;main.c: 173:     }
  1702  000C4C  4BD5               	infsnz	dht_read@bit_index& (0+255),f,b	;volatile
  1703  000C4E  2BD6               	incf	(dht_read@bit_index+1)& (0+255),f,b	;volatile
  1704  000C50  EFEC  F005         	goto	l2838
  1705  000C54                     l2854:
  1706                           
  1707                           ; BSR set to: 0
  1708                           ;main.c: 175:     bit_position = 7;
  1709  000C54  0E00               	movlw	0
  1710  000C56  6FD2               	movwf	(dht_read@bit_position+1)& (0+255),b	;volatile
  1711  000C58  0E07               	movlw	7
  1712  000C5A  6FD1               	movwf	dht_read@bit_position& (0+255),b	;volatile
  1713                           
  1714                           ;main.c: 177:     for (bit_index = 16; bit_index < 24; bit_index++) {
  1715  000C5C  0E00               	movlw	0
  1716  000C5E  6FD6               	movwf	(dht_read@bit_index+1)& (0+255),b	;volatile
  1717  000C60  0E10               	movlw	16
  1718  000C62  6FD5               	movwf	dht_read@bit_index& (0+255),b	;volatile
  1719  000C64                     l2856:
  1720                           
  1721                           ; BSR set to: 0
  1722  000C64  BFD6               	btfsc	(dht_read@bit_index+1)& (0+255),7,b	;volatile
  1723  000C66  EF3E  F006         	goto	u2711
  1724  000C6A  51D6               	movf	(dht_read@bit_index+1)& (0+255),w,b	;volatile
  1725  000C6C  E109               	bnz	u2710
  1726  000C6E  0E18               	movlw	24
  1727  000C70  5DD5               	subwf	dht_read@bit_index& (0+255),w,b	;volatile
  1728  000C72  A0D8               	btfss	status,0,c
  1729  000C74  EF3E  F006         	goto	u2711
  1730  000C78  EF40  F006         	goto	u2710
  1731  000C7C                     u2711:
  1732  000C7C  EF42  F006         	goto	l2860
  1733  000C80                     u2710:
  1734  000C80  EF70  F006         	goto	l2872
  1735  000C84                     l2860:
  1736                           
  1737                           ; BSR set to: 0
  1738                           ;main.c: 178:         mask = dht_raw_data[bit_index];
  1739  000C84  90D8               	bcf	status,0,c
  1740  000C86  35D5               	rlcf	dht_read@bit_index& (0+255),w,b	;volatile
  1741  000C88  6ED9               	movwf	fsr2l,c
  1742  000C8A  35D6               	rlcf	(dht_read@bit_index+1)& (0+255),w,b	;volatile
  1743  000C8C  6EDA               	movwf	fsr2h,c
  1744  000C8E  0E00               	movlw	low _dht_raw_data
  1745  000C90  26D9               	addwf	fsr2l,f,c
  1746  000C92  0E01               	movlw	high _dht_raw_data
  1747  000C94  22DA               	addwfc	fsr2h,f,c
  1748  000C96  CFDE F0D3          	movff	postinc2,dht_read@mask	;volatile
  1749  000C9A  CFDD F0D4          	movff	postdec2,dht_read@mask+1	;volatile
  1750  000C9E                     
  1751                           ; BSR set to: 0
  1752                           ;main.c: 180:         mask = (mask << bit_position);
  1753  000C9E  C0D1  F0C9         	movff	dht_read@bit_position,??_dht_read	;volatile
  1754  000CA2  C0D3  F0CA         	movff	dht_read@mask,??_dht_read+1	;volatile
  1755  000CA6  C0D4  F0CB         	movff	dht_read@mask+1,??_dht_read+2	;volatile
  1756  000CAA  2BC9               	incf	??_dht_read& (0+255),f,b
  1757  000CAC  EF5B  F006         	goto	u2724
  1758  000CB0                     u2725:
  1759  000CB0  90D8               	bcf	status,0,c
  1760  000CB2  37CA               	rlcf	(??_dht_read+1)& (0+255),f,b
  1761  000CB4  37CB               	rlcf	(??_dht_read+2)& (0+255),f,b
  1762  000CB6                     u2724:
  1763  000CB6  2FC9               	decfsz	??_dht_read& (0+255),f,b
  1764  000CB8  EF58  F006         	goto	u2725
  1765  000CBC  C0CA  F0D3         	movff	??_dht_read+1,dht_read@mask	;volatile
  1766  000CC0  C0CB  F0D4         	movff	??_dht_read+2,dht_read@mask+1	;volatile
  1767  000CC4                     
  1768                           ;main.c: 181:         temperature = (temperature | mask);
  1769  000CC4  0100               	movlb	0	; () banked
  1770  000CC6  51D3               	movf	dht_read@mask& (0+255),w,b	;volatile
  1771  000CC8  11CF               	iorwf	dht_read@temperature& (0+255),w,b	;volatile
  1772  000CCA  6FCF               	movwf	dht_read@temperature& (0+255),b	;volatile
  1773  000CCC  51D4               	movf	(dht_read@mask+1)& (0+255),w,b	;volatile
  1774  000CCE  11D0               	iorwf	(dht_read@temperature+1)& (0+255),w,b	;volatile
  1775  000CD0  6FD0               	movwf	(dht_read@temperature+1)& (0+255),b	;volatile
  1776  000CD2                     
  1777                           ; BSR set to: 0
  1778                           ;main.c: 182:         bit_position--;
  1779  000CD2  07D1               	decf	dht_read@bit_position& (0+255),f,b	;volatile
  1780  000CD4  A0D8               	btfss	status,0,c
  1781  000CD6  07D2               	decf	(dht_read@bit_position+1)& (0+255),f,b	;volatile
  1782  000CD8                     
  1783                           ; BSR set to: 0
  1784                           ;main.c: 183:     }
  1785  000CD8  4BD5               	infsnz	dht_read@bit_index& (0+255),f,b	;volatile
  1786  000CDA  2BD6               	incf	(dht_read@bit_index+1)& (0+255),f,b	;volatile
  1787  000CDC  EF32  F006         	goto	l2856
  1788  000CE0                     l2872:
  1789                           
  1790                           ; BSR set to: 0
  1791                           ;main.c: 185:     memset(data_out, 0, 512);
  1792  000CE0  0E67               	movlw	low _data_out
  1793  000CE2  6E03               	movwf	memset@dest^0,c
  1794  000CE4  0E00               	movlw	high _data_out
  1795  000CE6  6E04               	movwf	(memset@dest+1)^0,c
  1796  000CE8  0E00               	movlw	0
  1797  000CEA  6E06               	movwf	(memset@c+1)^0,c
  1798  000CEC  0E00               	movlw	0
  1799  000CEE  6E05               	movwf	memset@c^0,c
  1800  000CF0  0E02               	movlw	2
  1801  000CF2  6E08               	movwf	(memset@n+1)^0,c
  1802  000CF4  0E00               	movlw	0
  1803  000CF6  6E07               	movwf	memset@n^0,c
  1804  000CF8  EC1A  F009         	call	_memset	;wreg free
  1805  000CFC                     
  1806                           ;main.c: 186:     sprintf(data_out, "Temperature: %d", temperature);
  1807  000CFC  0E67               	movlw	low _data_out
  1808  000CFE  0100               	movlb	0	; () banked
  1809  000D00  6FB9               	movwf	sprintf@s& (0+255),b
  1810  000D02  0E00               	movlw	high _data_out
  1811  000D04  6FBA               	movwf	(sprintf@s+1)& (0+255),b
  1812  000D06  0E01               	movlw	low STR_3
  1813  000D08  6FBB               	movwf	sprintf@fmt& (0+255),b
  1814  000D0A  0E08               	movlw	high STR_3
  1815  000D0C  6FBC               	movwf	(sprintf@fmt+1)& (0+255),b
  1816  000D0E  C0CF  F0BD         	movff	dht_read@temperature,?_sprintf+4	;volatile
  1817  000D12  C0D0  F0BE         	movff	dht_read@temperature+1,?_sprintf+5	;volatile
  1818  000D16  EC41  F00D         	call	_sprintf	;wreg free
  1819  000D1A                     
  1820                           ;main.c: 187:     USART_SendString(data_out);
  1821  000D1A  0E67               	movlw	low _data_out
  1822  000D1C  6E07               	movwf	USART_SendString@data^0,c
  1823  000D1E  0E00               	movlw	high _data_out
  1824  000D20  6E08               	movwf	(USART_SendString@data+1)^0,c
  1825  000D22  EC00  F00E         	call	_USART_SendString	;wreg free
  1826                           
  1827                           ;main.c: 189:     memset(data_out, 0, 512);
  1828  000D26  0E67               	movlw	low _data_out
  1829  000D28  6E03               	movwf	memset@dest^0,c
  1830  000D2A  0E00               	movlw	high _data_out
  1831  000D2C  6E04               	movwf	(memset@dest+1)^0,c
  1832  000D2E  0E00               	movlw	0
  1833  000D30  6E06               	movwf	(memset@c+1)^0,c
  1834  000D32  0E00               	movlw	0
  1835  000D34  6E05               	movwf	memset@c^0,c
  1836  000D36  0E02               	movlw	2
  1837  000D38  6E08               	movwf	(memset@n+1)^0,c
  1838  000D3A  0E00               	movlw	0
  1839  000D3C  6E07               	movwf	memset@n^0,c
  1840  000D3E  EC1A  F009         	call	_memset	;wreg free
  1841  000D42                     
  1842                           ;main.c: 190:     sprintf(data_out, "RH: %d", relative_humidity);
  1843  000D42  0E67               	movlw	low _data_out
  1844  000D44  0100               	movlb	0	; () banked
  1845  000D46  6FB9               	movwf	sprintf@s& (0+255),b
  1846  000D48  0E00               	movlw	high _data_out
  1847  000D4A  6FBA               	movwf	(sprintf@s+1)& (0+255),b
  1848  000D4C  0E19               	movlw	low STR_4
  1849  000D4E  6FBB               	movwf	sprintf@fmt& (0+255),b
  1850  000D50  0E08               	movlw	high STR_4
  1851  000D52  6FBC               	movwf	(sprintf@fmt+1)& (0+255),b
  1852  000D54  C0CD  F0BD         	movff	dht_read@relative_humidity,?_sprintf+4	;volatile
  1853  000D58  C0CE  F0BE         	movff	dht_read@relative_humidity+1,?_sprintf+5	;volatile
  1854  000D5C  EC41  F00D         	call	_sprintf	;wreg free
  1855  000D60                     
  1856                           ;main.c: 191:     USART_SendString(data_out);
  1857  000D60  0E67               	movlw	low _data_out
  1858  000D62  6E07               	movwf	USART_SendString@data^0,c
  1859  000D64  0E00               	movlw	high _data_out
  1860  000D66  6E08               	movwf	(USART_SendString@data+1)^0,c
  1861  000D68  EC00  F00E         	call	_USART_SendString	;wreg free
  1862  000D6C  0012               	return		;funcret
  1863  000D6E                     __end_of_dht_read:
  1864                           	callstack 0
  1865                           
  1866 ;; *************** function _sprintf *****************
  1867 ;; Defined at:
  1868 ;;		line 9 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/nf_sprintf.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1871 ;;		 -> data_out(50), 
  1872 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1873 ;;		 -> STR_4(7), STR_3(16), 
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;  f               6   10[BANK0 ] struct _IO_FILE
  1876 ;;  ap              2    8[BANK0 ] PTR void [1]
  1877 ;;		 -> ?_sprintf(2), 
  1878 ;;  ret             2    0        int 
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  2    0[BANK0 ] int 
  1881 ;; Registers used:
  1882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1888 ;;      Params:         0       6       0       0       0       0       0       0       0
  1889 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1890 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1891 ;;      Totals:         0      16       0       0       0       0       0       0       0
  1892 ;;Total ram usage:       16 bytes
  1893 ;; Hardware stack levels used:    1
  1894 ;; Hardware stack levels required when called:    8
  1895 ;; This function calls:
  1896 ;;		_vfprintf
  1897 ;; This function is called by:
  1898 ;;		_dht_read
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           	psect	text8
  1903  001A82                     __ptext8:
  1904                           	callstack 0
  1905  001A82                     _sprintf:
  1906                           	callstack 21
  1907  001A82  0EBD               	movlw	low (?_sprintf+4)
  1908  001A84  0100               	movlb	0	; () banked
  1909  001A86  6FC1               	movwf	sprintf@ap& (0+255),b
  1910  001A88  0E00               	movlw	high (?_sprintf+4)
  1911  001A8A  6FC2               	movwf	(sprintf@ap+1)& (0+255),b
  1912  001A8C  C0B9  F0C3         	movff	sprintf@s,sprintf@f
  1913  001A90  C0BA  F0C4         	movff	sprintf@s+1,sprintf@f+1
  1914  001A94                     
  1915                           ; BSR set to: 0
  1916  001A94  0E00               	movlw	0
  1917  001A96  6FC6               	movwf	(sprintf@f+3)& (0+255),b
  1918  001A98  0E00               	movlw	0
  1919  001A9A  6FC5               	movwf	(sprintf@f+2)& (0+255),b
  1920  001A9C                     
  1921                           ; BSR set to: 0
  1922  001A9C  0E00               	movlw	0
  1923  001A9E  6FC8               	movwf	(sprintf@f+5)& (0+255),b
  1924  001AA0  0E00               	movlw	0
  1925  001AA2  6FC7               	movwf	(sprintf@f+4)& (0+255),b
  1926  001AA4                     
  1927                           ; BSR set to: 0
  1928  001AA4  0EC3               	movlw	low sprintf@f
  1929  001AA6  6E52               	movwf	vfprintf@fp^0,c
  1930  001AA8  0E00               	movlw	high sprintf@f
  1931  001AAA  6E53               	movwf	(vfprintf@fp+1)^0,c
  1932  001AAC  C0BB  F054         	movff	sprintf@fmt,vfprintf@fmt
  1933  001AB0  C0BC  F055         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1934  001AB4  0EC1               	movlw	low sprintf@ap
  1935  001AB6  6E56               	movwf	vfprintf@ap^0,c
  1936  001AB8  0E00               	movlw	high sprintf@ap
  1937  001ABA  6E57               	movwf	(vfprintf@ap+1)^0,c
  1938  001ABC  ECB8  F00C         	call	_vfprintf	;wreg free
  1939  001AC0  0100               	movlb	0	; () banked
  1940  001AC2  51C5               	movf	(sprintf@f+2)& (0+255),w,b
  1941  001AC4  25B9               	addwf	sprintf@s& (0+255),w,b
  1942  001AC6  6ED9               	movwf	fsr2l,c
  1943  001AC8  51C6               	movf	(sprintf@f+3)& (0+255),w,b
  1944  001ACA  21BA               	addwfc	(sprintf@s+1)& (0+255),w,b
  1945  001ACC  6EDA               	movwf	fsr2h,c
  1946  001ACE  0E00               	movlw	0
  1947  001AD0  6EDF               	movwf	indf2,c
  1948  001AD2                     
  1949                           ; BSR set to: 0
  1950  001AD2  0012               	return		;funcret
  1951  001AD4                     __end_of_sprintf:
  1952                           	callstack 0
  1953                           
  1954 ;; *************** function _vfprintf *****************
  1955 ;; Defined at:
  1956 ;;		line 1390 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
  1959 ;;		 -> sprintf@f(6), 
  1960 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
  1961 ;;		 -> STR_4(7), STR_3(16), 
  1962 ;;  ap              2   85[COMRAM] PTR PTR void 
  1963 ;;		 -> sprintf@ap(2), 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
  1966 ;;		 -> STR_4(7), STR_3(16), 
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  2   81[COMRAM] int 
  1969 ;; Registers used:
  1970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1976 ;;      Params:         6       0       0       0       0       0       0       0       0
  1977 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1978 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1979 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1980 ;;Total ram usage:        8 bytes
  1981 ;; Hardware stack levels used:    1
  1982 ;; Hardware stack levels required when called:    7
  1983 ;; This function calls:
  1984 ;;		_vfpfcnvrt
  1985 ;; This function is called by:
  1986 ;;		_sprintf
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           	psect	text9
  1991  001970                     __ptext9:
  1992                           	callstack 0
  1993  001970                     _vfprintf:
  1994                           	callstack 21
  1995  001970                     
  1996                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1
      +                          391: {;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1393:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1395:     cfmt = (char *)fmt;
  1997  001970  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
  1998  001974  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1999  001978                     
  2000                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  2001  001978  0E00               	movlw	0
  2002  00197A  0100               	movlb	0	; () banked
  2003  00197C  6F61               	movwf	(_nout+1)& (0+255),b
  2004  00197E  0E00               	movlw	0
  2005  001980  6F60               	movwf	_nout& (0+255),b
  2006                           
  2007                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  2008  001982  EFD6  F00C         	goto	l2664
  2009  001986                     l2662:
  2010                           
  2011                           ; BSR set to: 0
  2012                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1398:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  2013  001986  C052  F042         	movff	vfprintf@fp,vfpfcnvrt@fp
  2014  00198A  C053  F043         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2015  00198E  0E58               	movlw	low vfprintf@cfmt
  2016  001990  6E44               	movwf	vfpfcnvrt@fmt^0,c
  2017  001992  0E00               	movlw	high vfprintf@cfmt
  2018  001994  6E45               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2019  001996  C056  F046         	movff	vfprintf@ap,vfpfcnvrt@ap
  2020  00199A  C057  F047         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2021  00199E  ECB7  F006         	call	_vfpfcnvrt	;wreg free
  2022  0019A2  5042               	movf	?_vfpfcnvrt^0,w,c
  2023  0019A4  0100               	movlb	0	; () banked
  2024  0019A6  2760               	addwf	_nout& (0+255),f,b
  2025  0019A8  5043               	movf	(?_vfpfcnvrt+1)^0,w,c
  2026  0019AA  2361               	addwfc	(_nout+1)& (0+255),f,b
  2027  0019AC                     l2664:
  2028                           
  2029                           ; BSR set to: 0
  2030                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  2031  0019AC  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
  2032  0019B0  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2033  0019B4                     	if	0	;tblptru may be non-zero
  2034  0019B4                     	endif
  2035  0019B4                     	if	0	;tblptru may be non-zero
  2036  0019B4                     	endif
  2037  0019B4  0008               	tblrd		*
  2038  0019B6  50F5               	movf	tablat,w,c
  2039  0019B8  0900               	iorlw	0
  2040  0019BA  A4D8               	btfss	status,2,c
  2041  0019BC  EFE2  F00C         	goto	u2471
  2042  0019C0  EFE4  F00C         	goto	u2470
  2043  0019C4                     u2471:
  2044  0019C4  EFC3  F00C         	goto	l2662
  2045  0019C8                     u2470:
  2046  0019C8                     
  2047                           ; BSR set to: 0
  2048                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1400:     return nout;
  2049  0019C8  C060  F052         	movff	_nout,?_vfprintf
  2050  0019CC  C061  F053         	movff	_nout+1,?_vfprintf+1
  2051  0019D0                     
  2052                           ; BSR set to: 0
  2053  0019D0  0012               	return		;funcret
  2054  0019D2                     __end_of_vfprintf:
  2055                           	callstack 0
  2056                           
  2057 ;; *************** function _vfpfcnvrt *****************
  2058 ;; Defined at:
  2059 ;;		line 692 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;  fp              2   65[COMRAM] PTR struct _IO_FILE
  2062 ;;		 -> sprintf@f(6), 
  2063 ;;  fmt             2   67[COMRAM] PTR PTR unsigned char 
  2064 ;;		 -> vfprintf@cfmt(2), 
  2065 ;;  ap              2   69[COMRAM] PTR PTR void 
  2066 ;;		 -> sprintf@ap(2), 
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;  ll              8   73[COMRAM] long long 
  2069 ;;  llu             8    0        unsigned long long 
  2070 ;;  f               4    0        unsigned long long 
  2071 ;;  vp              3    0        PTR void 
  2072 ;;  ct              3    0        unsigned char [3]
  2073 ;;  cp              3    0        PTR unsigned char 
  2074 ;;  i               2    0        int 
  2075 ;;  done            2    0        int 
  2076 ;;  c               1    0        unsigned char 
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  2   65[COMRAM] int 
  2079 ;; Registers used:
  2080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2086 ;;      Params:         6       0       0       0       0       0       0       0       0
  2087 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2088 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2089 ;;      Totals:        16       0       0       0       0       0       0       0       0
  2090 ;;Total ram usage:       16 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; Hardware stack levels required when called:    6
  2093 ;; This function calls:
  2094 ;;		_dtoa
  2095 ;;		_fputc
  2096 ;; This function is called by:
  2097 ;;		_vfprintf
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text10
  2102  000D6E                     __ptext10:
  2103                           	callstack 0
  2104  000D6E                     _vfpfcnvrt:
  2105                           	callstack 21
  2106  000D6E                     
  2107                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 692: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c
      +                          : 693: {;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 694:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 695:     int done, i;;
      +                          /opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 696:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 697:     unsigned long long llu;
  2108  000D6E  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2109  000D72  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2110  000D76  CFDE FFF6          	movff	postinc2,tblptrl
  2111  000D7A  CFDD FFF7          	movff	postdec2,tblptrh
  2112  000D7E                     	if	0	;tblptru may be non-zero
  2113  000D7E                     	endif
  2114  000D7E                     	if	0	;tblptru may be non-zero
  2115  000D7E                     	endif
  2116  000D7E  0008               	tblrd		*
  2117  000D80  50F5               	movf	tablat,w,c
  2118  000D82  0A25               	xorlw	37
  2119  000D84  A4D8               	btfss	status,2,c
  2120  000D86  EFC7  F006         	goto	u2271
  2121  000D8A  EFC9  F006         	goto	u2270
  2122  000D8E                     u2271:
  2123  000D8E  EF75  F007         	goto	l2572
  2124  000D92                     u2270:
  2125  000D92                     
  2126                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  2127  000D92  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2128  000D96  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2129  000D9A  2ADE               	incf	postinc2,f,c
  2130  000D9C  0E00               	movlw	0
  2131  000D9E  22DD               	addwfc	postdec2,f,c
  2132  000DA0                     
  2133                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 705:         flags = width = 
      +                          0;
  2134  000DA0  0E00               	movlw	0
  2135  000DA2  0100               	movlb	0	; () banked
  2136  000DA4  6F63               	movwf	(_width+1)& (0+255),b
  2137  000DA6  0E00               	movlw	0
  2138  000DA8  6F62               	movwf	_width& (0+255),b
  2139  000DAA  C062  F05B         	movff	_width,_flags
  2140  000DAE  C063  F05C         	movff	_width+1,_flags+1
  2141  000DB2                     
  2142                           ; BSR set to: 0
  2143                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 706:         prec = -1;
  2144  000DB2  6964               	setf	_prec& (0+255),b
  2145  000DB4  6965               	setf	(_prec+1)& (0+255),b
  2146  000DB6                     
  2147                           ; BSR set to: 0
  2148                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 847:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  2149  000DB6  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2150  000DBA  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2151  000DBE  CFDE FFF6          	movff	postinc2,tblptrl
  2152  000DC2  CFDD FFF7          	movff	postdec2,tblptrh
  2153  000DC6                     	if	0	;tblptru may be non-zero
  2154  000DC6                     	endif
  2155  000DC6                     	if	0	;tblptru may be non-zero
  2156  000DC6                     	endif
  2157  000DC6  0008               	tblrd		*
  2158  000DC8  50F5               	movf	tablat,w,c
  2159  000DCA  0A64               	xorlw	100
  2160  000DCC  B4D8               	btfsc	status,2,c
  2161  000DCE  EFEB  F006         	goto	u2281
  2162  000DD2  EFED  F006         	goto	u2280
  2163  000DD6                     u2281:
  2164  000DD6  EFFF  F006         	goto	l2550
  2165  000DDA                     u2280:
  2166  000DDA                     
  2167                           ; BSR set to: 0
  2168  000DDA  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2169  000DDE  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2170  000DE2  CFDE FFF6          	movff	postinc2,tblptrl
  2171  000DE6  CFDD FFF7          	movff	postdec2,tblptrh
  2172  000DEA                     	if	0	;tblptru may be non-zero
  2173  000DEA                     	endif
  2174  000DEA                     	if	0	;tblptru may be non-zero
  2175  000DEA                     	endif
  2176  000DEA  0008               	tblrd		*
  2177  000DEC  50F5               	movf	tablat,w,c
  2178  000DEE  0A69               	xorlw	105
  2179  000DF0  A4D8               	btfss	status,2,c
  2180  000DF2  EFFD  F006         	goto	u2291
  2181  000DF6  EFFF  F006         	goto	u2290
  2182  000DFA                     u2291:
  2183  000DFA  EF3F  F007         	goto	l2556
  2184  000DFE                     u2290:
  2185  000DFE                     l2550:
  2186                           
  2187                           ; BSR set to: 0
  2188                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 849:             ++*fmt;
  2189  000DFE  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2190  000E02  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2191  000E06  2ADE               	incf	postinc2,f,c
  2192  000E08  0E00               	movlw	0
  2193  000E0A  22DD               	addwfc	postdec2,f,c
  2194                           
  2195                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 850:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  2196  000E0C  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2197  000E10  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2198  000E14  CFDF F048          	movff	indf2,??_vfpfcnvrt
  2199  000E18  0E02               	movlw	2
  2200  000E1A  26DE               	addwf	postinc2,f,c
  2201  000E1C  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  2202  000E20  0E00               	movlw	0
  2203  000E22  22DD               	addwfc	postdec2,f,c
  2204  000E24  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2205  000E28  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2206  000E2C  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  2207  000E30  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  2208  000E34  0E00               	movlw	0
  2209  000E36  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2210  000E38  0EFF               	movlw	-1
  2211  000E3A  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  2212  000E3C  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  2213  000E3E  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  2214  000E40  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  2215  000E42  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  2216  000E44  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  2217  000E46                     
  2218                           ; BSR set to: 0
  2219                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 852:             return dtoa(
      +                          fp, ll);
  2220  000E46  C042  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  2221  000E4A  C043  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2222  000E4E  C04A  F020         	movff	vfpfcnvrt@ll,dtoa@d
  2223  000E52  C04B  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2224  000E56  C04C  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2225  000E5A  C04D  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2226  000E5E  C04E  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2227  000E62  C04F  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2228  000E66  C050  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2229  000E6A  C051  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2230  000E6E  EC14  F004         	call	_dtoa	;wreg free
  2231  000E72  C01E  F042         	movff	?_dtoa,?_vfpfcnvrt
  2232  000E76  C01F  F043         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2233  000E7A  EF90  F007         	goto	l950
  2234  000E7E                     l2556:
  2235                           
  2236                           ; BSR set to: 0
  2237                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1372:         if ((*fmt)[0] =
      +                          = '%') {
  2238  000E7E  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2239  000E82  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2240  000E86  CFDE FFF6          	movff	postinc2,tblptrl
  2241  000E8A  CFDD FFF7          	movff	postdec2,tblptrh
  2242  000E8E                     	if	0	;tblptru may be non-zero
  2243  000E8E                     	endif
  2244  000E8E                     	if	0	;tblptru may be non-zero
  2245  000E8E                     	endif
  2246  000E8E  0008               	tblrd		*
  2247  000E90  50F5               	movf	tablat,w,c
  2248  000E92  0A25               	xorlw	37
  2249  000E94  A4D8               	btfss	status,2,c
  2250  000E96  EF4F  F007         	goto	u2301
  2251  000E9A  EF51  F007         	goto	u2300
  2252  000E9E                     u2301:
  2253  000E9E  EF68  F007         	goto	l2566
  2254  000EA2                     u2300:
  2255  000EA2                     
  2256                           ; BSR set to: 0
  2257                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1373:             ++*fmt;
  2258  000EA2  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2259  000EA6  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2260  000EAA  2ADE               	incf	postinc2,f,c
  2261  000EAC  0E00               	movlw	0
  2262  000EAE  22DD               	addwfc	postdec2,f,c
  2263  000EB0                     
  2264                           ; BSR set to: 0
  2265                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1374:             fputc((int)
      +                          '%', fp);
  2266  000EB0  0E00               	movlw	0
  2267  000EB2  6E04               	movwf	(fputc@c+1)^0,c
  2268  000EB4  0E25               	movlw	37
  2269  000EB6  6E03               	movwf	fputc@c^0,c
  2270  000EB8  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2271  000EBC  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2272  000EC0  ECF2  F00A         	call	_fputc	;wreg free
  2273  000EC4                     l2562:
  2274                           
  2275                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1375:             return 1;
  2276  000EC4  0E00               	movlw	0
  2277  000EC6  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  2278  000EC8  0E01               	movlw	1
  2279  000ECA  6E42               	movwf	?_vfpfcnvrt^0,c
  2280  000ECC  EF90  F007         	goto	l950
  2281  000ED0                     l2566:
  2282                           
  2283                           ; BSR set to: 0
  2284                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt;
  2285  000ED0  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2286  000ED4  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2287  000ED8  2ADE               	incf	postinc2,f,c
  2288  000EDA  0E00               	movlw	0
  2289  000EDC  22DD               	addwfc	postdec2,f,c
  2290  000EDE                     
  2291                           ; BSR set to: 0
  2292                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1380:         return 0;
  2293  000EDE  0E00               	movlw	0
  2294  000EE0  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  2295  000EE2  0E00               	movlw	0
  2296  000EE4  6E42               	movwf	?_vfpfcnvrt^0,c
  2297  000EE6  EF90  F007         	goto	l950
  2298  000EEA                     l2572:
  2299                           
  2300                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1384:     fputc((int)(*fmt)[0
      +                          ], fp);
  2301  000EEA  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2302  000EEE  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2303  000EF2  CFDE FFF6          	movff	postinc2,tblptrl
  2304  000EF6  CFDD FFF7          	movff	postdec2,tblptrh
  2305  000EFA                     	if	0	;tblptru may be non-zero
  2306  000EFA                     	endif
  2307  000EFA                     	if	0	;tblptru may be non-zero
  2308  000EFA                     	endif
  2309  000EFA  0008               	tblrd		*
  2310  000EFC  50F5               	movf	tablat,w,c
  2311  000EFE  6E03               	movwf	fputc@c^0,c
  2312  000F00  6A04               	clrf	(fputc@c+1)^0,c
  2313  000F02  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2314  000F06  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2315  000F0A  ECF2  F00A         	call	_fputc	;wreg free
  2316  000F0E                     
  2317                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  2318  000F0E  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2319  000F12  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2320  000F16  2ADE               	incf	postinc2,f,c
  2321  000F18  0E00               	movlw	0
  2322  000F1A  22DD               	addwfc	postdec2,f,c
  2323  000F1C  EF62  F007         	goto	l2562
  2324  000F20                     l950:
  2325  000F20  0012               	return		;funcret
  2326  000F22                     __end_of_vfpfcnvrt:
  2327                           	callstack 0
  2328                           
  2329 ;; *************** function _dtoa *****************
  2330 ;; Defined at:
  2331 ;;		line 287 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  2334 ;;		 -> sprintf@f(6), 
  2335 ;;  d               8   31[COMRAM] long long 
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;  n               8   55[COMRAM] long long 
  2338 ;;  i               2   63[COMRAM] int 
  2339 ;;  s               2   53[COMRAM] int 
  2340 ;;  w               2   51[COMRAM] int 
  2341 ;;  p               2   49[COMRAM] int 
  2342 ;; Return value:  Size  Location     Type
  2343 ;;                  2   29[COMRAM] int 
  2344 ;; Registers used:
  2345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2351 ;;      Params:        10       0       0       0       0       0       0       0       0
  2352 ;;      Locals:        18       0       0       0       0       0       0       0       0
  2353 ;;      Temps:          8       0       0       0       0       0       0       0       0
  2354 ;;      Totals:        36       0       0       0       0       0       0       0       0
  2355 ;;Total ram usage:       36 bytes
  2356 ;; Hardware stack levels used:    1
  2357 ;; Hardware stack levels required when called:    5
  2358 ;; This function calls:
  2359 ;;		___aodiv
  2360 ;;		___aomod
  2361 ;;		_abs
  2362 ;;		_pad
  2363 ;; This function is called by:
  2364 ;;		_vfpfcnvrt
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368                           	psect	text11
  2369  000828                     __ptext11:
  2370                           	callstack 0
  2371  000828                     _dtoa:
  2372                           	callstack 21
  2373  000828                     
  2374                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 287: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 288: {;/opt/mic
      +                          rochip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 289:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.31/pic/sources/c99/common/doprnt.c: 290:     long long n;;/opt/microchip/xc8/v2
      +                          .31/pic/sources/c99/common/doprnt.c: 293:     n = d;
  2375  000828  C020  F038         	movff	dtoa@d,dtoa@n
  2376  00082C  C021  F039         	movff	dtoa@d+1,dtoa@n+1
  2377  000830  C022  F03A         	movff	dtoa@d+2,dtoa@n+2
  2378  000834  C023  F03B         	movff	dtoa@d+3,dtoa@n+3
  2379  000838  C024  F03C         	movff	dtoa@d+4,dtoa@n+4
  2380  00083C  C025  F03D         	movff	dtoa@d+5,dtoa@n+5
  2381  000840  C026  F03E         	movff	dtoa@d+6,dtoa@n+6
  2382  000844  C027  F03F         	movff	dtoa@d+7,dtoa@n+7
  2383  000848                     
  2384                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ? 1 : 0;
  2385  000848  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  2386  00084A  EF29  F004         	goto	u2121
  2387  00084E  EF2C  F004         	goto	u2120
  2388  000852                     u2121:
  2389  000852  0E01               	movlw	1
  2390  000854  EF2D  F004         	goto	u2130
  2391  000858                     u2120:
  2392  000858  0E00               	movlw	0
  2393  00085A                     u2130:
  2394  00085A  6E36               	movwf	dtoa@s^0,c
  2395  00085C  6A37               	clrf	(dtoa@s+1)^0,c
  2396                           
  2397                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 295:     if (s) {
  2398  00085E  5036               	movf	dtoa@s^0,w,c
  2399  000860  1037               	iorwf	(dtoa@s+1)^0,w,c
  2400  000862  B4D8               	btfsc	status,2,c
  2401  000864  EF36  F004         	goto	u2141
  2402  000868  EF38  F004         	goto	u2140
  2403  00086C                     u2141:
  2404  00086C  EF48  F004         	goto	l2482
  2405  000870                     u2140:
  2406  000870                     
  2407                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 296:         n = -n;
  2408  000870  1E3F               	comf	(dtoa@n+7)^0,f,c
  2409  000872  1E3E               	comf	(dtoa@n+6)^0,f,c
  2410  000874  1E3D               	comf	(dtoa@n+5)^0,f,c
  2411  000876  1E3C               	comf	(dtoa@n+4)^0,f,c
  2412  000878  1E3B               	comf	(dtoa@n+3)^0,f,c
  2413  00087A  1E3A               	comf	(dtoa@n+2)^0,f,c
  2414  00087C  1E39               	comf	(dtoa@n+1)^0,f,c
  2415  00087E  6C38               	negf	dtoa@n^0,c
  2416  000880  0E00               	movlw	0
  2417  000882  2239               	addwfc	(dtoa@n+1)^0,f,c
  2418  000884  223A               	addwfc	(dtoa@n+2)^0,f,c
  2419  000886  223B               	addwfc	(dtoa@n+3)^0,f,c
  2420  000888  223C               	addwfc	(dtoa@n+4)^0,f,c
  2421  00088A  223D               	addwfc	(dtoa@n+5)^0,f,c
  2422  00088C  223E               	addwfc	(dtoa@n+6)^0,f,c
  2423  00088E  223F               	addwfc	(dtoa@n+7)^0,f,c
  2424  000890                     l2482:
  2425                           
  2426                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 300:     if (!(prec < 0)) {
  2427  000890  0100               	movlb	0	; () banked
  2428  000892  BF65               	btfsc	(_prec+1)& (0+255),7,b
  2429  000894  EF4E  F004         	goto	u2151
  2430  000898  EF50  F004         	goto	u2150
  2431  00089C                     u2151:
  2432  00089C  EF51  F004         	goto	l2486
  2433  0008A0                     u2150:
  2434  0008A0                     
  2435                           ; BSR set to: 0
  2436                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 301:         flags &= ~(1 << 
      +                          1);
  2437  0008A0  925B               	bcf	_flags^0,1,c
  2438  0008A2                     l2486:
  2439                           
  2440                           ; BSR set to: 0
  2441                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 303:     p = (0 < prec) ? pre
      +                          c : 1;
  2442  0008A2  BF65               	btfsc	(_prec+1)& (0+255),7,b
  2443  0008A4  EF5E  F004         	goto	u2160
  2444  0008A8  5165               	movf	(_prec+1)& (0+255),w,b
  2445  0008AA  E106               	bnz	u2161
  2446  0008AC  0564               	decf	_prec& (0+255),w,b
  2447  0008AE  B0D8               	btfsc	status,0,c
  2448  0008B0  EF5C  F004         	goto	u2161
  2449  0008B4  EF5E  F004         	goto	u2160
  2450  0008B8                     u2161:
  2451  0008B8  EF64  F004         	goto	l923
  2452  0008BC                     u2160:
  2453  0008BC                     
  2454                           ; BSR set to: 0
  2455  0008BC  0E00               	movlw	0
  2456  0008BE  6E33               	movwf	(dtoa@p+1)^0,c
  2457  0008C0  0E01               	movlw	1
  2458  0008C2  6E32               	movwf	dtoa@p^0,c
  2459  0008C4  EF68  F004         	goto	l925
  2460  0008C8                     l923:
  2461                           
  2462                           ; BSR set to: 0
  2463  0008C8  C064  F032         	movff	_prec,dtoa@p
  2464  0008CC  C065  F033         	movff	_prec+1,dtoa@p+1
  2465  0008D0                     l925:
  2466                           
  2467                           ; BSR set to: 0
  2468                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 304:     w = width;
  2469  0008D0  C062  F034         	movff	_width,dtoa@w
  2470  0008D4  C063  F035         	movff	_width+1,dtoa@w+1
  2471  0008D8                     
  2472                           ; BSR set to: 0
  2473                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 305:     if (s || (flags & (1
      +                           << 2))) {
  2474  0008D8  5036               	movf	dtoa@s^0,w,c
  2475  0008DA  1037               	iorwf	(dtoa@s+1)^0,w,c
  2476  0008DC  A4D8               	btfss	status,2,c
  2477  0008DE  EF73  F004         	goto	u2171
  2478  0008E2  EF75  F004         	goto	u2170
  2479  0008E6                     u2171:
  2480  0008E6  EF7C  F004         	goto	l2494
  2481  0008EA                     u2170:
  2482  0008EA                     
  2483                           ; BSR set to: 0
  2484  0008EA  A45B               	btfss	_flags^0,2,c
  2485  0008EC  EF7A  F004         	goto	u2181
  2486  0008F0  EF7C  F004         	goto	u2180
  2487  0008F4                     u2181:
  2488  0008F4  EF7F  F004         	goto	l2496
  2489  0008F8                     u2180:
  2490  0008F8                     l2494:
  2491                           
  2492                           ; BSR set to: 0
  2493                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 306:         --w;
  2494  0008F8  0634               	decf	dtoa@w^0,f,c
  2495  0008FA  A0D8               	btfss	status,0,c
  2496  0008FC  0635               	decf	(dtoa@w+1)^0,f,c
  2497  0008FE                     l2496:
  2498                           
  2499                           ; BSR set to: 0
  2500                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(dbuf) - 1
      +                          ;
  2501  0008FE  0E00               	movlw	0
  2502  000900  6E41               	movwf	(dtoa@i+1)^0,c
  2503  000902  0E1F               	movlw	31
  2504  000904  6E40               	movwf	dtoa@i^0,c
  2505  000906                     
  2506                           ; BSR set to: 0
  2507                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '\0';
  2508  000906  0E00               	movlw	0
  2509  000908  6FB8               	movwf	(_dbuf+31)& (0+255),b
  2510                           
  2511                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2512  00090A  EF03  F005         	goto	l2510
  2513  00090E                     l2500:
  2514                           
  2515                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 313:         --i;
  2516  00090E  0640               	decf	dtoa@i^0,f,c
  2517  000910  A0D8               	btfss	status,0,c
  2518  000912  0641               	decf	(dtoa@i+1)^0,f,c
  2519  000914                     
  2520                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 314:         dbuf[i] = (char)
      +                          ((int)'0' + abs(n % 10));
  2521  000914  0E99               	movlw	low _dbuf
  2522  000916  2440               	addwf	dtoa@i^0,w,c
  2523  000918  6ED9               	movwf	fsr2l,c
  2524  00091A  0E00               	movlw	high _dbuf
  2525  00091C  2041               	addwfc	(dtoa@i+1)^0,w,c
  2526  00091E  6EDA               	movwf	fsr2h,c
  2527  000920  C038  F003         	movff	dtoa@n,___aomod@dividend
  2528  000924  C039  F004         	movff	dtoa@n+1,___aomod@dividend+1
  2529  000928  C03A  F005         	movff	dtoa@n+2,___aomod@dividend+2
  2530  00092C  C03B  F006         	movff	dtoa@n+3,___aomod@dividend+3
  2531  000930  C03C  F007         	movff	dtoa@n+4,___aomod@dividend+4
  2532  000934  C03D  F008         	movff	dtoa@n+5,___aomod@dividend+5
  2533  000938  C03E  F009         	movff	dtoa@n+6,___aomod@dividend+6
  2534  00093C  C03F  F00A         	movff	dtoa@n+7,___aomod@dividend+7
  2535  000940  0E0A               	movlw	10
  2536  000942  6E0B               	movwf	___aomod@divisor^0,c
  2537  000944  0E00               	movlw	0
  2538  000946  6E0C               	movwf	(___aomod@divisor+1)^0,c
  2539  000948  0E00               	movlw	0
  2540  00094A  6E0D               	movwf	(___aomod@divisor+2)^0,c
  2541  00094C  0E00               	movlw	0
  2542  00094E  6E0E               	movwf	(___aomod@divisor+3)^0,c
  2543  000950  0E00               	movlw	0
  2544  000952  6E0F               	movwf	(___aomod@divisor+4)^0,c
  2545  000954  0E00               	movlw	0
  2546  000956  6E10               	movwf	(___aomod@divisor+5)^0,c
  2547  000958  0E00               	movlw	0
  2548  00095A  6E11               	movwf	(___aomod@divisor+6)^0,c
  2549  00095C  0E00               	movlw	0
  2550  00095E  6E12               	movwf	(___aomod@divisor+7)^0,c
  2551  000960  ECD5  F009         	call	___aomod	;wreg free
  2552  000964  C003  F028         	movff	?___aomod,??_dtoa
  2553  000968  C004  F029         	movff	?___aomod+1,??_dtoa+1
  2554  00096C  C005  F02A         	movff	?___aomod+2,??_dtoa+2
  2555  000970  C006  F02B         	movff	?___aomod+3,??_dtoa+3
  2556  000974  C007  F02C         	movff	?___aomod+4,??_dtoa+4
  2557  000978  C008  F02D         	movff	?___aomod+5,??_dtoa+5
  2558  00097C  C009  F02E         	movff	?___aomod+6,??_dtoa+6
  2559  000980  C00A  F02F         	movff	?___aomod+7,??_dtoa+7
  2560  000984  C028  F015         	movff	??_dtoa,abs@a
  2561  000988  C02A  F016         	movff	??_dtoa+2,abs@a+1
  2562  00098C  EC45  F00E         	call	_abs	;wreg free
  2563  000990  5015               	movf	?_abs^0,w,c
  2564  000992  0F30               	addlw	48
  2565  000994  6EDF               	movwf	indf2,c
  2566  000996                     
  2567                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 315:         --p;
  2568  000996  0632               	decf	dtoa@p^0,f,c
  2569  000998  A0D8               	btfss	status,0,c
  2570  00099A  0633               	decf	(dtoa@p+1)^0,f,c
  2571  00099C                     
  2572                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 316:         --w;
  2573  00099C  0634               	decf	dtoa@w^0,f,c
  2574  00099E  A0D8               	btfss	status,0,c
  2575  0009A0  0635               	decf	(dtoa@w+1)^0,f,c
  2576  0009A2                     
  2577                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 317:         n = n / 10;
  2578  0009A2  C038  F003         	movff	dtoa@n,___aodiv@dividend
  2579  0009A6  C039  F004         	movff	dtoa@n+1,___aodiv@dividend+1
  2580  0009AA  C03A  F005         	movff	dtoa@n+2,___aodiv@dividend+2
  2581  0009AE  C03B  F006         	movff	dtoa@n+3,___aodiv@dividend+3
  2582  0009B2  C03C  F007         	movff	dtoa@n+4,___aodiv@dividend+4
  2583  0009B6  C03D  F008         	movff	dtoa@n+5,___aodiv@dividend+5
  2584  0009BA  C03E  F009         	movff	dtoa@n+6,___aodiv@dividend+6
  2585  0009BE  C03F  F00A         	movff	dtoa@n+7,___aodiv@dividend+7
  2586  0009C2  0E0A               	movlw	10
  2587  0009C4  6E0B               	movwf	___aodiv@divisor^0,c
  2588  0009C6  0E00               	movlw	0
  2589  0009C8  6E0C               	movwf	(___aodiv@divisor+1)^0,c
  2590  0009CA  0E00               	movlw	0
  2591  0009CC  6E0D               	movwf	(___aodiv@divisor+2)^0,c
  2592  0009CE  0E00               	movlw	0
  2593  0009D0  6E0E               	movwf	(___aodiv@divisor+3)^0,c
  2594  0009D2  0E00               	movlw	0
  2595  0009D4  6E0F               	movwf	(___aodiv@divisor+4)^0,c
  2596  0009D6  0E00               	movlw	0
  2597  0009D8  6E10               	movwf	(___aodiv@divisor+5)^0,c
  2598  0009DA  0E00               	movlw	0
  2599  0009DC  6E11               	movwf	(___aodiv@divisor+6)^0,c
  2600  0009DE  0E00               	movlw	0
  2601  0009E0  6E12               	movwf	(___aodiv@divisor+7)^0,c
  2602  0009E2  EC56  F008         	call	___aodiv	;wreg free
  2603  0009E6  C003  F038         	movff	?___aodiv,dtoa@n
  2604  0009EA  C004  F039         	movff	?___aodiv+1,dtoa@n+1
  2605  0009EE  C005  F03A         	movff	?___aodiv+2,dtoa@n+2
  2606  0009F2  C006  F03B         	movff	?___aodiv+3,dtoa@n+3
  2607  0009F6  C007  F03C         	movff	?___aodiv+4,dtoa@n+4
  2608  0009FA  C008  F03D         	movff	?___aodiv+5,dtoa@n+5
  2609  0009FE  C009  F03E         	movff	?___aodiv+6,dtoa@n+6
  2610  000A02  C00A  F03F         	movff	?___aodiv+7,dtoa@n+7
  2611  000A06                     l2510:
  2612                           
  2613                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2614  000A06  BE41               	btfsc	(dtoa@i+1)^0,7,c
  2615  000A08  EF0E  F005         	goto	u2191
  2616  000A0C  5041               	movf	(dtoa@i+1)^0,w,c
  2617  000A0E  E108               	bnz	u2190
  2618  000A10  0440               	decf	dtoa@i^0,w,c
  2619  000A12  A0D8               	btfss	status,0,c
  2620  000A14  EF0E  F005         	goto	u2191
  2621  000A18  EF10  F005         	goto	u2190
  2622  000A1C                     u2191:
  2623  000A1C  EF40  F005         	goto	l2520
  2624  000A20                     u2190:
  2625  000A20  5038               	movf	dtoa@n^0,w,c
  2626  000A22  1039               	iorwf	(dtoa@n+1)^0,w,c
  2627  000A24  103A               	iorwf	(dtoa@n+2)^0,w,c
  2628  000A26  103B               	iorwf	(dtoa@n+3)^0,w,c
  2629  000A28  103C               	iorwf	(dtoa@n+4)^0,w,c
  2630  000A2A  103D               	iorwf	(dtoa@n+5)^0,w,c
  2631  000A2C  103E               	iorwf	(dtoa@n+6)^0,w,c
  2632  000A2E  103F               	iorwf	(dtoa@n+7)^0,w,c
  2633  000A30  A4D8               	btfss	status,2,c
  2634  000A32  EF1D  F005         	goto	u2201
  2635  000A36  EF1F  F005         	goto	u2200
  2636  000A3A                     u2201:
  2637  000A3A  EF87  F004         	goto	l2500
  2638  000A3E                     u2200:
  2639  000A3E  BE33               	btfsc	(dtoa@p+1)^0,7,c
  2640  000A40  EF2C  F005         	goto	u2210
  2641  000A44  5033               	movf	(dtoa@p+1)^0,w,c
  2642  000A46  E106               	bnz	u2211
  2643  000A48  0432               	decf	dtoa@p^0,w,c
  2644  000A4A  B0D8               	btfsc	status,0,c
  2645  000A4C  EF2A  F005         	goto	u2211
  2646  000A50  EF2C  F005         	goto	u2210
  2647  000A54                     u2211:
  2648  000A54  EF87  F004         	goto	l2500
  2649  000A58                     u2210:
  2650  000A58  BE35               	btfsc	(dtoa@w+1)^0,7,c
  2651  000A5A  EF37  F005         	goto	u2221
  2652  000A5E  5035               	movf	(dtoa@w+1)^0,w,c
  2653  000A60  E108               	bnz	u2220
  2654  000A62  0434               	decf	dtoa@w^0,w,c
  2655  000A64  A0D8               	btfss	status,0,c
  2656  000A66  EF37  F005         	goto	u2221
  2657  000A6A  EF39  F005         	goto	u2220
  2658  000A6E                     u2221:
  2659  000A6E  EF40  F005         	goto	l2520
  2660  000A72                     u2220:
  2661  000A72  B25B               	btfsc	_flags^0,1,c
  2662  000A74  EF3E  F005         	goto	u2231
  2663  000A78  EF40  F005         	goto	u2230
  2664  000A7C                     u2231:
  2665  000A7C  EF87  F004         	goto	l2500
  2666  000A80                     u2230:
  2667  000A80                     l2520:
  2668                           
  2669                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 321:     if (s || (flags & (1
      +                           << 2))) {
  2670  000A80  5036               	movf	dtoa@s^0,w,c
  2671  000A82  1037               	iorwf	(dtoa@s+1)^0,w,c
  2672  000A84  A4D8               	btfss	status,2,c
  2673  000A86  EF47  F005         	goto	u2241
  2674  000A8A  EF49  F005         	goto	u2240
  2675  000A8E                     u2241:
  2676  000A8E  EF50  F005         	goto	l2524
  2677  000A92                     u2240:
  2678  000A92  A45B               	btfss	_flags^0,2,c
  2679  000A94  EF4E  F005         	goto	u2251
  2680  000A98  EF50  F005         	goto	u2250
  2681  000A9C                     u2251:
  2682  000A9C  EF6E  F005         	goto	l2534
  2683  000AA0                     u2250:
  2684  000AA0                     l2524:
  2685                           
  2686                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 322:         --i;
  2687  000AA0  0640               	decf	dtoa@i^0,f,c
  2688  000AA2  A0D8               	btfss	status,0,c
  2689  000AA4  0641               	decf	(dtoa@i+1)^0,f,c
  2690  000AA6                     
  2691                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 323:         dbuf[i] = s ? '-
      +                          ' : '+';
  2692  000AA6  5036               	movf	dtoa@s^0,w,c
  2693  000AA8  1037               	iorwf	(dtoa@s+1)^0,w,c
  2694  000AAA  A4D8               	btfss	status,2,c
  2695  000AAC  EF5A  F005         	goto	u2261
  2696  000AB0  EF5C  F005         	goto	u2260
  2697  000AB4                     u2261:
  2698  000AB4  EF62  F005         	goto	l2530
  2699  000AB8                     u2260:
  2700  000AB8  0E00               	movlw	0
  2701  000ABA  6E31               	movwf	(_dtoa$1026+1)^0,c
  2702  000ABC  0E2B               	movlw	43
  2703  000ABE  6E30               	movwf	_dtoa$1026^0,c
  2704  000AC0  EF66  F005         	goto	l2532
  2705  000AC4                     l2530:
  2706  000AC4  0E00               	movlw	0
  2707  000AC6  6E31               	movwf	(_dtoa$1026+1)^0,c
  2708  000AC8  0E2D               	movlw	45
  2709  000ACA  6E30               	movwf	_dtoa$1026^0,c
  2710  000ACC                     l2532:
  2711  000ACC  0E99               	movlw	low _dbuf
  2712  000ACE  2440               	addwf	dtoa@i^0,w,c
  2713  000AD0  6ED9               	movwf	fsr2l,c
  2714  000AD2  0E00               	movlw	high _dbuf
  2715  000AD4  2041               	addwfc	(dtoa@i+1)^0,w,c
  2716  000AD6  6EDA               	movwf	fsr2h,c
  2717  000AD8  C030  FFDF         	movff	_dtoa$1026,indf2
  2718  000ADC                     l2534:
  2719                           
  2720                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 327:     return pad(fp, &dbuf
      +                          [i], w);
  2721  000ADC  C01E  F013         	movff	dtoa@fp,pad@fp
  2722  000AE0  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  2723  000AE4  0E99               	movlw	low _dbuf
  2724  000AE6  2440               	addwf	dtoa@i^0,w,c
  2725  000AE8  6E15               	movwf	pad@buf^0,c
  2726  000AEA  0E00               	movlw	high _dbuf
  2727  000AEC  2041               	addwfc	(dtoa@i+1)^0,w,c
  2728  000AEE  6E16               	movwf	(pad@buf+1)^0,c
  2729  000AF0  C034  F017         	movff	dtoa@w,pad@p
  2730  000AF4  C035  F018         	movff	dtoa@w+1,pad@p+1
  2731  000AF8  EC57  F00B         	call	_pad	;wreg free
  2732  000AFC  C013  F01E         	movff	?_pad,?_dtoa
  2733  000B00  C014  F01F         	movff	?_pad+1,?_dtoa+1
  2734  000B04  0012               	return		;funcret
  2735  000B06                     __end_of_dtoa:
  2736                           	callstack 0
  2737                           
  2738 ;; *************** function _pad *****************
  2739 ;; Defined at:
  2740 ;;		line 72 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  2743 ;;		 -> sprintf@f(6), 
  2744 ;;  buf             2   20[COMRAM] PTR unsigned char 
  2745 ;;		 -> dbuf(32), 
  2746 ;;  p               2   22[COMRAM] int 
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;  w               2   27[COMRAM] int 
  2749 ;;  i               2   25[COMRAM] int 
  2750 ;; Return value:  Size  Location     Type
  2751 ;;                  2   18[COMRAM] int 
  2752 ;; Registers used:
  2753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2759 ;;      Params:         6       0       0       0       0       0       0       0       0
  2760 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2761 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2762 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2763 ;;Total ram usage:       11 bytes
  2764 ;; Hardware stack levels used:    1
  2765 ;; Hardware stack levels required when called:    4
  2766 ;; This function calls:
  2767 ;;		_fputc
  2768 ;;		_fputs
  2769 ;;		_strlen
  2770 ;; This function is called by:
  2771 ;;		_dtoa
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775                           	psect	text12
  2776  0016AE                     __ptext12:
  2777                           	callstack 0
  2778  0016AE                     _pad:
  2779                           	callstack 21
  2780  0016AE                     
  2781                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.31/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  2782  0016AE  A05B               	btfss	_flags^0,0,c
  2783  0016B0  EF5C  F00B         	goto	u2071
  2784  0016B4  EF5E  F00B         	goto	u2070
  2785  0016B8                     u2071:
  2786  0016B8  EF68  F00B         	goto	l2454
  2787  0016BC                     u2070:
  2788  0016BC                     
  2789                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  2790  0016BC  C015  F00C         	movff	pad@buf,fputs@s
  2791  0016C0  C016  F00D         	movff	pad@buf+1,fputs@s+1
  2792  0016C4  C013  F00E         	movff	pad@fp,fputs@fp
  2793  0016C8  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  2794  0016CC  EC23  F00E         	call	_fputs	;wreg free
  2795  0016D0                     l2454:
  2796                           
  2797                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  2798  0016D0  BE18               	btfsc	(pad@p+1)^0,7,c
  2799  0016D2  EF6D  F00B         	goto	u2081
  2800  0016D6  EF6F  F00B         	goto	u2080
  2801  0016DA                     u2081:
  2802  0016DA  EF75  F00B         	goto	l2458
  2803  0016DE                     u2080:
  2804  0016DE  C017  F01C         	movff	pad@p,pad@w
  2805  0016E2  C018  F01D         	movff	pad@p+1,pad@w+1
  2806  0016E6  EF79  F00B         	goto	l912
  2807  0016EA                     l2458:
  2808  0016EA  0E00               	movlw	0
  2809  0016EC  6E1D               	movwf	(pad@w+1)^0,c
  2810  0016EE  0E00               	movlw	0
  2811  0016F0  6E1C               	movwf	pad@w^0,c
  2812  0016F2                     l912:
  2813                           
  2814                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  2815  0016F2  0E00               	movlw	0
  2816  0016F4  6E1B               	movwf	(pad@i+1)^0,c
  2817  0016F6  0E00               	movlw	0
  2818  0016F8  6E1A               	movwf	pad@i^0,c
  2819                           
  2820                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  2821  0016FA  EF8B  F00B         	goto	l2464
  2822  0016FE                     l2460:
  2823                           
  2824                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  2825  0016FE  0E00               	movlw	0
  2826  001700  6E04               	movwf	(fputc@c+1)^0,c
  2827  001702  0E20               	movlw	32
  2828  001704  6E03               	movwf	fputc@c^0,c
  2829  001706  C013  F005         	movff	pad@fp,fputc@fp
  2830  00170A  C014  F006         	movff	pad@fp+1,fputc@fp+1
  2831  00170E  ECF2  F00A         	call	_fputc	;wreg free
  2832  001712                     
  2833                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 86:         ++i;
  2834  001712  4A1A               	infsnz	pad@i^0,f,c
  2835  001714  2A1B               	incf	(pad@i+1)^0,f,c
  2836  001716                     l2464:
  2837                           
  2838                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  2839  001716  501C               	movf	pad@w^0,w,c
  2840  001718  5C1A               	subwf	pad@i^0,w,c
  2841  00171A  501B               	movf	(pad@i+1)^0,w,c
  2842  00171C  0A80               	xorlw	128
  2843  00171E  6E19               	movwf	??_pad^0,c
  2844  001720  501D               	movf	(pad@w+1)^0,w,c
  2845  001722  0A80               	xorlw	128
  2846  001724  5819               	subwfb	??_pad^0,w,c
  2847  001726  A0D8               	btfss	status,0,c
  2848  001728  EF98  F00B         	goto	u2091
  2849  00172C  EF9A  F00B         	goto	u2090
  2850  001730                     u2091:
  2851  001730  EF7F  F00B         	goto	l2460
  2852  001734                     u2090:
  2853  001734                     
  2854                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  2855  001734  B05B               	btfsc	_flags^0,0,c
  2856  001736  EF9F  F00B         	goto	u2101
  2857  00173A  EFA1  F00B         	goto	u2100
  2858  00173E                     u2101:
  2859  00173E  EFAB  F00B         	goto	l2468
  2860  001742                     u2100:
  2861  001742                     
  2862                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  2863  001742  C015  F00C         	movff	pad@buf,fputs@s
  2864  001746  C016  F00D         	movff	pad@buf+1,fputs@s+1
  2865  00174A  C013  F00E         	movff	pad@fp,fputs@fp
  2866  00174E  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  2867  001752  EC23  F00E         	call	_fputs	;wreg free
  2868  001756                     l2468:
  2869                           
  2870                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 94:     return (int)(strlen(b
      +                          uf) + (size_t)w);
  2871  001756  C015  F003         	movff	pad@buf,strlen@s
  2872  00175A  C016  F004         	movff	pad@buf+1,strlen@s+1
  2873  00175E  EC6A  F00D         	call	_strlen	;wreg free
  2874  001762  501C               	movf	pad@w^0,w,c
  2875  001764  2403               	addwf	?_strlen^0,w,c
  2876  001766  6E13               	movwf	?_pad^0,c
  2877  001768  501D               	movf	(pad@w+1)^0,w,c
  2878  00176A  2004               	addwfc	(?_strlen+1)^0,w,c
  2879  00176C  6E14               	movwf	(?_pad+1)^0,c
  2880  00176E  0012               	return		;funcret
  2881  001770                     __end_of_pad:
  2882                           	callstack 0
  2883                           
  2884 ;; *************** function _fputs *****************
  2885 ;; Defined at:
  2886 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/nf_fputs.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;  s               2   11[COMRAM] PTR const unsigned char 
  2889 ;;		 -> dbuf(32), 
  2890 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  2891 ;;		 -> sprintf@f(6), 
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;  i               2   16[COMRAM] int 
  2894 ;;  c               1   15[COMRAM] unsigned char 
  2895 ;; Return value:  Size  Location     Type
  2896 ;;                  2   11[COMRAM] int 
  2897 ;; Registers used:
  2898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2904 ;;      Params:         4       0       0       0       0       0       0       0       0
  2905 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2906 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2907 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2908 ;;Total ram usage:        7 bytes
  2909 ;; Hardware stack levels used:    1
  2910 ;; Hardware stack levels required when called:    3
  2911 ;; This function calls:
  2912 ;;		_fputc
  2913 ;; This function is called by:
  2914 ;;		_pad
  2915 ;; This function uses a non-reentrant model
  2916 ;;
  2917                           
  2918                           	psect	text13
  2919  001C46                     __ptext13:
  2920                           	callstack 0
  2921  001C46                     _fputs:
  2922                           	callstack 21
  2923  001C46  0E00               	movlw	0
  2924  001C48  6E12               	movwf	(fputs@i+1)^0,c
  2925  001C4A  0E00               	movlw	0
  2926  001C4C  6E11               	movwf	fputs@i^0,c
  2927  001C4E  EF34  F00E         	goto	l2368
  2928  001C52                     l2364:
  2929  001C52  C010  F003         	movff	fputs@c,fputc@c
  2930  001C56  6A04               	clrf	(fputc@c+1)^0,c
  2931  001C58  C00E  F005         	movff	fputs@fp,fputc@fp
  2932  001C5C  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  2933  001C60  ECF2  F00A         	call	_fputc	;wreg free
  2934  001C64  4A11               	infsnz	fputs@i^0,f,c
  2935  001C66  2A12               	incf	(fputs@i+1)^0,f,c
  2936  001C68                     l2368:
  2937  001C68  5011               	movf	fputs@i^0,w,c
  2938  001C6A  240C               	addwf	fputs@s^0,w,c
  2939  001C6C  6ED9               	movwf	fsr2l,c
  2940  001C6E  5012               	movf	(fputs@i+1)^0,w,c
  2941  001C70  200D               	addwfc	(fputs@s+1)^0,w,c
  2942  001C72  6EDA               	movwf	fsr2h,c
  2943  001C74  50DF               	movf	indf2,w,c
  2944  001C76  6E10               	movwf	fputs@c^0,c
  2945  001C78  5010               	movf	fputs@c^0,w,c
  2946  001C7A  A4D8               	btfss	status,2,c
  2947  001C7C  EF42  F00E         	goto	u1931
  2948  001C80  EF44  F00E         	goto	u1930
  2949  001C84                     u1931:
  2950  001C84  EF29  F00E         	goto	l2364
  2951  001C88                     u1930:
  2952  001C88  0012               	return		;funcret
  2953  001C8A                     __end_of_fputs:
  2954                           	callstack 0
  2955                           
  2956 ;; *************** function _fputc *****************
  2957 ;; Defined at:
  2958 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/nf_fputc.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;  c               2    2[COMRAM] int 
  2961 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  2962 ;;		 -> sprintf@f(6), 
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;		None
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  2    2[COMRAM] int 
  2967 ;; Registers used:
  2968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2974 ;;      Params:         4       0       0       0       0       0       0       0       0
  2975 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2976 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2977 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2978 ;;Total ram usage:        9 bytes
  2979 ;; Hardware stack levels used:    1
  2980 ;; Hardware stack levels required when called:    2
  2981 ;; This function calls:
  2982 ;;		_putch
  2983 ;; This function is called by:
  2984 ;;		_pad
  2985 ;;		_vfpfcnvrt
  2986 ;;		_fputs
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           	psect	text14
  2991  0015E4                     __ptext14:
  2992                           	callstack 0
  2993  0015E4                     _fputc:
  2994                           	callstack 24
  2995  0015E4  5005               	movf	fputc@fp^0,w,c
  2996  0015E6  1006               	iorwf	(fputc@fp+1)^0,w,c
  2997  0015E8  B4D8               	btfsc	status,2,c
  2998  0015EA  EFF9  F00A         	goto	u1871
  2999  0015EE  EFFB  F00A         	goto	u1870
  3000  0015F2                     u1871:
  3001  0015F2  EF04  F00B         	goto	l2342
  3002  0015F6                     u1870:
  3003  0015F6  5005               	movf	fputc@fp^0,w,c
  3004  0015F8  1006               	iorwf	(fputc@fp+1)^0,w,c
  3005  0015FA  A4D8               	btfss	status,2,c
  3006  0015FC  EF02  F00B         	goto	u1881
  3007  001600  EF04  F00B         	goto	u1880
  3008  001604                     u1881:
  3009  001604  EF09  F00B         	goto	l2344
  3010  001608                     u1880:
  3011  001608                     l2342:
  3012  001608  5003               	movf	fputc@c^0,w,c
  3013  00160A  ECE6  F00E         	call	_putch
  3014  00160E  EF56  F00B         	goto	l976
  3015  001612                     l2344:
  3016  001612  EE20 F004          	lfsr	2,4
  3017  001616  5005               	movf	fputc@fp^0,w,c
  3018  001618  26D9               	addwf	fsr2l,f,c
  3019  00161A  5006               	movf	(fputc@fp+1)^0,w,c
  3020  00161C  22DA               	addwfc	fsr2h,f,c
  3021  00161E  50DE               	movf	postinc2,w,c
  3022  001620  10DE               	iorwf	postinc2,w,c
  3023  001622  B4D8               	btfsc	status,2,c
  3024  001624  EF16  F00B         	goto	u1891
  3025  001628  EF18  F00B         	goto	u1890
  3026  00162C                     u1891:
  3027  00162C  EF33  F00B         	goto	l2348
  3028  001630                     u1890:
  3029  001630  EE20 F004          	lfsr	2,4
  3030  001634  5005               	movf	fputc@fp^0,w,c
  3031  001636  26D9               	addwf	fsr2l,f,c
  3032  001638  5006               	movf	(fputc@fp+1)^0,w,c
  3033  00163A  22DA               	addwfc	fsr2h,f,c
  3034  00163C  EE10 F002          	lfsr	1,2
  3035  001640  5005               	movf	fputc@fp^0,w,c
  3036  001642  26E1               	addwf	fsr1l,f,c
  3037  001644  5006               	movf	(fputc@fp+1)^0,w,c
  3038  001646  22E2               	addwfc	fsr1h,f,c
  3039  001648  50DE               	movf	postinc2,w,c
  3040  00164A  5CE6               	subwf	postinc1,w,c
  3041  00164C  50E6               	movf	postinc1,w,c
  3042  00164E  0A80               	xorlw	128
  3043  001650  6E0B               	movwf	(??_fputc+4)^0,c
  3044  001652  50DE               	movf	postinc2,w,c
  3045  001654  0A80               	xorlw	128
  3046  001656  580B               	subwfb	(??_fputc+4)^0,w,c
  3047  001658  B0D8               	btfsc	status,0,c
  3048  00165A  EF31  F00B         	goto	u1901
  3049  00165E  EF33  F00B         	goto	u1900
  3050  001662                     u1901:
  3051  001662  EF56  F00B         	goto	l976
  3052  001666                     u1900:
  3053  001666                     l2348:
  3054  001666  EE20 F002          	lfsr	2,2
  3055  00166A  5005               	movf	fputc@fp^0,w,c
  3056  00166C  26D9               	addwf	fsr2l,f,c
  3057  00166E  5006               	movf	(fputc@fp+1)^0,w,c
  3058  001670  22DA               	addwfc	fsr2h,f,c
  3059  001672  CFDE F007          	movff	postinc2,??_fputc
  3060  001676  CFDD F008          	movff	postdec2,??_fputc+1
  3061  00167A  C005  FFD9         	movff	fputc@fp,fsr2l
  3062  00167E  C006  FFDA         	movff	fputc@fp+1,fsr2h
  3063  001682  CFDE F009          	movff	postinc2,??_fputc+2
  3064  001686  CFDD F00A          	movff	postdec2,??_fputc+3
  3065  00168A  5007               	movf	??_fputc^0,w,c
  3066  00168C  2409               	addwf	(??_fputc+2)^0,w,c
  3067  00168E  6ED9               	movwf	fsr2l,c
  3068  001690  5008               	movf	(??_fputc+1)^0,w,c
  3069  001692  200A               	addwfc	(??_fputc+3)^0,w,c
  3070  001694  6EDA               	movwf	fsr2h,c
  3071  001696  C003  FFDF         	movff	fputc@c,indf2
  3072  00169A  EE20 F002          	lfsr	2,2
  3073  00169E  5005               	movf	fputc@fp^0,w,c
  3074  0016A0  26D9               	addwf	fsr2l,f,c
  3075  0016A2  5006               	movf	(fputc@fp+1)^0,w,c
  3076  0016A4  22DA               	addwfc	fsr2h,f,c
  3077  0016A6  2ADE               	incf	postinc2,f,c
  3078  0016A8  0E00               	movlw	0
  3079  0016AA  22DD               	addwfc	postdec2,f,c
  3080  0016AC                     l976:
  3081  0016AC  0012               	return		;funcret
  3082  0016AE                     __end_of_fputc:
  3083                           	callstack 0
  3084                           
  3085 ;; *************** function _putch *****************
  3086 ;; Defined at:
  3087 ;;		line 7 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/putch.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;  c               1    wreg     unsigned char 
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;  c               1    0[COMRAM] unsigned char 
  3092 ;; Return value:  Size  Location     Type
  3093 ;;                  1    wreg      void 
  3094 ;; Registers used:
  3095 ;;		wreg
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3101 ;;      Params:         0       0       0       0       0       0       0       0       0
  3102 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3103 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3104 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3105 ;;Total ram usage:        0 bytes
  3106 ;; Hardware stack levels used:    1
  3107 ;; Hardware stack levels required when called:    1
  3108 ;; This function calls:
  3109 ;;		Nothing
  3110 ;; This function is called by:
  3111 ;;		_fputc
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115                           	psect	text15
  3116  001DCC                     __ptext15:
  3117                           	callstack 0
  3118  001DCC                     _putch:
  3119                           	callstack 24
  3120  001DCC  0012               	return		;funcret
  3121  001DCE                     __end_of_putch:
  3122                           	callstack 0
  3123                           
  3124 ;; *************** function _abs *****************
  3125 ;; Defined at:
  3126 ;;		line 1 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/abs.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;  a               2   20[COMRAM] int 
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;		None
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  2   20[COMRAM] int 
  3133 ;; Registers used:
  3134 ;;		wreg, status,2, status,0
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3140 ;;      Params:         2       0       0       0       0       0       0       0       0
  3141 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3142 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3143 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3144 ;;Total ram usage:        4 bytes
  3145 ;; Hardware stack levels used:    1
  3146 ;; Hardware stack levels required when called:    1
  3147 ;; This function calls:
  3148 ;;		Nothing
  3149 ;; This function is called by:
  3150 ;;		_dtoa
  3151 ;; This function uses a non-reentrant model
  3152 ;;
  3153                           
  3154                           	psect	text16
  3155  001C8A                     __ptext16:
  3156                           	callstack 0
  3157  001C8A                     _abs:
  3158                           	callstack 24
  3159  001C8A  BE16               	btfsc	(abs@a+1)^0,7,c
  3160  001C8C  EF52  F00E         	goto	u2110
  3161  001C90  5016               	movf	(abs@a+1)^0,w,c
  3162  001C92  E106               	bnz	u2111
  3163  001C94  0415               	decf	abs@a^0,w,c
  3164  001C96  B0D8               	btfsc	status,0,c
  3165  001C98  EF50  F00E         	goto	u2111
  3166  001C9C  EF52  F00E         	goto	u2110
  3167  001CA0                     u2111:
  3168  001CA0  EF60  F00E         	goto	l961
  3169  001CA4                     u2110:
  3170  001CA4  C015  F017         	movff	abs@a,??_abs
  3171  001CA8  C016  F018         	movff	abs@a+1,??_abs+1
  3172  001CAC  1E17               	comf	??_abs^0,f,c
  3173  001CAE  1E18               	comf	(??_abs+1)^0,f,c
  3174  001CB0  4A17               	infsnz	??_abs^0,f,c
  3175  001CB2  2A18               	incf	(??_abs+1)^0,f,c
  3176  001CB4  C017  F015         	movff	??_abs,?_abs
  3177  001CB8  C018  F016         	movff	??_abs+1,?_abs+1
  3178  001CBC  EF64  F00E         	goto	l964
  3179  001CC0                     l961:
  3180  001CC0  C015  F015         	movff	abs@a,?_abs
  3181  001CC4  C016  F016         	movff	abs@a+1,?_abs+1
  3182  001CC8                     l964:
  3183  001CC8  0012               	return		;funcret
  3184  001CCA                     __end_of_abs:
  3185                           	callstack 0
  3186                           
  3187 ;; *************** function ___aomod *****************
  3188 ;; Defined at:
  3189 ;;		line 9 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/aomod.c"
  3190 ;; Parameters:    Size  Location     Type
  3191 ;;  dividend        8    2[COMRAM] long long 
  3192 ;;  divisor         8   10[COMRAM] long long 
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;  sign            1   19[COMRAM] unsigned char 
  3195 ;;  counter         1   18[COMRAM] unsigned char 
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  8    2[COMRAM] long long 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2, status,0
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3205 ;;      Params:        16       0       0       0       0       0       0       0       0
  3206 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3207 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3208 ;;      Totals:        18       0       0       0       0       0       0       0       0
  3209 ;;Total ram usage:       18 bytes
  3210 ;; Hardware stack levels used:    1
  3211 ;; Hardware stack levels required when called:    1
  3212 ;; This function calls:
  3213 ;;		Nothing
  3214 ;; This function is called by:
  3215 ;;		_dtoa
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           	psect	text17
  3220  0013AA                     __ptext17:
  3221                           	callstack 0
  3222  0013AA                     ___aomod:
  3223                           	callstack 24
  3224  0013AA  0E00               	movlw	0
  3225  0013AC  6E14               	movwf	___aomod@sign^0,c
  3226  0013AE  BE0A               	btfsc	(___aomod@dividend+7)^0,7,c
  3227  0013B0  EFDE  F009         	goto	u2010
  3228  0013B4  EFDC  F009         	goto	u2011
  3229  0013B8                     u2011:
  3230  0013B8  EFF0  F009         	goto	l2422
  3231  0013BC                     u2010:
  3232  0013BC  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  3233  0013BE  1E09               	comf	(___aomod@dividend+6)^0,f,c
  3234  0013C0  1E08               	comf	(___aomod@dividend+5)^0,f,c
  3235  0013C2  1E07               	comf	(___aomod@dividend+4)^0,f,c
  3236  0013C4  1E06               	comf	(___aomod@dividend+3)^0,f,c
  3237  0013C6  1E05               	comf	(___aomod@dividend+2)^0,f,c
  3238  0013C8  1E04               	comf	(___aomod@dividend+1)^0,f,c
  3239  0013CA  6C03               	negf	___aomod@dividend^0,c
  3240  0013CC  0E00               	movlw	0
  3241  0013CE  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  3242  0013D0  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  3243  0013D2  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  3244  0013D4  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  3245  0013D6  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  3246  0013D8  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  3247  0013DA  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  3248  0013DC  0E01               	movlw	1
  3249  0013DE  6E14               	movwf	___aomod@sign^0,c
  3250  0013E0                     l2422:
  3251  0013E0  BE12               	btfsc	(___aomod@divisor+7)^0,7,c
  3252  0013E2  EFF7  F009         	goto	u2020
  3253  0013E6  EFF5  F009         	goto	u2021
  3254  0013EA                     u2021:
  3255  0013EA  EF07  F00A         	goto	l2426
  3256  0013EE                     u2020:
  3257  0013EE  1E12               	comf	(___aomod@divisor+7)^0,f,c
  3258  0013F0  1E11               	comf	(___aomod@divisor+6)^0,f,c
  3259  0013F2  1E10               	comf	(___aomod@divisor+5)^0,f,c
  3260  0013F4  1E0F               	comf	(___aomod@divisor+4)^0,f,c
  3261  0013F6  1E0E               	comf	(___aomod@divisor+3)^0,f,c
  3262  0013F8  1E0D               	comf	(___aomod@divisor+2)^0,f,c
  3263  0013FA  1E0C               	comf	(___aomod@divisor+1)^0,f,c
  3264  0013FC  6C0B               	negf	___aomod@divisor^0,c
  3265  0013FE  0E00               	movlw	0
  3266  001400  220C               	addwfc	(___aomod@divisor+1)^0,f,c
  3267  001402  220D               	addwfc	(___aomod@divisor+2)^0,f,c
  3268  001404  220E               	addwfc	(___aomod@divisor+3)^0,f,c
  3269  001406  220F               	addwfc	(___aomod@divisor+4)^0,f,c
  3270  001408  2210               	addwfc	(___aomod@divisor+5)^0,f,c
  3271  00140A  2211               	addwfc	(___aomod@divisor+6)^0,f,c
  3272  00140C  2212               	addwfc	(___aomod@divisor+7)^0,f,c
  3273  00140E                     l2426:
  3274  00140E  500B               	movf	___aomod@divisor^0,w,c
  3275  001410  100C               	iorwf	(___aomod@divisor+1)^0,w,c
  3276  001412  100D               	iorwf	(___aomod@divisor+2)^0,w,c
  3277  001414  100E               	iorwf	(___aomod@divisor+3)^0,w,c
  3278  001416  100F               	iorwf	(___aomod@divisor+4)^0,w,c
  3279  001418  1010               	iorwf	(___aomod@divisor+5)^0,w,c
  3280  00141A  1011               	iorwf	(___aomod@divisor+6)^0,w,c
  3281  00141C  1012               	iorwf	(___aomod@divisor+7)^0,w,c
  3282  00141E  B4D8               	btfsc	status,2,c
  3283  001420  EF14  F00A         	goto	u2031
  3284  001424  EF16  F00A         	goto	u2030
  3285  001428                     u2031:
  3286  001428  EF5E  F00A         	goto	l2442
  3287  00142C                     u2030:
  3288  00142C  0E01               	movlw	1
  3289  00142E  6E13               	movwf	___aomod@counter^0,c
  3290  001430  EF24  F00A         	goto	l2432
  3291  001434                     l2430:
  3292  001434  90D8               	bcf	status,0,c
  3293  001436  360B               	rlcf	___aomod@divisor^0,f,c
  3294  001438  360C               	rlcf	(___aomod@divisor+1)^0,f,c
  3295  00143A  360D               	rlcf	(___aomod@divisor+2)^0,f,c
  3296  00143C  360E               	rlcf	(___aomod@divisor+3)^0,f,c
  3297  00143E  360F               	rlcf	(___aomod@divisor+4)^0,f,c
  3298  001440  3610               	rlcf	(___aomod@divisor+5)^0,f,c
  3299  001442  3611               	rlcf	(___aomod@divisor+6)^0,f,c
  3300  001444  3612               	rlcf	(___aomod@divisor+7)^0,f,c
  3301  001446  2A13               	incf	___aomod@counter^0,f,c
  3302  001448                     l2432:
  3303  001448  AE12               	btfss	(___aomod@divisor+7)^0,7,c
  3304  00144A  EF29  F00A         	goto	u2041
  3305  00144E  EF2B  F00A         	goto	u2040
  3306  001452                     u2041:
  3307  001452  EF1A  F00A         	goto	l2430
  3308  001456                     u2040:
  3309  001456                     l2434:
  3310  001456  500B               	movf	___aomod@divisor^0,w,c
  3311  001458  5C03               	subwf	___aomod@dividend^0,w,c
  3312  00145A  500C               	movf	(___aomod@divisor+1)^0,w,c
  3313  00145C  5804               	subwfb	(___aomod@dividend+1)^0,w,c
  3314  00145E  500D               	movf	(___aomod@divisor+2)^0,w,c
  3315  001460  5805               	subwfb	(___aomod@dividend+2)^0,w,c
  3316  001462  500E               	movf	(___aomod@divisor+3)^0,w,c
  3317  001464  5806               	subwfb	(___aomod@dividend+3)^0,w,c
  3318  001466  500F               	movf	(___aomod@divisor+4)^0,w,c
  3319  001468  5807               	subwfb	(___aomod@dividend+4)^0,w,c
  3320  00146A  5010               	movf	(___aomod@divisor+5)^0,w,c
  3321  00146C  5808               	subwfb	(___aomod@dividend+5)^0,w,c
  3322  00146E  5011               	movf	(___aomod@divisor+6)^0,w,c
  3323  001470  5809               	subwfb	(___aomod@dividend+6)^0,w,c
  3324  001472  5012               	movf	(___aomod@divisor+7)^0,w,c
  3325  001474  580A               	subwfb	(___aomod@dividend+7)^0,w,c
  3326  001476  A0D8               	btfss	status,0,c
  3327  001478  EF40  F00A         	goto	u2051
  3328  00147C  EF42  F00A         	goto	u2050
  3329  001480                     u2051:
  3330  001480  EF52  F00A         	goto	l2438
  3331  001484                     u2050:
  3332  001484  500B               	movf	___aomod@divisor^0,w,c
  3333  001486  5E03               	subwf	___aomod@dividend^0,f,c
  3334  001488  500C               	movf	(___aomod@divisor+1)^0,w,c
  3335  00148A  5A04               	subwfb	(___aomod@dividend+1)^0,f,c
  3336  00148C  500D               	movf	(___aomod@divisor+2)^0,w,c
  3337  00148E  5A05               	subwfb	(___aomod@dividend+2)^0,f,c
  3338  001490  500E               	movf	(___aomod@divisor+3)^0,w,c
  3339  001492  5A06               	subwfb	(___aomod@dividend+3)^0,f,c
  3340  001494  500F               	movf	(___aomod@divisor+4)^0,w,c
  3341  001496  5A07               	subwfb	(___aomod@dividend+4)^0,f,c
  3342  001498  5010               	movf	(___aomod@divisor+5)^0,w,c
  3343  00149A  5A08               	subwfb	(___aomod@dividend+5)^0,f,c
  3344  00149C  5011               	movf	(___aomod@divisor+6)^0,w,c
  3345  00149E  5A09               	subwfb	(___aomod@dividend+6)^0,f,c
  3346  0014A0  5012               	movf	(___aomod@divisor+7)^0,w,c
  3347  0014A2  5A0A               	subwfb	(___aomod@dividend+7)^0,f,c
  3348  0014A4                     l2438:
  3349  0014A4  90D8               	bcf	status,0,c
  3350  0014A6  3212               	rrcf	(___aomod@divisor+7)^0,f,c
  3351  0014A8  3211               	rrcf	(___aomod@divisor+6)^0,f,c
  3352  0014AA  3210               	rrcf	(___aomod@divisor+5)^0,f,c
  3353  0014AC  320F               	rrcf	(___aomod@divisor+4)^0,f,c
  3354  0014AE  320E               	rrcf	(___aomod@divisor+3)^0,f,c
  3355  0014B0  320D               	rrcf	(___aomod@divisor+2)^0,f,c
  3356  0014B2  320C               	rrcf	(___aomod@divisor+1)^0,f,c
  3357  0014B4  320B               	rrcf	___aomod@divisor^0,f,c
  3358  0014B6  2E13               	decfsz	___aomod@counter^0,f,c
  3359  0014B8  EF2B  F00A         	goto	l2434
  3360  0014BC                     l2442:
  3361  0014BC  5014               	movf	___aomod@sign^0,w,c
  3362  0014BE  B4D8               	btfsc	status,2,c
  3363  0014C0  EF64  F00A         	goto	u2061
  3364  0014C4  EF66  F00A         	goto	u2060
  3365  0014C8                     u2061:
  3366  0014C8  EF76  F00A         	goto	l2446
  3367  0014CC                     u2060:
  3368  0014CC  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  3369  0014CE  1E09               	comf	(___aomod@dividend+6)^0,f,c
  3370  0014D0  1E08               	comf	(___aomod@dividend+5)^0,f,c
  3371  0014D2  1E07               	comf	(___aomod@dividend+4)^0,f,c
  3372  0014D4  1E06               	comf	(___aomod@dividend+3)^0,f,c
  3373  0014D6  1E05               	comf	(___aomod@dividend+2)^0,f,c
  3374  0014D8  1E04               	comf	(___aomod@dividend+1)^0,f,c
  3375  0014DA  6C03               	negf	___aomod@dividend^0,c
  3376  0014DC  0E00               	movlw	0
  3377  0014DE  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  3378  0014E0  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  3379  0014E2  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  3380  0014E4  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  3381  0014E6  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  3382  0014E8  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  3383  0014EA  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  3384  0014EC                     l2446:
  3385  0014EC  C003  F003         	movff	___aomod@dividend,?___aomod
  3386  0014F0  C004  F004         	movff	___aomod@dividend+1,?___aomod+1
  3387  0014F4  C005  F005         	movff	___aomod@dividend+2,?___aomod+2
  3388  0014F8  C006  F006         	movff	___aomod@dividend+3,?___aomod+3
  3389  0014FC  C007  F007         	movff	___aomod@dividend+4,?___aomod+4
  3390  001500  C008  F008         	movff	___aomod@dividend+5,?___aomod+5
  3391  001504  C009  F009         	movff	___aomod@dividend+6,?___aomod+6
  3392  001508  C00A  F00A         	movff	___aomod@dividend+7,?___aomod+7
  3393  00150C  0012               	return		;funcret
  3394  00150E                     __end_of___aomod:
  3395                           	callstack 0
  3396                           
  3397 ;; *************** function ___aodiv *****************
  3398 ;; Defined at:
  3399 ;;		line 9 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/aodiv.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;  dividend        8    2[COMRAM] long long 
  3402 ;;  divisor         8   10[COMRAM] long long 
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;  quotient        8   20[COMRAM] long long 
  3405 ;;  sign            1   19[COMRAM] unsigned char 
  3406 ;;  counter         1   18[COMRAM] unsigned char 
  3407 ;; Return value:  Size  Location     Type
  3408 ;;                  8    2[COMRAM] long long 
  3409 ;; Registers used:
  3410 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3411 ;; Tracked objects:
  3412 ;;		On entry : 0/0
  3413 ;;		On exit  : 0/0
  3414 ;;		Unchanged: 0/0
  3415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3416 ;;      Params:        16       0       0       0       0       0       0       0       0
  3417 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3418 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3419 ;;      Totals:        26       0       0       0       0       0       0       0       0
  3420 ;;Total ram usage:       26 bytes
  3421 ;; Hardware stack levels used:    1
  3422 ;; Hardware stack levels required when called:    1
  3423 ;; This function calls:
  3424 ;;		Nothing
  3425 ;; This function is called by:
  3426 ;;		_dtoa
  3427 ;; This function uses a non-reentrant model
  3428 ;;
  3429                           
  3430                           	psect	text18
  3431  0010AC                     __ptext18:
  3432                           	callstack 0
  3433  0010AC                     ___aodiv:
  3434                           	callstack 24
  3435  0010AC  0E00               	movlw	0
  3436  0010AE  6E14               	movwf	___aodiv@sign^0,c
  3437  0010B0  BE12               	btfsc	(___aodiv@divisor+7)^0,7,c
  3438  0010B2  EF5F  F008         	goto	u1940
  3439  0010B6  EF5D  F008         	goto	u1941
  3440  0010BA                     u1941:
  3441  0010BA  EF71  F008         	goto	l2378
  3442  0010BE                     u1940:
  3443  0010BE  1E12               	comf	(___aodiv@divisor+7)^0,f,c
  3444  0010C0  1E11               	comf	(___aodiv@divisor+6)^0,f,c
  3445  0010C2  1E10               	comf	(___aodiv@divisor+5)^0,f,c
  3446  0010C4  1E0F               	comf	(___aodiv@divisor+4)^0,f,c
  3447  0010C6  1E0E               	comf	(___aodiv@divisor+3)^0,f,c
  3448  0010C8  1E0D               	comf	(___aodiv@divisor+2)^0,f,c
  3449  0010CA  1E0C               	comf	(___aodiv@divisor+1)^0,f,c
  3450  0010CC  6C0B               	negf	___aodiv@divisor^0,c
  3451  0010CE  0E00               	movlw	0
  3452  0010D0  220C               	addwfc	(___aodiv@divisor+1)^0,f,c
  3453  0010D2  220D               	addwfc	(___aodiv@divisor+2)^0,f,c
  3454  0010D4  220E               	addwfc	(___aodiv@divisor+3)^0,f,c
  3455  0010D6  220F               	addwfc	(___aodiv@divisor+4)^0,f,c
  3456  0010D8  2210               	addwfc	(___aodiv@divisor+5)^0,f,c
  3457  0010DA  2211               	addwfc	(___aodiv@divisor+6)^0,f,c
  3458  0010DC  2212               	addwfc	(___aodiv@divisor+7)^0,f,c
  3459  0010DE  0E01               	movlw	1
  3460  0010E0  6E14               	movwf	___aodiv@sign^0,c
  3461  0010E2                     l2378:
  3462  0010E2  BE0A               	btfsc	(___aodiv@dividend+7)^0,7,c
  3463  0010E4  EF78  F008         	goto	u1950
  3464  0010E8  EF76  F008         	goto	u1951
  3465  0010EC                     u1951:
  3466  0010EC  EF8A  F008         	goto	l2384
  3467  0010F0                     u1950:
  3468  0010F0  1E0A               	comf	(___aodiv@dividend+7)^0,f,c
  3469  0010F2  1E09               	comf	(___aodiv@dividend+6)^0,f,c
  3470  0010F4  1E08               	comf	(___aodiv@dividend+5)^0,f,c
  3471  0010F6  1E07               	comf	(___aodiv@dividend+4)^0,f,c
  3472  0010F8  1E06               	comf	(___aodiv@dividend+3)^0,f,c
  3473  0010FA  1E05               	comf	(___aodiv@dividend+2)^0,f,c
  3474  0010FC  1E04               	comf	(___aodiv@dividend+1)^0,f,c
  3475  0010FE  6C03               	negf	___aodiv@dividend^0,c
  3476  001100  0E00               	movlw	0
  3477  001102  2204               	addwfc	(___aodiv@dividend+1)^0,f,c
  3478  001104  2205               	addwfc	(___aodiv@dividend+2)^0,f,c
  3479  001106  2206               	addwfc	(___aodiv@dividend+3)^0,f,c
  3480  001108  2207               	addwfc	(___aodiv@dividend+4)^0,f,c
  3481  00110A  2208               	addwfc	(___aodiv@dividend+5)^0,f,c
  3482  00110C  2209               	addwfc	(___aodiv@dividend+6)^0,f,c
  3483  00110E  220A               	addwfc	(___aodiv@dividend+7)^0,f,c
  3484  001110  0E01               	movlw	1
  3485  001112  1A14               	xorwf	___aodiv@sign^0,f,c
  3486  001114                     l2384:
  3487  001114  EE20  F015         	lfsr	2,___aodiv@quotient
  3488  001118  0E07               	movlw	7
  3489  00111A                     u1961:
  3490  00111A  6ADE               	clrf	postinc2,c
  3491  00111C  06E8               	decf	wreg,f,c
  3492  00111E  E2FD               	bc	u1961
  3493  001120  500B               	movf	___aodiv@divisor^0,w,c
  3494  001122  100C               	iorwf	(___aodiv@divisor+1)^0,w,c
  3495  001124  100D               	iorwf	(___aodiv@divisor+2)^0,w,c
  3496  001126  100E               	iorwf	(___aodiv@divisor+3)^0,w,c
  3497  001128  100F               	iorwf	(___aodiv@divisor+4)^0,w,c
  3498  00112A  1010               	iorwf	(___aodiv@divisor+5)^0,w,c
  3499  00112C  1011               	iorwf	(___aodiv@divisor+6)^0,w,c
  3500  00112E  1012               	iorwf	(___aodiv@divisor+7)^0,w,c
  3501  001130  B4D8               	btfsc	status,2,c
  3502  001132  EF9D  F008         	goto	u1971
  3503  001136  EF9F  F008         	goto	u1970
  3504  00113A                     u1971:
  3505  00113A  EFF1  F008         	goto	l2406
  3506  00113E                     u1970:
  3507  00113E  0E01               	movlw	1
  3508  001140  6E13               	movwf	___aodiv@counter^0,c
  3509  001142  EFAD  F008         	goto	l2392
  3510  001146                     l2390:
  3511  001146  90D8               	bcf	status,0,c
  3512  001148  360B               	rlcf	___aodiv@divisor^0,f,c
  3513  00114A  360C               	rlcf	(___aodiv@divisor+1)^0,f,c
  3514  00114C  360D               	rlcf	(___aodiv@divisor+2)^0,f,c
  3515  00114E  360E               	rlcf	(___aodiv@divisor+3)^0,f,c
  3516  001150  360F               	rlcf	(___aodiv@divisor+4)^0,f,c
  3517  001152  3610               	rlcf	(___aodiv@divisor+5)^0,f,c
  3518  001154  3611               	rlcf	(___aodiv@divisor+6)^0,f,c
  3519  001156  3612               	rlcf	(___aodiv@divisor+7)^0,f,c
  3520  001158  2A13               	incf	___aodiv@counter^0,f,c
  3521  00115A                     l2392:
  3522  00115A  AE12               	btfss	(___aodiv@divisor+7)^0,7,c
  3523  00115C  EFB2  F008         	goto	u1981
  3524  001160  EFB4  F008         	goto	u1980
  3525  001164                     u1981:
  3526  001164  EFA3  F008         	goto	l2390
  3527  001168                     u1980:
  3528  001168                     l2394:
  3529  001168  90D8               	bcf	status,0,c
  3530  00116A  3615               	rlcf	___aodiv@quotient^0,f,c
  3531  00116C  3616               	rlcf	(___aodiv@quotient+1)^0,f,c
  3532  00116E  3617               	rlcf	(___aodiv@quotient+2)^0,f,c
  3533  001170  3618               	rlcf	(___aodiv@quotient+3)^0,f,c
  3534  001172  3619               	rlcf	(___aodiv@quotient+4)^0,f,c
  3535  001174  361A               	rlcf	(___aodiv@quotient+5)^0,f,c
  3536  001176  361B               	rlcf	(___aodiv@quotient+6)^0,f,c
  3537  001178  361C               	rlcf	(___aodiv@quotient+7)^0,f,c
  3538  00117A  500B               	movf	___aodiv@divisor^0,w,c
  3539  00117C  5C03               	subwf	___aodiv@dividend^0,w,c
  3540  00117E  500C               	movf	(___aodiv@divisor+1)^0,w,c
  3541  001180  5804               	subwfb	(___aodiv@dividend+1)^0,w,c
  3542  001182  500D               	movf	(___aodiv@divisor+2)^0,w,c
  3543  001184  5805               	subwfb	(___aodiv@dividend+2)^0,w,c
  3544  001186  500E               	movf	(___aodiv@divisor+3)^0,w,c
  3545  001188  5806               	subwfb	(___aodiv@dividend+3)^0,w,c
  3546  00118A  500F               	movf	(___aodiv@divisor+4)^0,w,c
  3547  00118C  5807               	subwfb	(___aodiv@dividend+4)^0,w,c
  3548  00118E  5010               	movf	(___aodiv@divisor+5)^0,w,c
  3549  001190  5808               	subwfb	(___aodiv@dividend+5)^0,w,c
  3550  001192  5011               	movf	(___aodiv@divisor+6)^0,w,c
  3551  001194  5809               	subwfb	(___aodiv@dividend+6)^0,w,c
  3552  001196  5012               	movf	(___aodiv@divisor+7)^0,w,c
  3553  001198  580A               	subwfb	(___aodiv@dividend+7)^0,w,c
  3554  00119A  A0D8               	btfss	status,0,c
  3555  00119C  EFD2  F008         	goto	u1991
  3556  0011A0  EFD4  F008         	goto	u1990
  3557  0011A4                     u1991:
  3558  0011A4  EFE5  F008         	goto	l2402
  3559  0011A8                     u1990:
  3560  0011A8  500B               	movf	___aodiv@divisor^0,w,c
  3561  0011AA  5E03               	subwf	___aodiv@dividend^0,f,c
  3562  0011AC  500C               	movf	(___aodiv@divisor+1)^0,w,c
  3563  0011AE  5A04               	subwfb	(___aodiv@dividend+1)^0,f,c
  3564  0011B0  500D               	movf	(___aodiv@divisor+2)^0,w,c
  3565  0011B2  5A05               	subwfb	(___aodiv@dividend+2)^0,f,c
  3566  0011B4  500E               	movf	(___aodiv@divisor+3)^0,w,c
  3567  0011B6  5A06               	subwfb	(___aodiv@dividend+3)^0,f,c
  3568  0011B8  500F               	movf	(___aodiv@divisor+4)^0,w,c
  3569  0011BA  5A07               	subwfb	(___aodiv@dividend+4)^0,f,c
  3570  0011BC  5010               	movf	(___aodiv@divisor+5)^0,w,c
  3571  0011BE  5A08               	subwfb	(___aodiv@dividend+5)^0,f,c
  3572  0011C0  5011               	movf	(___aodiv@divisor+6)^0,w,c
  3573  0011C2  5A09               	subwfb	(___aodiv@dividend+6)^0,f,c
  3574  0011C4  5012               	movf	(___aodiv@divisor+7)^0,w,c
  3575  0011C6  5A0A               	subwfb	(___aodiv@dividend+7)^0,f,c
  3576  0011C8  8015               	bsf	___aodiv@quotient^0,0,c
  3577  0011CA                     l2402:
  3578  0011CA  90D8               	bcf	status,0,c
  3579  0011CC  3212               	rrcf	(___aodiv@divisor+7)^0,f,c
  3580  0011CE  3211               	rrcf	(___aodiv@divisor+6)^0,f,c
  3581  0011D0  3210               	rrcf	(___aodiv@divisor+5)^0,f,c
  3582  0011D2  320F               	rrcf	(___aodiv@divisor+4)^0,f,c
  3583  0011D4  320E               	rrcf	(___aodiv@divisor+3)^0,f,c
  3584  0011D6  320D               	rrcf	(___aodiv@divisor+2)^0,f,c
  3585  0011D8  320C               	rrcf	(___aodiv@divisor+1)^0,f,c
  3586  0011DA  320B               	rrcf	___aodiv@divisor^0,f,c
  3587  0011DC  2E13               	decfsz	___aodiv@counter^0,f,c
  3588  0011DE  EFB4  F008         	goto	l2394
  3589  0011E2                     l2406:
  3590  0011E2  5014               	movf	___aodiv@sign^0,w,c
  3591  0011E4  B4D8               	btfsc	status,2,c
  3592  0011E6  EFF7  F008         	goto	u2001
  3593  0011EA  EFF9  F008         	goto	u2000
  3594  0011EE                     u2001:
  3595  0011EE  EF09  F009         	goto	l2410
  3596  0011F2                     u2000:
  3597  0011F2  1E1C               	comf	(___aodiv@quotient+7)^0,f,c
  3598  0011F4  1E1B               	comf	(___aodiv@quotient+6)^0,f,c
  3599  0011F6  1E1A               	comf	(___aodiv@quotient+5)^0,f,c
  3600  0011F8  1E19               	comf	(___aodiv@quotient+4)^0,f,c
  3601  0011FA  1E18               	comf	(___aodiv@quotient+3)^0,f,c
  3602  0011FC  1E17               	comf	(___aodiv@quotient+2)^0,f,c
  3603  0011FE  1E16               	comf	(___aodiv@quotient+1)^0,f,c
  3604  001200  6C15               	negf	___aodiv@quotient^0,c
  3605  001202  0E00               	movlw	0
  3606  001204  2216               	addwfc	(___aodiv@quotient+1)^0,f,c
  3607  001206  2217               	addwfc	(___aodiv@quotient+2)^0,f,c
  3608  001208  2218               	addwfc	(___aodiv@quotient+3)^0,f,c
  3609  00120A  2219               	addwfc	(___aodiv@quotient+4)^0,f,c
  3610  00120C  221A               	addwfc	(___aodiv@quotient+5)^0,f,c
  3611  00120E  221B               	addwfc	(___aodiv@quotient+6)^0,f,c
  3612  001210  221C               	addwfc	(___aodiv@quotient+7)^0,f,c
  3613  001212                     l2410:
  3614  001212  C015  F003         	movff	___aodiv@quotient,?___aodiv
  3615  001216  C016  F004         	movff	___aodiv@quotient+1,?___aodiv+1
  3616  00121A  C017  F005         	movff	___aodiv@quotient+2,?___aodiv+2
  3617  00121E  C018  F006         	movff	___aodiv@quotient+3,?___aodiv+3
  3618  001222  C019  F007         	movff	___aodiv@quotient+4,?___aodiv+4
  3619  001226  C01A  F008         	movff	___aodiv@quotient+5,?___aodiv+5
  3620  00122A  C01B  F009         	movff	___aodiv@quotient+6,?___aodiv+6
  3621  00122E  C01C  F00A         	movff	___aodiv@quotient+7,?___aodiv+7
  3622  001232  0012               	return		;funcret
  3623  001234                     __end_of___aodiv:
  3624                           	callstack 0
  3625                           
  3626 ;; *************** function _memset *****************
  3627 ;; Defined at:
  3628 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/memset.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;  dest            2    2[COMRAM] PTR void 
  3631 ;;		 -> data_out(50), dht_raw_data(80), data_in(512), 
  3632 ;;  c               2    4[COMRAM] int 
  3633 ;;  n               2    6[COMRAM] unsigned int 
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  s               2   12[COMRAM] PTR unsigned char 
  3636 ;;		 -> data_out(50), dht_raw_data(80), data_in(512), 
  3637 ;;  k               2   10[COMRAM] unsigned int 
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  2    2[COMRAM] PTR void 
  3640 ;; Registers used:
  3641 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3647 ;;      Params:         6       0       0       0       0       0       0       0       0
  3648 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3649 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3650 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3651 ;;Total ram usage:       12 bytes
  3652 ;; Hardware stack levels used:    1
  3653 ;; Hardware stack levels required when called:    1
  3654 ;; This function calls:
  3655 ;;		Nothing
  3656 ;; This function is called by:
  3657 ;;		_main
  3658 ;;		_dht_read
  3659 ;;		_get_action
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           	psect	text19
  3664  001234                     __ptext19:
  3665                           	callstack 0
  3666  001234                     _memset:
  3667                           	callstack 29
  3668  001234  C003  F00D         	movff	memset@dest,memset@s
  3669  001238  C004  F00E         	movff	memset@dest+1,memset@s+1
  3670  00123C  5007               	movf	memset@n^0,w,c
  3671  00123E  1008               	iorwf	(memset@n+1)^0,w,c
  3672  001240  A4D8               	btfss	status,2,c
  3673  001242  EF25  F009         	goto	u2481
  3674  001246  EF27  F009         	goto	u2480
  3675  00124A                     u2481:
  3676  00124A  EF29  F009         	goto	l2670
  3677  00124E                     u2480:
  3678  00124E  EFD4  F009         	goto	l872
  3679  001252                     l2670:
  3680  001252  C00D  FFD9         	movff	memset@s,fsr2l
  3681  001256  C00E  FFDA         	movff	memset@s+1,fsr2h
  3682  00125A  C005  FFDF         	movff	memset@c,indf2
  3683  00125E  5007               	movf	memset@n^0,w,c
  3684  001260  240D               	addwf	memset@s^0,w,c
  3685  001262  6E09               	movwf	??_memset^0,c
  3686  001264  5008               	movf	(memset@n+1)^0,w,c
  3687  001266  200E               	addwfc	(memset@s+1)^0,w,c
  3688  001268  6E0A               	movwf	(??_memset+1)^0,c
  3689  00126A  0EFF               	movlw	255
  3690  00126C  2409               	addwf	??_memset^0,w,c
  3691  00126E  6ED9               	movwf	fsr2l,c
  3692  001270  0EFF               	movlw	255
  3693  001272  200A               	addwfc	(??_memset+1)^0,w,c
  3694  001274  6EDA               	movwf	fsr2h,c
  3695  001276  C005  FFDF         	movff	memset@c,indf2
  3696  00127A  5008               	movf	(memset@n+1)^0,w,c
  3697  00127C  E107               	bnz	u2491
  3698  00127E  0E03               	movlw	3
  3699  001280  5C07               	subwf	memset@n^0,w,c
  3700  001282  B0D8               	btfsc	status,0,c
  3701  001284  EF46  F009         	goto	u2491
  3702  001288  EF48  F009         	goto	u2490
  3703  00128C                     u2491:
  3704  00128C  EF4A  F009         	goto	l2676
  3705  001290                     u2490:
  3706  001290  EFD4  F009         	goto	l872
  3707  001294                     l2676:
  3708  001294  EE20 F001          	lfsr	2,1
  3709  001298  500D               	movf	memset@s^0,w,c
  3710  00129A  26D9               	addwf	fsr2l,f,c
  3711  00129C  500E               	movf	(memset@s+1)^0,w,c
  3712  00129E  22DA               	addwfc	fsr2h,f,c
  3713  0012A0  C005  FFDF         	movff	memset@c,indf2
  3714  0012A4  EE20 F002          	lfsr	2,2
  3715  0012A8  500D               	movf	memset@s^0,w,c
  3716  0012AA  26D9               	addwf	fsr2l,f,c
  3717  0012AC  500E               	movf	(memset@s+1)^0,w,c
  3718  0012AE  22DA               	addwfc	fsr2h,f,c
  3719  0012B0  C005  FFDF         	movff	memset@c,indf2
  3720  0012B4  5007               	movf	memset@n^0,w,c
  3721  0012B6  240D               	addwf	memset@s^0,w,c
  3722  0012B8  6E09               	movwf	??_memset^0,c
  3723  0012BA  5008               	movf	(memset@n+1)^0,w,c
  3724  0012BC  200E               	addwfc	(memset@s+1)^0,w,c
  3725  0012BE  6E0A               	movwf	(??_memset+1)^0,c
  3726  0012C0  0EFE               	movlw	254
  3727  0012C2  2409               	addwf	??_memset^0,w,c
  3728  0012C4  6ED9               	movwf	fsr2l,c
  3729  0012C6  0EFF               	movlw	255
  3730  0012C8  200A               	addwfc	(??_memset+1)^0,w,c
  3731  0012CA  6EDA               	movwf	fsr2h,c
  3732  0012CC  C005  FFDF         	movff	memset@c,indf2
  3733  0012D0  5007               	movf	memset@n^0,w,c
  3734  0012D2  240D               	addwf	memset@s^0,w,c
  3735  0012D4  6E09               	movwf	??_memset^0,c
  3736  0012D6  5008               	movf	(memset@n+1)^0,w,c
  3737  0012D8  200E               	addwfc	(memset@s+1)^0,w,c
  3738  0012DA  6E0A               	movwf	(??_memset+1)^0,c
  3739  0012DC  0EFD               	movlw	253
  3740  0012DE  2409               	addwf	??_memset^0,w,c
  3741  0012E0  6ED9               	movwf	fsr2l,c
  3742  0012E2  0EFF               	movlw	255
  3743  0012E4  200A               	addwfc	(??_memset+1)^0,w,c
  3744  0012E6  6EDA               	movwf	fsr2h,c
  3745  0012E8  C005  FFDF         	movff	memset@c,indf2
  3746  0012EC  5008               	movf	(memset@n+1)^0,w,c
  3747  0012EE  E107               	bnz	u2501
  3748  0012F0  0E07               	movlw	7
  3749  0012F2  5C07               	subwf	memset@n^0,w,c
  3750  0012F4  B0D8               	btfsc	status,0,c
  3751  0012F6  EF7F  F009         	goto	u2501
  3752  0012FA  EF81  F009         	goto	u2500
  3753  0012FE                     u2501:
  3754  0012FE  EF83  F009         	goto	l2682
  3755  001302                     u2500:
  3756  001302  EFD4  F009         	goto	l872
  3757  001306                     l2682:
  3758  001306  EE20 F003          	lfsr	2,3
  3759  00130A  500D               	movf	memset@s^0,w,c
  3760  00130C  26D9               	addwf	fsr2l,f,c
  3761  00130E  500E               	movf	(memset@s+1)^0,w,c
  3762  001310  22DA               	addwfc	fsr2h,f,c
  3763  001312  C005  FFDF         	movff	memset@c,indf2
  3764  001316  5007               	movf	memset@n^0,w,c
  3765  001318  240D               	addwf	memset@s^0,w,c
  3766  00131A  6E09               	movwf	??_memset^0,c
  3767  00131C  5008               	movf	(memset@n+1)^0,w,c
  3768  00131E  200E               	addwfc	(memset@s+1)^0,w,c
  3769  001320  6E0A               	movwf	(??_memset+1)^0,c
  3770  001322  0EFC               	movlw	252
  3771  001324  2409               	addwf	??_memset^0,w,c
  3772  001326  6ED9               	movwf	fsr2l,c
  3773  001328  0EFF               	movlw	255
  3774  00132A  200A               	addwfc	(??_memset+1)^0,w,c
  3775  00132C  6EDA               	movwf	fsr2h,c
  3776  00132E  C005  FFDF         	movff	memset@c,indf2
  3777  001332  5008               	movf	(memset@n+1)^0,w,c
  3778  001334  E107               	bnz	u2511
  3779  001336  0E09               	movlw	9
  3780  001338  5C07               	subwf	memset@n^0,w,c
  3781  00133A  B0D8               	btfsc	status,0,c
  3782  00133C  EFA2  F009         	goto	u2511
  3783  001340  EFA4  F009         	goto	u2510
  3784  001344                     u2511:
  3785  001344  EFA6  F009         	goto	l2688
  3786  001348                     u2510:
  3787  001348  EFD4  F009         	goto	l872
  3788  00134C                     l2688:
  3789  00134C  C00D  F009         	movff	memset@s,??_memset
  3790  001350  C00E  F00A         	movff	memset@s+1,??_memset+1
  3791  001354  1E09               	comf	??_memset^0,f,c
  3792  001356  1E0A               	comf	(??_memset+1)^0,f,c
  3793  001358  4A09               	infsnz	??_memset^0,f,c
  3794  00135A  2A0A               	incf	(??_memset+1)^0,f,c
  3795  00135C  0E03               	movlw	3
  3796  00135E  1409               	andwf	??_memset^0,w,c
  3797  001360  6E0B               	movwf	memset@k^0,c
  3798  001362  6A0C               	clrf	(memset@k+1)^0,c
  3799  001364  500B               	movf	memset@k^0,w,c
  3800  001366  260D               	addwf	memset@s^0,f,c
  3801  001368  500C               	movf	(memset@k+1)^0,w,c
  3802  00136A  220E               	addwfc	(memset@s+1)^0,f,c
  3803  00136C  500B               	movf	memset@k^0,w,c
  3804  00136E  5E07               	subwf	memset@n^0,f,c
  3805  001370  500C               	movf	(memset@k+1)^0,w,c
  3806  001372  5A08               	subwfb	(memset@n+1)^0,f,c
  3807  001374  0EFC               	movlw	252
  3808  001376  1607               	andwf	memset@n^0,f,c
  3809  001378  0EFF               	movlw	255
  3810  00137A  1608               	andwf	(memset@n+1)^0,f,c
  3811  00137C  EFCB  F009         	goto	l2696
  3812  001380                     l2690:
  3813  001380  C00D  FFD9         	movff	memset@s,fsr2l
  3814  001384  C00E  FFDA         	movff	memset@s+1,fsr2h
  3815  001388  C005  FFDF         	movff	memset@c,indf2
  3816  00138C  0607               	decf	memset@n^0,f,c
  3817  00138E  A0D8               	btfss	status,0,c
  3818  001390  0608               	decf	(memset@n+1)^0,f,c
  3819  001392  4A0D               	infsnz	memset@s^0,f,c
  3820  001394  2A0E               	incf	(memset@s+1)^0,f,c
  3821  001396                     l2696:
  3822  001396  5007               	movf	memset@n^0,w,c
  3823  001398  1008               	iorwf	(memset@n+1)^0,w,c
  3824  00139A  A4D8               	btfss	status,2,c
  3825  00139C  EFD2  F009         	goto	u2521
  3826  0013A0  EFD4  F009         	goto	u2520
  3827  0013A4                     u2521:
  3828  0013A4  EFC0  F009         	goto	l2690
  3829  0013A8                     u2520:
  3830  0013A8                     l872:
  3831  0013A8  0012               	return		;funcret
  3832  0013AA                     __end_of_memset:
  3833                           	callstack 0
  3834                           
  3835 ;; *************** function _dht_read_bit *****************
  3836 ;; Defined at:
  3837 ;;		line 194 in file "main.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;		None
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;		None
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  2    2[COMRAM] int 
  3844 ;; Registers used:
  3845 ;;		wreg, status,2
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3851 ;;      Params:         2       0       0       0       0       0       0       0       0
  3852 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3853 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3854 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3855 ;;Total ram usage:        2 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; Hardware stack levels required when called:    1
  3858 ;; This function calls:
  3859 ;;		Nothing
  3860 ;; This function is called by:
  3861 ;;		_dht_read
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           	psect	text20
  3866  001BBA                     __ptext20:
  3867                           	callstack 0
  3868  001BBA                     _dht_read_bit:
  3869                           	callstack 28
  3870  001BBA                     l107:
  3871  001BBA  A483               	btfss	131,2,c	;volatile
  3872  001BBC  EFE2  F00D         	goto	u2531
  3873  001BC0  EFE4  F00D         	goto	u2530
  3874  001BC4                     u2531:
  3875  001BC4  EFDD  F00D         	goto	l107
  3876  001BC8                     u2530:
  3877  001BC8                     
  3878                           ;main.c: 196:     _delay((unsigned long)((30)*(16000000/4000000.0)));
  3879  001BC8  0E28               	movlw	40
  3880  001BCA                     u2817:
  3881  001BCA  2EE8               	decfsz	wreg,f,c
  3882  001BCC  D7FE               	bra	u2817
  3883  001BCE                     
  3884                           ;main.c: 198:     if (PORTDbits.RD2 == 1) {
  3885  001BCE  A483               	btfss	131,2,c	;volatile
  3886  001BD0  EFEC  F00D         	goto	u2541
  3887  001BD4  EFEE  F00D         	goto	u2540
  3888  001BD8                     u2541:
  3889  001BD8  EFFB  F00D         	goto	l2712
  3890  001BDC                     u2540:
  3891  001BDC                     l111:
  3892  001BDC  B483               	btfsc	131,2,c	;volatile
  3893  001BDE  EFF3  F00D         	goto	u2551
  3894  001BE2  EFF5  F00D         	goto	u2550
  3895  001BE6                     u2551:
  3896  001BE6  EFEE  F00D         	goto	l111
  3897  001BEA                     u2550:
  3898  001BEA                     
  3899                           ;main.c: 200:         return 1;
  3900  001BEA  0E00               	movlw	0
  3901  001BEC  6E04               	movwf	(?_dht_read_bit+1)^0,c
  3902  001BEE  0E01               	movlw	1
  3903  001BF0  6E03               	movwf	?_dht_read_bit^0,c
  3904  001BF2  EFFF  F00D         	goto	l114
  3905  001BF6                     l2712:
  3906                           
  3907                           ;main.c: 202:         return 0;
  3908  001BF6  0E00               	movlw	0
  3909  001BF8  6E04               	movwf	(?_dht_read_bit+1)^0,c
  3910  001BFA  0E00               	movlw	0
  3911  001BFC  6E03               	movwf	?_dht_read_bit^0,c
  3912  001BFE                     l114:
  3913  001BFE  0012               	return		;funcret
  3914  001C00                     __end_of_dht_read_bit:
  3915                           	callstack 0
  3916                           
  3917 ;; *************** function _USART_SendString *****************
  3918 ;; Defined at:
  3919 ;;		line 274 in file "main.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;  data            2    6[COMRAM] PTR unsigned char 
  3922 ;;		 -> data_out(50), 
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;  index           1   10[COMRAM] unsigned char 
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  1    wreg      void 
  3927 ;; Registers used:
  3928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3934 ;;      Params:         2       0       0       0       0       0       0       0       0
  3935 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3936 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3937 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3938 ;;Total ram usage:        5 bytes
  3939 ;; Hardware stack levels used:    1
  3940 ;; Hardware stack levels required when called:    2
  3941 ;; This function calls:
  3942 ;;		_USART_SendChar
  3943 ;;		_strlen
  3944 ;; This function is called by:
  3945 ;;		_dht_read
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949                           	psect	text21
  3950  001C00                     __ptext21:
  3951                           	callstack 0
  3952  001C00                     _USART_SendString:
  3953                           	callstack 27
  3954  001C00                     
  3955                           ;main.c: 275:     for (uint8_t index = 0; index < strlen(data); index++) {
  3956  001C00  0E00               	movlw	0
  3957  001C02  6E0B               	movwf	USART_SendString@index^0,c
  3958  001C04  EF0E  F00E         	goto	l2734
  3959  001C08                     l2730:
  3960                           
  3961                           ;main.c: 276:         USART_SendChar(data[index]);
  3962  001C08  500B               	movf	USART_SendString@index^0,w,c
  3963  001C0A  2407               	addwf	USART_SendString@data^0,w,c
  3964  001C0C  6ED9               	movwf	fsr2l,c
  3965  001C0E  0E00               	movlw	0
  3966  001C10  2008               	addwfc	(USART_SendString@data+1)^0,w,c
  3967  001C12  6EDA               	movwf	fsr2h,c
  3968  001C14  50DF               	movf	indf2,w,c
  3969  001C16  ECD9  F00E         	call	_USART_SendChar
  3970  001C1A                     
  3971                           ;main.c: 277:     }
  3972  001C1A  2A0B               	incf	USART_SendString@index^0,f,c
  3973  001C1C                     l2734:
  3974  001C1C  C007  F003         	movff	USART_SendString@data,strlen@s
  3975  001C20  C008  F004         	movff	USART_SendString@data+1,strlen@s+1
  3976  001C24  EC6A  F00D         	call	_strlen	;wreg free
  3977  001C28  500B               	movf	USART_SendString@index^0,w,c
  3978  001C2A  6E09               	movwf	??_USART_SendString^0,c
  3979  001C2C  6A0A               	clrf	(??_USART_SendString+1)^0,c
  3980  001C2E  5003               	movf	?_strlen^0,w,c
  3981  001C30  5C09               	subwf	??_USART_SendString^0,w,c
  3982  001C32  5004               	movf	(?_strlen+1)^0,w,c
  3983  001C34  580A               	subwfb	(??_USART_SendString+1)^0,w,c
  3984  001C36  A0D8               	btfss	status,0,c
  3985  001C38  EF20  F00E         	goto	u2561
  3986  001C3C  EF22  F00E         	goto	u2560
  3987  001C40                     u2561:
  3988  001C40  EF04  F00E         	goto	l2730
  3989  001C44                     u2560:
  3990  001C44  0012               	return		;funcret
  3991  001C46                     __end_of_USART_SendString:
  3992                           	callstack 0
  3993                           
  3994 ;; *************** function _USART_SendChar *****************
  3995 ;; Defined at:
  3996 ;;		line 269 in file "main.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;  data            1    wreg     unsigned char 
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;  data            1    2[COMRAM] unsigned char 
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  1    wreg      void 
  4003 ;; Registers used:
  4004 ;;		wreg
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4010 ;;      Params:         0       0       0       0       0       0       0       0       0
  4011 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4012 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4013 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4014 ;;Total ram usage:        1 bytes
  4015 ;; Hardware stack levels used:    1
  4016 ;; Hardware stack levels required when called:    1
  4017 ;; This function calls:
  4018 ;;		Nothing
  4019 ;; This function is called by:
  4020 ;;		_USART_SendString
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024                           	psect	text22
  4025  001DB2                     __ptext22:
  4026                           	callstack 0
  4027  001DB2                     _USART_SendChar:
  4028                           	callstack 27
  4029                           
  4030                           ;incstack = 0
  4031                           ;USART_SendChar@data stored from wreg
  4032  001DB2  6E03               	movwf	USART_SendChar@data^0,c
  4033  001DB4                     l140:
  4034  001DB4  A89E               	btfss	3998,4,c	;volatile
  4035  001DB6  EFDF  F00E         	goto	u2421
  4036  001DBA  EFE1  F00E         	goto	u2420
  4037  001DBE                     u2421:
  4038  001DBE  EFDA  F00E         	goto	l140
  4039  001DC2                     u2420:
  4040  001DC2                     
  4041                           ;main.c: 271:     TXREG = data;
  4042  001DC2  C003  FFAD         	movff	USART_SendChar@data,4013	;volatile
  4043  001DC6  0012               	return		;funcret
  4044  001DC8                     __end_of_USART_SendChar:
  4045                           	callstack 0
  4046                           
  4047 ;; *************** function _data_received *****************
  4048 ;; Defined at:
  4049 ;;		line 206 in file "main.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;		None
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;  ptr             2   19[COMRAM] PTR unsigned char 
  4054 ;;		 -> NULL(0), data_in(512), 
  4055 ;; Return value:  Size  Location     Type
  4056 ;;                  1    wreg      _Bool 
  4057 ;; Registers used:
  4058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4059 ;; Tracked objects:
  4060 ;;		On entry : 0/0
  4061 ;;		On exit  : 0/0
  4062 ;;		Unchanged: 0/0
  4063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4064 ;;      Params:         0       0       0       0       0       0       0       0       0
  4065 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4066 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4067 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4068 ;;Total ram usage:        2 bytes
  4069 ;; Hardware stack levels used:    1
  4070 ;; Hardware stack levels required when called:    3
  4071 ;; This function calls:
  4072 ;;		_strstr
  4073 ;; This function is called by:
  4074 ;;		_main
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077                           
  4078                           	psect	text23
  4079  001D3A                     __ptext23:
  4080                           	callstack 0
  4081  001D3A                     _data_received:
  4082                           	callstack 27
  4083  001D3A                     
  4084                           ;main.c: 207:     char * ptr = strstr(data_in, END_CMD);
  4085  001D3A  0E50               	movlw	low _data_in
  4086  001D3C  6E0E               	movwf	strstr@h^0,c
  4087  001D3E  0E01               	movlw	high _data_in
  4088  001D40  6E0F               	movwf	(strstr@h+1)^0,c
  4089  001D42  0E20               	movlw	low STR_2
  4090  001D44  6E10               	movwf	strstr@n^0,c
  4091  001D46  0E08               	movlw	high STR_2
  4092  001D48  6E11               	movwf	(strstr@n+1)^0,c
  4093  001D4A  ECB8  F00B         	call	_strstr	;wreg free
  4094  001D4E  C00E  F014         	movff	?_strstr,data_received@ptr
  4095  001D52  C00F  F015         	movff	?_strstr+1,data_received@ptr+1
  4096  001D56                     
  4097                           ;main.c: 209:     if (ptr != ((void*)0)) {
  4098  001D56  5014               	movf	data_received@ptr^0,w,c
  4099  001D58  1015               	iorwf	(data_received@ptr+1)^0,w,c
  4100  001D5A  B4D8               	btfsc	status,2,c
  4101  001D5C  EFB2  F00E         	goto	u2731
  4102  001D60  EFB4  F00E         	goto	u2730
  4103  001D64                     u2731:
  4104  001D64  EFB7  F00E         	goto	l2890
  4105  001D68                     u2730:
  4106  001D68                     
  4107                           ;main.c: 210:         return 1;
  4108  001D68  0E01               	movlw	1
  4109  001D6A  EFB8  F00E         	goto	l119
  4110  001D6E                     l2890:
  4111                           
  4112                           ;main.c: 213:     return 0;
  4113  001D6E  0E00               	movlw	0
  4114  001D70                     l119:
  4115  001D70  0012               	return		;funcret
  4116  001D72                     __end_of_data_received:
  4117                           	callstack 0
  4118                           
  4119 ;; *************** function _strstr *****************
  4120 ;; Defined at:
  4121 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/strstr.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;  h               2   13[COMRAM] PTR const unsigned char 
  4124 ;;		 -> NULL(0), data_in(512), 
  4125 ;;  n               2   15[COMRAM] PTR const unsigned char 
  4126 ;;		 -> STR_5(2), STR_2(4), STR_1(8), 
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;  nl              2   17[COMRAM] unsigned int 
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  2   13[COMRAM] PTR unsigned char 
  4131 ;; Registers used:
  4132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4138 ;;      Params:         4       0       0       0       0       0       0       0       0
  4139 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4140 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4141 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4142 ;;Total ram usage:        6 bytes
  4143 ;; Hardware stack levels used:    1
  4144 ;; Hardware stack levels required when called:    2
  4145 ;; This function calls:
  4146 ;;		_strchr
  4147 ;;		_strlen
  4148 ;;		_strncmp
  4149 ;; This function is called by:
  4150 ;;		_data_received
  4151 ;;		_get_action
  4152 ;;		_is_command
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156                           	psect	text24
  4157  001770                     __ptext24:
  4158                           	callstack 0
  4159  001770                     _strstr:
  4160                           	callstack 27
  4161  001770  5010               	movf	strstr@n^0,w,c
  4162  001772  1011               	iorwf	(strstr@n+1)^0,w,c
  4163  001774  B4D8               	btfsc	status,2,c
  4164  001776  EFBF  F00B         	goto	u2381
  4165  00177A  EFC1  F00B         	goto	u2380
  4166  00177E                     u2381:
  4167  00177E  EF13  F00C         	goto	l2628
  4168  001782                     u2380:
  4169  001782  C010  F003         	movff	strstr@n,strlen@s
  4170  001786  C011  F004         	movff	strstr@n+1,strlen@s+1
  4171  00178A  EC6A  F00D         	call	_strlen	;wreg free
  4172  00178E  C003  F012         	movff	?_strlen,strstr@nl
  4173  001792  C004  F013         	movff	?_strlen+1,strstr@nl+1
  4174  001796  EFFE  F00B         	goto	l2624
  4175  00179A                     l2616:
  4176  00179A  C00E  F003         	movff	strstr@h,strncmp@_l
  4177  00179E  C00F  F004         	movff	strstr@h+1,strncmp@_l+1
  4178  0017A2  C010  F005         	movff	strstr@n,strncmp@_r
  4179  0017A6  C011  F006         	movff	strstr@n+1,strncmp@_r+1
  4180  0017AA  C012  F007         	movff	strstr@nl,strncmp@n
  4181  0017AE  C013  F008         	movff	strstr@nl+1,strncmp@n+1
  4182  0017B2  EC87  F00A         	call	_strncmp	;wreg free
  4183  0017B6  5003               	movf	?_strncmp^0,w,c
  4184  0017B8  1004               	iorwf	(?_strncmp+1)^0,w,c
  4185  0017BA  A4D8               	btfss	status,2,c
  4186  0017BC  EFE2  F00B         	goto	u2391
  4187  0017C0  EFE4  F00B         	goto	u2390
  4188  0017C4                     u2391:
  4189  0017C4  EFEA  F00B         	goto	l2622
  4190  0017C8                     u2390:
  4191  0017C8  C00E  F00E         	movff	strstr@h,?_strstr
  4192  0017CC  C00F  F00F         	movff	strstr@h+1,?_strstr+1
  4193  0017D0  EF17  F00C         	goto	l1006
  4194  0017D4                     l2622:
  4195  0017D4  0E01               	movlw	1
  4196  0017D6  240E               	addwf	strstr@h^0,w,c
  4197  0017D8  6E03               	movwf	strchr@s^0,c
  4198  0017DA  0E00               	movlw	0
  4199  0017DC  200F               	addwfc	(strstr@h+1)^0,w,c
  4200  0017DE  6E04               	movwf	(strchr@s+1)^0,c
  4201  0017E0  C010  FFF6         	movff	strstr@n,tblptrl
  4202  0017E4  C011  FFF7         	movff	strstr@n+1,tblptrh
  4203  0017E8                     	if	0	;tblptru may be non-zero
  4204  0017E8                     	endif
  4205  0017E8                     	if	0	;tblptru may be non-zero
  4206  0017E8                     	endif
  4207  0017E8  0008               	tblrd		*
  4208  0017EA  50F5               	movf	tablat,w,c
  4209  0017EC  6E05               	movwf	strchr@c^0,c
  4210  0017EE  6A06               	clrf	(strchr@c+1)^0,c
  4211  0017F0  EC91  F00D         	call	_strchr	;wreg free
  4212  0017F4  C003  F00E         	movff	?_strchr,strstr@h
  4213  0017F8  C004  F00F         	movff	?_strchr+1,strstr@h+1
  4214  0017FC                     l2624:
  4215  0017FC  500E               	movf	strstr@h^0,w,c
  4216  0017FE  100F               	iorwf	(strstr@h+1)^0,w,c
  4217  001800  B4D8               	btfsc	status,2,c
  4218  001802  EF05  F00C         	goto	u2401
  4219  001806  EF07  F00C         	goto	u2400
  4220  00180A                     u2401:
  4221  00180A  EF13  F00C         	goto	l2628
  4222  00180E                     u2400:
  4223  00180E  C00E  FFD9         	movff	strstr@h,fsr2l
  4224  001812  C00F  FFDA         	movff	strstr@h+1,fsr2h
  4225  001816  50DF               	movf	indf2,w,c
  4226  001818  A4D8               	btfss	status,2,c
  4227  00181A  EF11  F00C         	goto	u2411
  4228  00181E  EF13  F00C         	goto	u2410
  4229  001822                     u2411:
  4230  001822  EFCD  F00B         	goto	l2616
  4231  001826                     u2410:
  4232  001826                     l2628:
  4233  001826  0E00               	movlw	0
  4234  001828  6E0E               	movwf	?_strstr^0,c
  4235  00182A  0E00               	movlw	0
  4236  00182C  6E0F               	movwf	(?_strstr+1)^0,c
  4237  00182E                     l1006:
  4238  00182E  0012               	return		;funcret
  4239  001830                     __end_of_strstr:
  4240                           	callstack 0
  4241                           
  4242 ;; *************** function _strncmp *****************
  4243 ;; Defined at:
  4244 ;;		line 3 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/strncmp.c"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;  _l              2    2[COMRAM] PTR const unsigned char 
  4247 ;;		 -> NULL(0), data_in(512), 
  4248 ;;  _r              2    4[COMRAM] PTR const unsigned char 
  4249 ;;		 -> STR_5(2), STR_2(4), STR_1(8), 
  4250 ;;  n               2    6[COMRAM] unsigned int 
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;  r               2   11[COMRAM] PTR const unsigned char 
  4253 ;;		 -> STR_5(2), STR_2(4), STR_1(8), 
  4254 ;;  l               2    9[COMRAM] PTR const unsigned char 
  4255 ;;		 -> NULL(0), data_in(512), 
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  2    2[COMRAM] int 
  4258 ;; Registers used:
  4259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4265 ;;      Params:         6       0       0       0       0       0       0       0       0
  4266 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4267 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4268 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4269 ;;Total ram usage:       11 bytes
  4270 ;; Hardware stack levels used:    1
  4271 ;; Hardware stack levels required when called:    1
  4272 ;; This function calls:
  4273 ;;		Nothing
  4274 ;; This function is called by:
  4275 ;;		_strstr
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           	psect	text25
  4280  00150E                     __ptext25:
  4281                           	callstack 0
  4282  00150E                     _strncmp:
  4283                           	callstack 27
  4284  00150E  C003  F00A         	movff	strncmp@_l,strncmp@l
  4285  001512  C004  F00B         	movff	strncmp@_l+1,strncmp@l+1
  4286  001516  C005  F00C         	movff	strncmp@_r,strncmp@r
  4287  00151A  C006  F00D         	movff	strncmp@_r+1,strncmp@r+1
  4288  00151E  0607               	decf	strncmp@n^0,f,c
  4289  001520  A0D8               	btfss	status,0,c
  4290  001522  0608               	decf	(strncmp@n+1)^0,f,c
  4291  001524  2807               	incf	strncmp@n^0,w,c
  4292  001526  E106               	bnz	u2311
  4293  001528  2808               	incf	(strncmp@n+1)^0,w,c
  4294  00152A  A4D8               	btfss	status,2,c
  4295  00152C  EF9A  F00A         	goto	u2311
  4296  001530  EF9C  F00A         	goto	u2310
  4297  001534                     u2311:
  4298  001534  EFA9  F00A         	goto	l2588
  4299  001538                     u2310:
  4300  001538  0E00               	movlw	0
  4301  00153A  6E04               	movwf	(?_strncmp+1)^0,c
  4302  00153C  0E00               	movlw	0
  4303  00153E  6E03               	movwf	?_strncmp^0,c
  4304  001540  EFF1  F00A         	goto	l1019
  4305  001544                     l2586:
  4306  001544  4A0A               	infsnz	strncmp@l^0,f,c
  4307  001546  2A0B               	incf	(strncmp@l+1)^0,f,c
  4308  001548  4A0C               	infsnz	strncmp@r^0,f,c
  4309  00154A  2A0D               	incf	(strncmp@r+1)^0,f,c
  4310  00154C  0607               	decf	strncmp@n^0,f,c
  4311  00154E  A0D8               	btfss	status,0,c
  4312  001550  0608               	decf	(strncmp@n+1)^0,f,c
  4313  001552                     l2588:
  4314  001552  C00A  FFD9         	movff	strncmp@l,fsr2l
  4315  001556  C00B  FFDA         	movff	strncmp@l+1,fsr2h
  4316  00155A  50DF               	movf	indf2,w,c
  4317  00155C  B4D8               	btfsc	status,2,c
  4318  00155E  EFB3  F00A         	goto	u2321
  4319  001562  EFB5  F00A         	goto	u2320
  4320  001566                     u2321:
  4321  001566  EFE0  F00A         	goto	l2596
  4322  00156A                     u2320:
  4323  00156A  C00C  FFF6         	movff	strncmp@r,tblptrl
  4324  00156E  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  4325  001572                     	if	0	;tblptru may be non-zero
  4326  001572                     	endif
  4327  001572                     	if	0	;tblptru may be non-zero
  4328  001572                     	endif
  4329  001572  0008               	tblrd		*
  4330  001574  50F5               	movf	tablat,w,c
  4331  001576  0900               	iorlw	0
  4332  001578  B4D8               	btfsc	status,2,c
  4333  00157A  EFC1  F00A         	goto	u2331
  4334  00157E  EFC3  F00A         	goto	u2330
  4335  001582                     u2331:
  4336  001582  EFE0  F00A         	goto	l2596
  4337  001586                     u2330:
  4338  001586  5007               	movf	strncmp@n^0,w,c
  4339  001588  1008               	iorwf	(strncmp@n+1)^0,w,c
  4340  00158A  B4D8               	btfsc	status,2,c
  4341  00158C  EFCA  F00A         	goto	u2341
  4342  001590  EFCC  F00A         	goto	u2340
  4343  001594                     u2341:
  4344  001594  EFE0  F00A         	goto	l2596
  4345  001598                     u2340:
  4346  001598  C00A  FFD9         	movff	strncmp@l,fsr2l
  4347  00159C  C00B  FFDA         	movff	strncmp@l+1,fsr2h
  4348  0015A0  50DF               	movf	indf2,w,c
  4349  0015A2  6E09               	movwf	??_strncmp^0,c
  4350  0015A4  C00C  FFF6         	movff	strncmp@r,tblptrl
  4351  0015A8  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  4352  0015AC                     	if	0	;tblptru may be non-zero
  4353  0015AC                     	endif
  4354  0015AC                     	if	0	;tblptru may be non-zero
  4355  0015AC                     	endif
  4356  0015AC  0008               	tblrd		*
  4357  0015AE  50F5               	movf	tablat,w,c
  4358  0015B0  1809               	xorwf	??_strncmp^0,w,c
  4359  0015B2  B4D8               	btfsc	status,2,c
  4360  0015B4  EFDE  F00A         	goto	u2351
  4361  0015B8  EFE0  F00A         	goto	u2350
  4362  0015BC                     u2351:
  4363  0015BC  EFA2  F00A         	goto	l2586
  4364  0015C0                     u2350:
  4365  0015C0                     l2596:
  4366  0015C0  C00A  FFD9         	movff	strncmp@l,fsr2l
  4367  0015C4  C00B  FFDA         	movff	strncmp@l+1,fsr2h
  4368  0015C8  50DF               	movf	indf2,w,c
  4369  0015CA  6E09               	movwf	??_strncmp^0,c
  4370  0015CC  C00C  FFF6         	movff	strncmp@r,tblptrl
  4371  0015D0  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  4372  0015D4                     	if	0	;tblptru may be non-zero
  4373  0015D4                     	endif
  4374  0015D4                     	if	0	;tblptru may be non-zero
  4375  0015D4                     	endif
  4376  0015D4  0008               	tblrd		*
  4377  0015D6  50F5               	movf	tablat,w,c
  4378  0015D8  5C09               	subwf	??_strncmp^0,w,c
  4379  0015DA  6E03               	movwf	?_strncmp^0,c
  4380  0015DC  6A04               	clrf	(?_strncmp+1)^0,c
  4381  0015DE  A0D8               	btfss	status,0,c
  4382  0015E0  0604               	decf	(?_strncmp+1)^0,f,c
  4383  0015E2                     l1019:
  4384  0015E2  0012               	return		;funcret
  4385  0015E4                     __end_of_strncmp:
  4386                           	callstack 0
  4387                           
  4388 ;; *************** function _strlen *****************
  4389 ;; Defined at:
  4390 ;;		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/strlen.c"
  4391 ;; Parameters:    Size  Location     Type
  4392 ;;  s               2    2[COMRAM] PTR const unsigned char 
  4393 ;;		 -> dbuf(32), STR_5(2), data_out(50), STR_2(4), 
  4394 ;;		 -> STR_1(8), 
  4395 ;; Auto vars:     Size  Location     Type
  4396 ;;  a               2    4[COMRAM] PTR const unsigned char 
  4397 ;;		 -> dbuf(32), STR_5(2), data_out(50), STR_2(4), 
  4398 ;;		 -> STR_1(8), 
  4399 ;; Return value:  Size  Location     Type
  4400 ;;                  2    2[COMRAM] unsigned int 
  4401 ;; Registers used:
  4402 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  4403 ;; Tracked objects:
  4404 ;;		On entry : 0/0
  4405 ;;		On exit  : 0/0
  4406 ;;		Unchanged: 0/0
  4407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4408 ;;      Params:         2       0       0       0       0       0       0       0       0
  4409 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4410 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4411 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4412 ;;Total ram usage:        4 bytes
  4413 ;; Hardware stack levels used:    1
  4414 ;; Hardware stack levels required when called:    1
  4415 ;; This function calls:
  4416 ;;		Nothing
  4417 ;; This function is called by:
  4418 ;;		_USART_SendString
  4419 ;;		_pad
  4420 ;;		_strstr
  4421 ;; This function uses a non-reentrant model
  4422 ;;
  4423                           
  4424                           	psect	text26
  4425  001AD4                     __ptext26:
  4426                           	callstack 0
  4427  001AD4                     _strlen:
  4428                           	callstack 27
  4429  001AD4  C003  F005         	movff	strlen@s,strlen@a
  4430  001AD8  C004  F006         	movff	strlen@s+1,strlen@a+1
  4431  001ADC  EF72  F00D         	goto	l2356
  4432  001AE0                     l2354:
  4433  001AE0  4A03               	infsnz	strlen@s^0,f,c
  4434  001AE2  2A04               	incf	(strlen@s+1)^0,f,c
  4435  001AE4                     l2356:
  4436  001AE4  C003  FFF6         	movff	strlen@s,tblptrl
  4437  001AE8  C004  FFF7         	movff	strlen@s+1,tblptrh
  4438  001AEC  6AF8               	clrf	tblptru,c
  4439  001AEE  0E07               	movlw	(high __ramtop+-1)
  4440  001AF0  64F7               	cpfsgt	tblptrh,c
  4441  001AF2  D003               	bra	u1917
  4442  001AF4  0008               	tblrd		*
  4443  001AF6  50F5               	movf	tablat,w,c
  4444  001AF8  D005               	bra	u1910
  4445  001AFA                     u1917:
  4446  001AFA  CFF6 FFE1          	movff	tblptrl,fsr1l
  4447  001AFE  CFF7 FFE2          	movff	tblptrh,fsr1h
  4448  001B02  50E7               	movf	indf1,w,c
  4449  001B04                     u1910:
  4450  001B04  0900               	iorlw	0
  4451  001B06  A4D8               	btfss	status,2,c
  4452  001B08  EF88  F00D         	goto	u1921
  4453  001B0C  EF8A  F00D         	goto	u1920
  4454  001B10                     u1921:
  4455  001B10  EF70  F00D         	goto	l2354
  4456  001B14                     u1920:
  4457  001B14  5005               	movf	strlen@a^0,w,c
  4458  001B16  5C03               	subwf	strlen@s^0,w,c
  4459  001B18  6E03               	movwf	?_strlen^0,c
  4460  001B1A  5006               	movf	(strlen@a+1)^0,w,c
  4461  001B1C  5804               	subwfb	(strlen@s+1)^0,w,c
  4462  001B1E  6E04               	movwf	(?_strlen+1)^0,c
  4463  001B20  0012               	return		;funcret
  4464  001B22                     __end_of_strlen:
  4465                           	callstack 0
  4466                           
  4467 ;; *************** function _strchr *****************
  4468 ;; Defined at:
  4469 ;;		line 3 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/strchr.c"
  4470 ;; Parameters:    Size  Location     Type
  4471 ;;  s               2    2[COMRAM] PTR const unsigned char 
  4472 ;;		 -> NULL(0), data_in(512), 
  4473 ;;  c               2    4[COMRAM] int 
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;		None
  4476 ;; Return value:  Size  Location     Type
  4477 ;;                  2    2[COMRAM] PTR unsigned char 
  4478 ;; Registers used:
  4479 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4480 ;; Tracked objects:
  4481 ;;		On entry : 0/0
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4485 ;;      Params:         4       0       0       0       0       0       0       0       0
  4486 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4487 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4488 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4489 ;;Total ram usage:        5 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; Hardware stack levels required when called:    1
  4492 ;; This function calls:
  4493 ;;		Nothing
  4494 ;; This function is called by:
  4495 ;;		_strstr
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           	psect	text27
  4500  001B22                     __ptext27:
  4501                           	callstack 0
  4502  001B22                     _strchr:
  4503                           	callstack 27
  4504  001B22                     l1012:
  4505  001B22  C003  FFD9         	movff	strchr@s,fsr2l
  4506  001B26  C004  FFDA         	movff	strchr@s+1,fsr2h
  4507  001B2A  5005               	movf	strchr@c^0,w,c
  4508  001B2C  18DE               	xorwf	postinc2,w,c
  4509  001B2E  A4D8               	btfss	status,2,c
  4510  001B30  EF9C  F00D         	goto	u2361
  4511  001B34  EF9E  F00D         	goto	u2360
  4512  001B38                     u2361:
  4513  001B38  EFA4  F00D         	goto	l2606
  4514  001B3C                     u2360:
  4515  001B3C  C003  F003         	movff	strchr@s,?_strchr
  4516  001B40  C004  F004         	movff	strchr@s+1,?_strchr+1
  4517  001B44  EFB6  F00D         	goto	l1014
  4518  001B48                     l2606:
  4519  001B48  C003  FFD9         	movff	strchr@s,fsr2l
  4520  001B4C  C004  FFDA         	movff	strchr@s+1,fsr2h
  4521  001B50  4A03               	infsnz	strchr@s^0,f,c
  4522  001B52  2A04               	incf	(strchr@s+1)^0,f,c
  4523  001B54  50DF               	movf	indf2,w,c
  4524  001B56  A4D8               	btfss	status,2,c
  4525  001B58  EFB0  F00D         	goto	u2371
  4526  001B5C  EFB2  F00D         	goto	u2370
  4527  001B60                     u2371:
  4528  001B60  EF91  F00D         	goto	l1012
  4529  001B64                     u2370:
  4530  001B64  0E00               	movlw	0
  4531  001B66  6E03               	movwf	?_strchr^0,c
  4532  001B68  0E00               	movlw	0
  4533  001B6A  6E04               	movwf	(?_strchr+1)^0,c
  4534  001B6C                     l1014:
  4535  001B6C  0012               	return		;funcret
  4536  001B6E                     __end_of_strchr:
  4537                           	callstack 0
  4538                           
  4539 ;; *************** function _USART_Init *****************
  4540 ;; Defined at:
  4541 ;;		line 241 in file "main.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;		None
  4544 ;; Auto vars:     Size  Location     Type
  4545 ;;		None
  4546 ;; Return value:  Size  Location     Type
  4547 ;;                  1    wreg      void 
  4548 ;; Registers used:
  4549 ;;		wreg, status,2
  4550 ;; Tracked objects:
  4551 ;;		On entry : 0/0
  4552 ;;		On exit  : 0/0
  4553 ;;		Unchanged: 0/0
  4554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4555 ;;      Params:         0       0       0       0       0       0       0       0       0
  4556 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4557 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4558 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4559 ;;Total ram usage:        0 bytes
  4560 ;; Hardware stack levels used:    1
  4561 ;; Hardware stack levels required when called:    1
  4562 ;; This function calls:
  4563 ;;		Nothing
  4564 ;; This function is called by:
  4565 ;;		_main
  4566 ;; This function uses a non-reentrant model
  4567 ;;
  4568                           
  4569                           	psect	text28
  4570  001D98                     __ptext28:
  4571                           	callstack 0
  4572  001D98                     _USART_Init:
  4573                           	callstack 29
  4574  001D98                     
  4575                           ;main.c: 242:     TRISC6=1;
  4576  001D98  8C94               	bsf	3988,6,c	;volatile
  4577                           
  4578                           ;main.c: 243:     TRISC7=1;
  4579  001D9A  8E94               	bsf	3988,7,c	;volatile
  4580  001D9C                     
  4581                           ;main.c: 244:     SPBRG = 25;
  4582  001D9C  0E19               	movlw	25
  4583  001D9E  6EAF               	movwf	175,c	;volatile
  4584  001DA0                     
  4585                           ;main.c: 245:     TXSTAbits.CSRC = 1;
  4586  001DA0  8EAC               	bsf	172,7,c	;volatile
  4587  001DA2                     
  4588                           ;main.c: 246:     TXSTAbits.TXEN = 1;
  4589  001DA2  8AAC               	bsf	172,5,c	;volatile
  4590  001DA4                     
  4591                           ;main.c: 247:     RCSTAbits.CREN = 1;
  4592  001DA4  88AB               	bsf	171,4,c	;volatile
  4593  001DA6                     
  4594                           ;main.c: 248:     RCSTAbits.SPEN = 1;
  4595  001DA6  8EAB               	bsf	171,7,c	;volatile
  4596  001DA8                     
  4597                           ;main.c: 250:     INTCONbits.GIE = 1;
  4598  001DA8  8EF2               	bsf	242,7,c	;volatile
  4599  001DAA                     
  4600                           ;main.c: 251:     INTCONbits.PEIE = 1;
  4601  001DAA  8CF2               	bsf	242,6,c	;volatile
  4602  001DAC                     
  4603                           ;main.c: 252:     PIE1bits.RCIE = 1;
  4604  001DAC  8A9D               	bsf	157,5,c	;volatile
  4605  001DAE                     
  4606                           ;main.c: 253:     PIE1bits.TXIE = 0;
  4607  001DAE  989D               	bcf	157,4,c	;volatile
  4608  001DB0  0012               	return		;funcret
  4609  001DB2                     __end_of_USART_Init:
  4610                           	callstack 0
  4611                           
  4612 ;; *************** function _isr *****************
  4613 ;; Defined at:
  4614 ;;		line 256 in file "main.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;		None
  4617 ;; Auto vars:     Size  Location     Type
  4618 ;;		None
  4619 ;; Return value:  Size  Location     Type
  4620 ;;                  1    wreg      void 
  4621 ;; Registers used:
  4622 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/0
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4628 ;;      Params:         0       0       0       0       0       0       0       0       0
  4629 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4630 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4631 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4632 ;;Total ram usage:        2 bytes
  4633 ;; Hardware stack levels used:    1
  4634 ;; This function calls:
  4635 ;;		Nothing
  4636 ;; This function is called by:
  4637 ;;		Interrupt level 2
  4638 ;; This function uses a non-reentrant model
  4639 ;;
  4640                           
  4641                           	psect	intcode
  4642  000008                     __pintcode:
  4643                           	callstack 0
  4644  000008                     _isr:
  4645                           	callstack 21
  4646                           
  4647                           ;incstack = 0
  4648  000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4649  00000A  EDB7  F00D         	call	int_func,f	;refresh shadow registers
  4650                           
  4651                           	psect	intcode_body
  4652  001B6E                     __pintcode_body:
  4653                           	callstack 21
  4654  001B6E                     int_func:
  4655                           	callstack 21
  4656  001B6E  0006               	pop		; remove dummy address from shadow register refresh
  4657  001B70  CFD9 F001          	movff	fsr2l,??_isr
  4658  001B74  CFDA F002          	movff	fsr2h,??_isr+1
  4659  001B78                     
  4660                           ;main.c: 257:     if (RCIF == 1) {
  4661  001B78  AA9E               	btfss	3998,5,c	;volatile
  4662  001B7A  EFC1  F00D         	goto	i2u185_41
  4663  001B7E  EFC3  F00D         	goto	i2u185_40
  4664  001B82                     i2u185_41:
  4665  001B82  EFD7  F00D         	goto	i2l137
  4666  001B86                     i2u185_40:
  4667  001B86                     
  4668                           ;main.c: 258:         if (RCSTAbits.OERR) {
  4669  001B86  A2AB               	btfss	171,1,c	;volatile
  4670  001B88  EFC8  F00D         	goto	i2u186_41
  4671  001B8C  EFCA  F00D         	goto	i2u186_40
  4672  001B90                     i2u186_41:
  4673  001B90  EFCD  F00D         	goto	i2l2284
  4674  001B94                     i2u186_40:
  4675  001B94                     
  4676                           ;main.c: 259:             CREN = 0;
  4677  001B94  98AB               	bcf	4011,4,c	;volatile
  4678                           
  4679                           ;main.c: 260:             __nop();
  4680  001B96  F000               	nop	
  4681                           
  4682                           ;main.c: 261:             CREN=1;
  4683  001B98  88AB               	bsf	4011,4,c	;volatile
  4684  001B9A                     i2l2284:
  4685                           
  4686                           ;main.c: 264:         data_in[position] = RCREG;
  4687  001B9A  0E50               	movlw	low _data_in
  4688  001B9C  0100               	movlb	0	; () banked
  4689  001B9E  2566               	addwf	_position& (0+255),w,b
  4690  001BA0  6ED9               	movwf	fsr2l,c
  4691  001BA2  6ADA               	clrf	fsr2h,c
  4692  001BA4  0E01               	movlw	high _data_in
  4693  001BA6  22DA               	addwfc	fsr2h,f,c
  4694  001BA8  CFAE FFDF          	movff	4014,indf2	;volatile
  4695  001BAC                     
  4696                           ; BSR set to: 0
  4697                           ;main.c: 265:         position++;
  4698  001BAC  2B66               	incf	_position& (0+255),f,b
  4699  001BAE                     i2l137:
  4700  001BAE  C002  FFDA         	movff	??_isr+1,fsr2h
  4701  001BB2  C001  FFD9         	movff	??_isr,fsr2l
  4702  001BB6  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4703  001BB8  0011               	retfie		f
  4704  001BBA                     __end_of_isr:
  4705                           	callstack 0
  4706                           
  4707                           	psect	rparam
  4708  0000                     
  4709                           	psect	temp
  4710  00005D                     btemp:
  4711                           	callstack 0
  4712  00005D                     	ds	1
  4713  0000                     int$flags	set	btemp
  4714  0000                     wtemp8	set	btemp+1
  4715  0000                     ttemp5	set	btemp+1
  4716  0000                     ttemp6	set	btemp+4
  4717  0000                     ttemp7	set	btemp+8
  4718                           
  4719                           	psect	idloc
  4720                           
  4721                           ;Config register IDLOC0 @ 0x200000
  4722                           ;	unspecified, using default values
  4723  200000                     	org	2097152
  4724  200000  FF                 	db	255
  4725                           
  4726                           ;Config register IDLOC1 @ 0x200001
  4727                           ;	unspecified, using default values
  4728  200001                     	org	2097153
  4729  200001  FF                 	db	255
  4730                           
  4731                           ;Config register IDLOC2 @ 0x200002
  4732                           ;	unspecified, using default values
  4733  200002                     	org	2097154
  4734  200002  FF                 	db	255
  4735                           
  4736                           ;Config register IDLOC3 @ 0x200003
  4737                           ;	unspecified, using default values
  4738  200003                     	org	2097155
  4739  200003  FF                 	db	255
  4740                           
  4741                           ;Config register IDLOC4 @ 0x200004
  4742                           ;	unspecified, using default values
  4743  200004                     	org	2097156
  4744  200004  FF                 	db	255
  4745                           
  4746                           ;Config register IDLOC5 @ 0x200005
  4747                           ;	unspecified, using default values
  4748  200005                     	org	2097157
  4749  200005  FF                 	db	255
  4750                           
  4751                           ;Config register IDLOC6 @ 0x200006
  4752                           ;	unspecified, using default values
  4753  200006                     	org	2097158
  4754  200006  FF                 	db	255
  4755                           
  4756                           ;Config register IDLOC7 @ 0x200007
  4757                           ;	unspecified, using default values
  4758  200007                     	org	2097159
  4759  200007  FF                 	db	255
  4760                           
  4761                           	psect	config
  4762                           
  4763                           ;Config register CONFIG1L @ 0x300000
  4764                           ;	PLL Prescaler Selection bits
  4765                           ;	PLLDIV = 4, Divide by 4 (16 MHz oscillator input)
  4766                           ;	System Clock Postscaler Selection bits
  4767                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  4768                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4769                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  4770  300000                     	org	3145728
  4771  300000  03                 	db	3
  4772                           
  4773                           ;Config register CONFIG1H @ 0x300001
  4774                           ;	Oscillator Selection bits
  4775                           ;	FOSC = HS, HS oscillator (HS)
  4776                           ;	Fail-Safe Clock Monitor Enable bit
  4777                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4778                           ;	Internal/External Oscillator Switchover bit
  4779                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4780  300001                     	org	3145729
  4781  300001  0C                 	db	12
  4782                           
  4783                           ;Config register CONFIG2L @ 0x300002
  4784                           ;	Power-up Timer Enable bit
  4785                           ;	PWRT = OFF, PWRT disabled
  4786                           ;	Brown-out Reset Enable bits
  4787                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4788                           ;	Brown-out Reset Voltage bits
  4789                           ;	BORV = 3, Minimum setting
  4790                           ;	USB Voltage Regulator Enable bit
  4791                           ;	VREGEN = OFF, USB voltage regulator disabled
  4792  300002                     	org	3145730
  4793  300002  1F                 	db	31
  4794                           
  4795                           ;Config register CONFIG2H @ 0x300003
  4796                           ;	Watchdog Timer Enable bit
  4797                           ;	WDT = ON, WDT enabled
  4798                           ;	Watchdog Timer Postscale Select bits
  4799                           ;	WDTPS = 32768, 1:32768
  4800  300003                     	org	3145731
  4801  300003  1F                 	db	31
  4802                           
  4803                           ; Padding undefined space
  4804  300004                     	org	3145732
  4805  300004  FF                 	db	255
  4806                           
  4807                           ;Config register CONFIG3H @ 0x300005
  4808                           ;	CCP2 MUX bit
  4809                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  4810                           ;	PORTB A/D Enable bit
  4811                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  4812                           ;	Low-Power Timer 1 Oscillator Enable bit
  4813                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4814                           ;	MCLR Pin Enable bit
  4815                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4816  300005                     	org	3145733
  4817  300005  83                 	db	131
  4818                           
  4819                           ;Config register CONFIG4L @ 0x300006
  4820                           ;	Stack Full/Underflow Reset Enable bit
  4821                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4822                           ;	Single-Supply ICSP Enable bit
  4823                           ;	LVP = ON, Single-Supply ICSP enabled
  4824                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4825                           ;	ICPRT = OFF, ICPORT disabled
  4826                           ;	Extended Instruction Set Enable bit
  4827                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4828                           ;	Background Debugger Enable bit
  4829                           ;	DEBUG = 0x1, unprogrammed default
  4830  300006                     	org	3145734
  4831  300006  85                 	db	133
  4832                           
  4833                           ; Padding undefined space
  4834  300007                     	org	3145735
  4835  300007  FF                 	db	255
  4836                           
  4837                           ;Config register CONFIG5L @ 0x300008
  4838                           ;	Code Protection bit
  4839                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  4840                           ;	Code Protection bit
  4841                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  4842                           ;	Code Protection bit
  4843                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  4844                           ;	Code Protection bit
  4845                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  4846  300008                     	org	3145736
  4847  300008  0F                 	db	15
  4848                           
  4849                           ;Config register CONFIG5H @ 0x300009
  4850                           ;	Boot Block Code Protection bit
  4851                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  4852                           ;	Data EEPROM Code Protection bit
  4853                           ;	CPD = OFF, Data EEPROM is not code-protected
  4854  300009                     	org	3145737
  4855  300009  C0                 	db	192
  4856                           
  4857                           ;Config register CONFIG6L @ 0x30000A
  4858                           ;	Write Protection bit
  4859                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  4860                           ;	Write Protection bit
  4861                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  4862                           ;	Write Protection bit
  4863                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  4864                           ;	Write Protection bit
  4865                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  4866  30000A                     	org	3145738
  4867  30000A  0F                 	db	15
  4868                           
  4869                           ;Config register CONFIG6H @ 0x30000B
  4870                           ;	Configuration Register Write Protection bit
  4871                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4872                           ;	Boot Block Write Protection bit
  4873                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  4874                           ;	Data EEPROM Write Protection bit
  4875                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4876  30000B                     	org	3145739
  4877  30000B  E0                 	db	224
  4878                           
  4879                           ;Config register CONFIG7L @ 0x30000C
  4880                           ;	Table Read Protection bit
  4881                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4882                           ;	Table Read Protection bit
  4883                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4884                           ;	Table Read Protection bit
  4885                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4886                           ;	Table Read Protection bit
  4887                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4888  30000C                     	org	3145740
  4889  30000C  0F                 	db	15
  4890                           
  4891                           ;Config register CONFIG7H @ 0x30000D
  4892                           ;	Boot Block Table Read Protection bit
  4893                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  4894  30000D                     	org	3145741
  4895  30000D  40                 	db	64
  4896                           tosu	equ	0xFFF
  4897                           tosh	equ	0xFFE
  4898                           tosl	equ	0xFFD
  4899                           stkptr	equ	0xFFC
  4900                           pclatu	equ	0xFFB
  4901                           pclath	equ	0xFFA
  4902                           pcl	equ	0xFF9
  4903                           tblptru	equ	0xFF8
  4904                           tblptrh	equ	0xFF7
  4905                           tblptrl	equ	0xFF6
  4906                           tablat	equ	0xFF5
  4907                           prodh	equ	0xFF4
  4908                           prodl	equ	0xFF3
  4909                           indf0	equ	0xFEF
  4910                           postinc0	equ	0xFEE
  4911                           postdec0	equ	0xFED
  4912                           preinc0	equ	0xFEC
  4913                           plusw0	equ	0xFEB
  4914                           fsr0h	equ	0xFEA
  4915                           fsr0l	equ	0xFE9
  4916                           wreg	equ	0xFE8
  4917                           indf1	equ	0xFE7
  4918                           postinc1	equ	0xFE6
  4919                           postdec1	equ	0xFE5
  4920                           preinc1	equ	0xFE4
  4921                           plusw1	equ	0xFE3
  4922                           fsr1h	equ	0xFE2
  4923                           fsr1l	equ	0xFE1
  4924                           bsr	equ	0xFE0
  4925                           indf2	equ	0xFDF
  4926                           postinc2	equ	0xFDE
  4927                           postdec2	equ	0xFDD
  4928                           preinc2	equ	0xFDC
  4929                           plusw2	equ	0xFDB
  4930                           fsr2h	equ	0xFDA
  4931                           fsr2l	equ	0xFD9
  4932                           status	equ	0xFD8

Data Sizes:
    Strings     37
    Constant    0
    Data        4
    BSS         683
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      92
    BANK0           160     32     125
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_5(CODE[2]), STR_2(CODE[4]), STR_1(CODE[8]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_5(CODE[2]), STR_2(CODE[4]), STR_1(CODE[8]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), data_in(BIGRAM[512]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), data_in(BIGRAM[512]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), data_in(BIGRAM[512]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), data_in(BIGRAM[512]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), data_in(BIGRAM[512]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_5(CODE[2]), STR_2(CODE[4]), STR_1(CODE[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> dbuf(BANK0[32]), STR_5(CODE[2]), data_out(BANK0[50]), STR_2(CODE[4]), 
		 -> STR_1(CODE[8]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 50
		 -> dbuf(BANK0[32]), STR_5(CODE[2]), data_out(BANK0[50]), STR_2(CODE[4]), 
		 -> STR_1(CODE[8]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> data_out(BANK0[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[7]), STR_3(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[7]), STR_3(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[7]), STR_3(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> data_out(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S957_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> data_out(BANK0[50]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> data_out(BANK0[50]), 

    memset@dest	PTR void  size(2) Largest target is 512
		 -> data_out(BANK0[50]), dht_raw_data(BANK1[80]), data_in(BIGRAM[512]), 

    memset@s	PTR unsigned char  size(2) Largest target is 512
		 -> data_out(BANK0[50]), dht_raw_data(BANK1[80]), data_in(BIGRAM[512]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), data_in(BIGRAM[512]), 

    USART_SendString@data	PTR unsigned char  size(2) Largest target is 50
		 -> data_out(BANK0[50]), 

    is_command@command	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 

    is_command@ptr	PTR unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), data_in(BIGRAM[512]), 

    get_action@str_value	PTR unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), data_in(BIGRAM[512]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), data_in(BIGRAM[512]), 

    data_received@ptr	PTR unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), data_in(BIGRAM[512]), 

    sp__memset	PTR void  size(2) Largest target is 512
		 -> data_out(BANK0[50]), dht_raw_data(BANK1[80]), data_in(BIGRAM[512]), 

    END_CMD	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), 

    LED0_CMD	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _get_action->_atoi
    _is_command->_strstr
    _atoi->_isspace
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _USART_SendString->_strlen
    _data_received->_strstr
    _strstr->_strncmp

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_dht_read
    _dht_read->_sprintf

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   25549
                                             89 COMRAM     1     1      0
                                             30 BANK0      2     2      0
                         _USART_Init
                      _data_received
                           _dht_read
                         _get_action
                             _memset
 ---------------------------------------------------------------------------------
 (1) _get_action                                           4     4      0    8425
                                             24 COMRAM     4     4      0
                               _atoi
                         _is_command
                             _memset
                             _strstr
 ---------------------------------------------------------------------------------
 (2) _is_command                                           4     2      2    2310
                                             19 COMRAM     4     2      2
                             _strstr
 ---------------------------------------------------------------------------------
 (2) _atoi                                                15    13      2    1525
                                              9 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (3) _isspace                                              7     5      2     259
                                              2 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              6     4      2     191
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     512
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _dht_read                                            14    14      0   12534
                                             16 BANK0     14    14      0
                   _USART_SendString
                       _dht_read_bit
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6    8777
                                              0 BANK0     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    8111
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    7638
                                             65 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5863
                                             29 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3597
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _memset                                              12     6      6    2367
                                              2 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _dht_read_bit                                         2     0      2       0
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _USART_SendString                                     5     3      2     741
                                              6 COMRAM     5     3      2
                     _USART_SendChar
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _USART_SendChar                                       1     1      0      31
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _data_received                                        2     2      0    2189
                                             19 COMRAM     2     2      0
                             _strstr
 ---------------------------------------------------------------------------------
 (2) _strstr                                               6     2      4    2155
                                             13 COMRAM     6     2      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                             11     5      6     595
                                              2 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     400
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _strchr                                               5     1      4     304
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _isr                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USART_Init
   _data_received
     _strstr
       _strchr
       _strlen
       _strncmp
   _dht_read
     _USART_SendString
       _USART_SendChar
       _strlen
     _dht_read_bit
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
   _get_action
     _atoi
       ___wmul
       _isdigit
       _isspace
     _is_command
       _strstr
         _strchr
         _strlen
         _strncmp
     _memset
     _strstr
       _strchr
       _strlen
       _strncmp
   _memset

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     200      21       25.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     20      7D       5       78.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5C       1       97.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     129      20        0.0%
DATA                 0      0     329       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Jan 25 03:09:29 2021

           ??_dht_read_bit 0005     __end_of_USART_SendChar 1DC8                         l80 1898  
                       l82 189E                         l92 0B56                         l78 18D8  
                       l95 0B64                         l89 0B48        ___wmul@multiplicand 0005  
                      l111 1BDC                        l104 0D6C                        l130 1DB0  
                      l114 1BFE                        l107 1BBA                        l123 196E  
                      l140 1DB4                        l119 1D70                        l143 1DC6  
                      l127 1D00                        l152 1D96                        l149 1C44  
                      l266 1232                        l279 150C                        l912 16F2  
                      l915 1734                        l923 08C8                        l851 10A2  
                      l917 176E                        l925 08D0                        l950 0F20  
                      l854 10AA                        l943 0B04                        l872 13A8  
                      l961 1CC0                        l857 1D38                        l865 1A80  
                      l964 1CC8                        l956 19C8                        l957 19D0  
                      l885 1AD2                        l976 16AC                        l984 1C88  
                      l993 1B20                        l987 1DCC                        _abs 1C8A  
                      _pad 16AE                        _isr 0008                        prod 000FF3  
                      wreg 000FE8                       l1012 1B22                       l1014 1B6C  
                     l1006 182E                       l1019 15E2                       ?_abs 0015  
                     l2400 11C8                       l2410 1212                       l2402 11CA  
                     l2404 11DC                       l2420 13DC                       l2340 15F6  
                     l2500 090E                       l2406 11E2                       l2430 1434  
                     l2422 13E0                       l2414 13AA                       l2342 1608  
                     l2502 0914                       l2510 0A06                       l2600 1B22  
                     l2352 1AD4                       l2408 11F2                       l2440 14B6  
                     l2432 1448                       l2424 13EE                       l2416 13AE  
                     l2344 1612                       l2512 0A20                       l2520 0A80  
                     l2504 0996                       l2602 1B3C                       l2354 1AE0  
                     l2370 10AC                       l2434 1456                       l2442 14BC  
                     l2426 140E                       l2418 13BC                       l2346 1630  
                     l2338 15E4                       l2362 1C46                       l2450 16AE  
                     l2530 0AC4                       l2522 0A92                       l2514 0A3E  
                     l2506 099C                       l2356 1AE4                       l2612 1770  
                     l2700 1BC8                       l2380 10F0                       l2372 10B0  
                     l2444 14CC                       l2436 1484                       l2428 142C  
                     l2348 1666                       l2364 1C52                       l2460 16FE  
                     l2452 16BC                       l2532 0ACC                       l2524 0AA0  
                     l2516 0A58                       l2508 09A2                       l2540 0D92  
                     l2606 1B48                       l2358 1B14                       l2622 17D4  
                     l2614 1782                       l2702 1BCE                       l2390 1146  
                     l2382 1110                       l2374 10BE                       l2446 14EC  
                     l2438 14A4                       l2366 1C64                       l2462 1712  
                     l2454 16D0                       l2526 0AA6                       l2534 0ADC  
                     l2518 0A72                       l2550 0DFE                       l2542 0DA0  
                     l2800 1DA6                       l2608 1B64                       l2616 179A  
                     l2624 17FC                       l2632 1DB4                       l2712 1BF6  
                     l2392 115A                       l2384 1114                       l2376 10DE  
                     l2472 1C8A                       l2368 1C68                       l2464 1716  
                     l2456 16DE                       l2528 0AB8                       l2480 0870  
                     l2560 0EB0                       l2552 0E46                       l2544 0DB2  
                     l2720 1A9C                       l2802 1DA8                       l2626 180E  
                     l2618 17C8                       l2634 1DC2                       l2730 1C08  
                     l2706 1BEA                       l2394 1168                       l2386 1120  
                     l2378 10E2                       l2474 1CA4                       l2466 1742  
                     l2458 16EA                       l2490 08D8                       l2482 0890  
                     l2562 0EC4                       l2546 0DB6                       l2538 0D6E  
                     l2722 1AA4                       l2810 0B06                       l2650 1A7A  
                     l2642 1A30                       l2804 1DAA                       l2580 150E  
                     l2628 1826                       l2732 1C1A                       l2396 117A  
                     l2388 113E                       l2468 1756                       l2492 08EA  
                     l2484 08A0                       l2476 0828                       l2556 0E7E  
                     l2548 0DDA                       l2572 0EEA                       l2660 1978  
                     l2724 1AC0                       l2716 1A82                       l2820 0B3C  
                     l2812 0B22                       l2636 1D72                       l2644 1A34  
                     l2740 1CF8                       l2900 1930                       l2806 1DAC  
                     l2590 156A                       l2582 1538                       l2734 1C1C  
                     l2670 1252                       l2398 11A8                       l2494 08F8  
                     l2486 08A2                       l2478 0848                       l2574 0F0E  
                     l2558 0EA2                       l2566 0ED0                       l2662 1986  
                     l2718 1A94                       l2830 0B78                       l2822 0B44  
                     l2814 0B26                       l2638 1D8E                       l2654 1D02  
                     l2646 1A48                       l2750 0F36                       l2902 194C  
                     l2808 1DAE                       l2592 1586                       l2728 1C00  
                     l2672 125E                       l2496 08FE                       l2488 08BC  
                     l2568 0EDE                       l2664 19AC                       l2832 0B96  
                     l2824 0B72                       l2816 0B28                       l2648 1A76  
                     l2760 0F90                       l2752 0F3A                       l2744 1CFE  
                     l2736 1CCA                       l2904 1952                       l2920 185A  
                     l2912 1830                       l2594 1598                       l2586 1544  
                     l2690 1380                       l2682 1306                       l2666 1234  
                     l2498 0906                       l2658 1970                       l2850 0C4C  
                     l2842 0BF8                       l2834 0B98                       l2818 0B3A  
                     l2770 0FBC                       l2754 0F3E                       l2738 1CE6  
                     l2922 185C                       l2914 1834                       l2596 15C0  
                     l2588 1552                       l2692 138C                       l2684 1332  
                     l2676 1294                       l2860 0C84                       l2844 0C12  
                     l2836 0BA8                       l2780 1062                       l2772 0FEE  
                     l2764 0F96                       l2756 0F58                       l2748 0F22  
                     l2908 196C                       l2932 18A4                       l2924 1876  
                     l2916 1850                       l2790 1D98                       l2694 1392  
                     l2678 12EC                       l2862 0C9E                       l2846 0C38  
                     l2854 0C54                       l2838 0BD8                       l2782 1074  
                     l2766 0FAC                       l2758 0F8C                       l2926 187A  
                     l2918 1856                       ?_pad 0013                       l2792 1D9C  
                     l2696 1396                       l2688 134C                       l2880 0D60  
                     l2864 0CC4                       l2872 0CE0                       l2856 0C64  
                     l2848 0C46                       l2784 1086                       l2776 1026  
                     l2768 0FB4                       l2928 188E                       l2794 1DA0  
                     l2890 1D6E                       l2882 1D3A                       l2698 1BBA  
                     l2874 0CFC                       l2866 0CD2                       l2796 1DA2  
                     l2884 1D56                       l2876 0D1A                       l2868 0CD8  
                     l2798 1DA4                       l2886 1D68                       l2878 0D42  
                     l2894 18E0                       l2990 18BA                       l2992 0FD8  
                     l2896 18FC                       l2898 191C                       ?_isr 0001  
                     STR_1 0811                       STR_2 0820                       STR_3 0801  
                     STR_4 0819                       STR_5 0824                       _CREN 007D5C  
                     u2000 11F2                       u2001 11EE                       u2010 13BC  
                     u2011 13B8                       u2020 13EE                       u2100 1742  
                     u2021 13EA                       u2101 173E                       u2030 142C  
                     u2110 1CA4                       u2031 1428                       u2111 1CA0  
                     u2040 1456                       u2200 0A3E                       u2120 0858  
                     u2041 1452                       u2201 0A3A                       u2121 0852  
                     u2050 1484                       u2210 0A58                       u2130 085A  
                     u2051 1480                       u2211 0A54                       u2060 14CC  
                     u2220 0A72                       u2140 0870                       u2300 0EA2  
                     u2061 14C8                       u2221 0A6E                       u2141 086C  
                     u2301 0E9E                       u2310 1538                       u2070 16BC  
                     u2230 0A80                       u2150 08A0                       u2311 1534  
                     u2071 16B8                       u2231 0A7C                       u2151 089C  
                     u2320 156A                       u2400 180E                       u2080 16DE  
                     u2240 0A92                       u2160 08BC                       _LATD 000F8C  
                     u2321 1566                       u2401 180A                       u2081 16DA  
                     u2241 0A8E                       u2161 08B8                       u2330 1586  
                     u2410 1826                       u2090 1734                       u2250 0AA0  
                     u2170 08EA                       u2331 1582                       u2411 1822  
                     u2091 1730                       u2251 0A9C                       u2171 08E6  
                     u2340 1598                       u2420 1DC2                       u2500 1302  
                     u2260 0AB8                       u2180 08F8                       u2341 1594  
                     u2421 1DBE                       u2501 12FE                       u2261 0AB4  
                     u2181 08F4                       u2350 15C0                       u2510 1348  
                     u2190 0A20                       u2270 0D92                       u2430 1A48  
                     u2351 15BC                       u2511 1344                       u2191 0A1C  
                     u2271 0D8E                       u2431 1A44                       u2360 1B3C  
                     u2520 13A8                       u2280 0DDA                       u2440 1A76  
                     u2600 0FA8                       u2361 1B38                       u2521 13A4  
                     u2281 0DD6                       u2441 1A72                       u2601 0FA4  
                     u2370 1B64                       u2530 1BC8                       u2290 0DFE  
                     u2450 1D32                       u2610 105C                       u2371 1B60  
                     u2531 1BC4                       u2291 0DFA                       u2451 1D2C  
                     u2611 1056                       u2380 1782                       u2540 1BDC  
                     u1900 1666                       u2460 1D34                       u2620 105E  
                     u2381 177E                       u2541 1BD8                       u1901 1662  
                     u1910 1B04                       u2390 17C8                       u2550 1BEA  
                     u2470 19C8                       u2710 0C80                       u2630 1074  
                     u2391 17C4                       u2551 1BE6                       u2471 19C4  
                     u2711 0C7C                       u2631 1070                       u1920 1B14  
                     u2560 1C44                       u2480 124E                       u2704 0C2A  
                     u2640 1086                       u1921 1B10                       u2561 1C40  
                     u2481 124A                       u2705 0C24                       u2641 1082  
                     u2730 1D68                       u2490 1290                       u1930 1C88  
                     u2650 0B56                       u2570 1CF8                       u2731 1D64  
                     u2491 128C                       u1931 1C84                       u2651 0B52  
                     u2571 1CF4                       u1940 10BE                       u2724 0CB6  
                     u2660 0B64                       u2580 0F58                       u2740 18FC  
                     u1917 1AFA                       u1941 10BA                       u2725 0CB0  
                     u2661 0B60                       u2581 0F54                       u2741 18F8  
                     u1950 10F0                       u1870 15F6                       u2670 0B72  
                     u2590 0F8C                       u2750 1966                       u1951 10EC  
                     u1871 15F2                       u2671 0B6E                       u2807 0B3E  
                     u2591 0F88                       u2751 1960                       u1880 1608  
                     u2680 0BA8                       u2760 1968                       u2817 1BCA  
                     u1961 111A                       u1881 1604                       u2681 0BA4  
                     u1970 113E                       u1890 1630                       u2690 0BF4  
                     u2770 188E                       u1971 113A                       u1891 162C  
                     u2691 0BF0                       u2771 188A                       u1980 1168  
                     u1981 1164                       u1990 11A8                       u1991 11A4  
                     u2787 1868                       _RCIF 007CF5                       u2797 0B30  
                     _TXIF 007CF4                       abs@a 0015                       _dbuf 0099  
                     _atoi 0F22                       _main 1830                       _dtoa 0828  
                     _prec 0064                       _nout 0060                       pad@i 001A  
                     pad@p 0017                       fsr1h 000FE2                       fsr2h 000FDA  
                     indf1 000FE7                       indf2 000FDF                       fsr1l 000FE1  
                     pad@w 001C                       fsr2l 000FD9                       btemp 005D  
 __end_of_USART_SendString 1C46                       prodh 000FF4                       prodl 000FF3  
                     start 000E               ___param_bank 000000                      ??_abs 0017  
                    ??_pad 0019                      ??_isr 0001            ?_USART_SendChar 0001  
          __end_of___aodiv 1234                      ?_atoi 000A                      ?_main 0001  
                    ?_dtoa 001E            __end_of___aomod 150E                      i2l137 1BAE  
    __end_of_data_received 1D72                      _RCREG 000FAE               vfpfcnvrt@fmt 0044  
                    _SPBRG 000FAF         USART_SendChar@data 0003                      _TRISD 000F95  
                    _TXREG 000FAD                      _flags 005B                      _fputc 15E4  
                    _fputs 1C46            __end_of_isdigit 1D3A                      atoi@n 0017  
                    pad@fp 0013                      atoi@s 000A                      _width 0062  
                    _putch 1DCC                      dtoa@d 0020                      dtoa@i 0040  
                    dtoa@n 0038                      dtoa@p 0032                      dtoa@s 0036  
                    dtoa@w 0034            __end_of_isspace 1A82                      tablat 000FF5  
                    ttemp5 005E                      ttemp6 0061                      ttemp7 0065  
          get_action@value 001B                      status 000FD8                      wtemp8 005E  
          __end_of_sprintf 1AD4            __end_of_strncmp 15E4                ?_USART_Init 0001  
          __initialization 19D2               __end_of_atoi 10AC               __end_of_main 18E0  
             __end_of_dtoa 0B06           data_received@ptr 0014                     ??_atoi 000C  
                   ??_main 00D7                     ??_dtoa 0028              __activetblptr 000002  
                   ?_fputc 0003                     ?_fputs 000C                     ?_putch 0001  
     __end_of_dht_read_bit 1C00                     i2l2280 1B86                     i2l2282 1B94  
                   i2l2284 1B9A                     i2l2286 1BAC                     i2l2278 1B78  
                   _TRISC6 007CA6                     _TRISC7 007CA7           __end_of_dht_read 0D6E  
             vfprintf@cfmt 0058                  ??___aodiv 0013                  ??___aomod 0013  
                   ___wmul 1D72                     _memset 1234                     clear_0 19FA  
                   clear_1 1A0C                     clear_2 1A18                     pad@buf 0015  
                   dtoa@fp 001E                     _strchr 1B22                     _strlen 1AD4  
                   _strstr 1770                     fputc@c 0003                     fputs@c 0010  
                   fputs@i 0011                     fputs@s 000C                  ??_isdigit 0005  
             __mediumconst 0000                  ??_isspace 0005                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8        __size_of_USART_Init 001A  
                   putch@c 0001           __end_of_vfprintf 19D2                  ??_sprintf 005A  
                ??_strncmp 0009                 __accesstop 0060    __end_of__initialization 1A22  
            ___rparam_used 000001             __pcstackCOMRAM 0001               __pidataBANK0 1DC8  
            __end_of_fputc 16AE              __end_of_fputs 1C8A              __end_of_putch 1DCE  
                  ??_fputc 0007                    ??_fputs 0010                    ??_putch 0003  
               __pbssBANK0 0060                 __pbssBANK1 0100  dht_read@relative_humidity 00CD  
        ?_USART_SendString 0007           ??_USART_SendChar 0003         ??_USART_SendString 0009  
                  ?___wmul 0003                    ?_memset 0003                    ?_strchr 0003  
                  ?_strlen 0003                    ?_strstr 000E                    _END_CMD 00D9  
               _get_action 18E0      __size_of_dht_read_bit 0046         __size_of_vfpfcnvrt 01B4  
                ?_dht_read 0001               ??_USART_Init 0003                    __Hparam 0000  
                  __Lparam 0000                 _is_command 1CCA                    ___aodiv 10AC  
                  ___aomod 13AA            __size_of___wmul 0026                  ?_vfprintf 0052  
             __psmallconst 0800               _dht_read_bit 1BBA                    _data_in 0150  
                  __pcinit 19D2            __size_of_memset 0176                    __ramtop 0800  
                  __ptext0 1830                    __ptext1 18E0                    __ptext2 1CCA  
                  __ptext3 0F22                    __ptext4 1A30                    __ptext5 1D02  
                  __ptext6 1D72                    __ptext7 0B06                    __ptext8 1A82  
                  __ptext9 1970               _dht_raw_data 0100            __size_of_strchr 004C  
          __size_of_strlen 004E            __size_of_strstr 00C0               __size_of_abs 0040  
             __size_of_pad 00C2                    _isdigit 1D02               __size_of_isr 1BB2  
                  _isspace 1A30                    atoi@neg 0010         __end_of_USART_Init 1DB2  
               ??_dht_read 00C9                    _sprintf 1A82                    _strncmp 150E  
           __pintcode_body 1B6E       end_of_initialization 1A22                    fputc@fp 0005  
                  memset@c 0005                    memset@k 000B                    memset@n 0007  
                  memset@s 000D              __Lmediumconst 0000                    int_func 1B6E  
                  fputs@fp 000E     __size_of_data_received 0038          __end_of_vfpfcnvrt 0F22  
                _RCSTAbits 000FAB                    postdec1 000FE5                    postdec2 000FDD  
                  postinc0 000FEE                    postinc1 000FE6                    postinc2 000FDE  
               ??_vfprintf 0058                    strchr@c 0005                    strchr@s 0003  
                  strlen@a 0005                    strlen@s 0003                    strstr@h 000E  
                  strstr@n 0010                  _PORTDbits 000F83                ?_get_action 0001  
               main@action 005A                  _TXSTAbits 000FAC                ?_is_command 0014  
              vfpfcnvrt@ap 0046                vfpfcnvrt@fp 0042                vfpfcnvrt@ll 004A  
           __end_of___wmul 1D98        dht_read@temperature 00CF             __end_of_memset 13AA  
           __end_of_strchr 1B6E             __end_of_strlen 1B22              _data_received 1D3A  
           __end_of_strstr 1830        start_initialization 19D2                __end_of_abs 1CCA  
        dht_read@bit_index 00D5                __end_of_pad 1770                __end_of_isr 1BBA  
     dht_read@bit_position 00D1        __size_of_get_action 0090                vfprintf@fmt 0054  
                 ??___wmul 0007                __pdataBANK0 00D9                   ??_memset 0009  
               memset@dest 0003                   ??_strchr 0007                   ??_strlen 0005  
__size_of_USART_SendString 0046                   ??_strstr 0012             ?_data_received 0001  
              __pbssBIGRAM 0150                __pbssCOMRAM 005B              __pcstackBANK0 00B9  
         ___aodiv@dividend 0003        __size_of_is_command 0038          __size_of_dht_read 0268  
                _dtoa$1026 0030                  __pintcode 0008                   ?___aodiv 0003  
                 ?___aomod 0003           ___aodiv@quotient 0015      USART_SendString@index 000B  
        __size_of_vfprintf 0062                __smallconst 0800                   ?_isdigit 0003  
                 ?_isspace 0003                   _LED0_CMD 00DB                   ?_sprintf 00B9  
           __size_of_fputc 00CA             __size_of_fputs 0044                   ?_strncmp 0003  
           __size_of_putch 0002             ___wmul@product 0007                   _LATDbits 000F8C  
                 _PIE1bits 000F9D                   i2u185_40 1B86                   i2u185_41 1B82  
                 i2u186_40 1B94                   i2u186_41 1B90              is_command@ptr 0016  
                _vfpfcnvrt 0D6E            ??_data_received 0014          ___wmul@multiplier 0003  
  __size_of_USART_SendChar 0016               ??_get_action 0019                  copy_data0 19E6  
                 __Hrparam 0000                 vfprintf@ap 0056                   __Lrparam 0000  
               vfprintf@fp 0052         __end_of_get_action 1970               ??_is_command 0016  
         __size_of___aodiv 0188           __size_of___aomod 0164                 ?_vfpfcnvrt 0042  
          ___aodiv@divisor 000B            ___aodiv@counter 0013          is_command@command 0014  
         _USART_SendString 1C00                 sprintf@fmt 00BB                   _atoi$930 0014  
                 _atoi$928 0012                   _atoi$929 0016                   _data_out 0067  
         __size_of_isdigit 0038           __size_of_isspace 0052       USART_SendString@data 0007  
                 __ptext10 0D6E                   __ptext11 0828                   __ptext20 1BBA  
                 __ptext12 16AE                   __ptext21 1C00                   __ptext13 1C46  
                 __ptext22 1DB2                   __ptext14 15E4                   __ptext23 1D3A  
                 __ptext15 1DCC                   __ptext24 1770                   __ptext16 1C8A  
                 __ptext25 150E                   __ptext17 13AA                   __ptext26 1AD4  
                 __ptext18 10AC                   __ptext27 1B22                   __ptext19 1234  
                 __ptext28 1D98                   _dht_read 0B06           __size_of_sprintf 0052  
       __end_of_is_command 1D02           __size_of_strncmp 00D6              __size_of_atoi 018A  
            __size_of_main 00B0              __size_of_dtoa 02DE                   int$flags 005D  
                 _position 0066                   _vfprintf 1970                _isspace$946 0009  
         ___aomod@dividend 0003                 _INTCONbits 000FF2                   isdigit@c 0003  
                 intlevel2 0000              dht_read@index 00CC                  sprintf@ap 00C1  
                 isspace@c 0003                  strncmp@_l 0003                  strncmp@_r 0005  
      get_action@str_value 0019            ___aomod@divisor 000B              ?_dht_read_bit 0003  
              ??_vfpfcnvrt 0048            ___aomod@counter 0013             _USART_SendChar 1DB2  
             dht_read@mask 00D3                   sprintf@f 00C3                   sprintf@s 00B9  
                 strncmp@l 000A                   strncmp@n 0007                   strncmp@r 000C  
                 strstr@nl 0012               ___aodiv@sign 0014               ___aomod@sign 0014  
               _USART_Init 1D98  
