

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Jan 25 03:23:20 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4553
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM_1,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51  0000                     
    52                           ; Version 2.20
    53                           ; Generated 12/02/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4553 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     
    87                           	psect	idataBANK0
    88  001DB2                     __pidataBANK0:
    89                           	callstack 0
    90                           
    91                           ;initializer for _END_CMD
    92  001DB2  20                 	db	low STR_2
    93  001DB3  08                 	db	high STR_2
    94                           
    95                           ;initializer for _LED0_CMD
    96  001DB4  11                 	db	low STR_1
    97  001DB5  08                 	db	high STR_1
    98  0000                     _PORTDbits	set	3971
    99  0000                     _LATDbits	set	3980
   100  0000                     _LATD	set	3980
   101  0000                     _TRISD	set	3989
   102  0000                     _TRISC7	set	31911
   103  0000                     _TRISC6	set	31910
   104  0000                     _TXREG	set	4013
   105  0000                     _RCREG	set	4014
   106  0000                     _PIE1bits	set	3997
   107  0000                     _RCSTAbits	set	4011
   108  0000                     _TXSTAbits	set	4012
   109  0000                     _SPBRG	set	4015
   110  0000                     _TXIF	set	31988
   111  0000                     _CREN	set	32092
   112  0000                     _RCIF	set	31989
   113  0000                     _INTCONbits	set	4082
   114                           
   115                           	psect	smallconst
   116  000800                     __psmallconst:
   117                           	callstack 0
   118  000800  00                 	db	0
   119  000801                     STR_3:
   120  000801  54                 	db	84	;'T'
   121  000802  65                 	db	101	;'e'
   122  000803  6D                 	db	109	;'m'
   123  000804  70                 	db	112	;'p'
   124  000805  65                 	db	101	;'e'
   125  000806  72                 	db	114	;'r'
   126  000807  61                 	db	97	;'a'
   127  000808  74                 	db	116	;'t'
   128  000809  75                 	db	117	;'u'
   129  00080A  72                 	db	114	;'r'
   130  00080B  65                 	db	101	;'e'
   131  00080C  3A                 	db	58	;':'
   132  00080D  20                 	db	32
   133  00080E  25                 	db	37
   134  00080F  64                 	db	100	;'d'
   135  000810  00                 	db	0
   136  000811                     STR_1:
   137  000811  43                 	db	67	;'C'
   138  000812  4D                 	db	77	;'M'
   139  000813  44                 	db	68	;'D'
   140  000814  2B                 	db	43
   141  000815  4C                 	db	76	;'L'
   142  000816  45                 	db	69	;'E'
   143  000817  44                 	db	68	;'D'
   144  000818  00                 	db	0
   145  000819                     STR_4:
   146  000819  52                 	db	82	;'R'
   147  00081A  48                 	db	72	;'H'
   148  00081B  3A                 	db	58	;':'
   149  00081C  20                 	db	32
   150  00081D  25                 	db	37
   151  00081E  64                 	db	100	;'d'
   152  00081F  00                 	db	0
   153  000820                     STR_2:
   154  000820  3E                 	db	62	;'>'
   155  000821  3E                 	db	62	;'>'
   156  000822  3E                 	db	62	;'>'
   157  000823  00                 	db	0
   158  000824                     STR_5:
   159  000824  3D                 	db	61	;'='
   160  000825  00                 	db	0
   161  000826  00                 	db	0	; dummy byte at the end
   162  0000                     
   163                           ; #config settings
   164                           
   165                           	psect	cinit
   166  0019BC                     __pcinit:
   167                           	callstack 0
   168  0019BC                     start_initialization:
   169                           	callstack 0
   170  0019BC                     __initialization:
   171                           	callstack 0
   172                           
   173                           ; Initialize objects allocated to BANK0 (4 bytes)
   174                           ; load TBLPTR registers with __pidataBANK0
   175  0019BC  0EB2               	movlw	low __pidataBANK0
   176  0019BE  6EF6               	movwf	tblptrl,c
   177  0019C0  0E1D               	movlw	high __pidataBANK0
   178  0019C2  6EF7               	movwf	tblptrh,c
   179  0019C4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   180  0019C6  6EF8               	movwf	tblptru,c
   181  0019C8  EE00  F0D9         	lfsr	0,__pdataBANK0
   182  0019CC  EE10 F004          	lfsr	1,4
   183  0019D0                     copy_data0:
   184  0019D0  0009               	tblrd		*+
   185  0019D2  CFF5 FFEE          	movff	tablat,postinc0
   186  0019D6  50E5               	movf	postdec1,w,c
   187  0019D8  50E1               	movf	fsr1l,w,c
   188  0019DA  E1FA               	bnz	copy_data0
   189                           
   190                           ; Clear objects allocated to BIGRAM_1 (512 bytes)
   191  0019DC  EE01  F050         	lfsr	0,__pbssBIGRAM_1
   192  0019E0  EE12 F000          	lfsr	1,512
   193  0019E4                     clear_0:
   194  0019E4  6AEE               	clrf	postinc0,c
   195  0019E6  50E5               	movf	postdec1,w,c
   196  0019E8  50E1               	movf	fsr1l,w,c
   197  0019EA  E1FC               	bnz	clear_0
   198  0019EC  50E2               	movf	fsr1h,w,c
   199  0019EE  E1FA               	bnz	clear_0
   200                           
   201                           ; Clear objects allocated to BANK1 (80 bytes)
   202  0019F0  EE01  F000         	lfsr	0,__pbssBANK1
   203  0019F4  0E50               	movlw	80
   204  0019F6                     clear_1:
   205  0019F6  6AEE               	clrf	postinc0,c
   206  0019F8  06E8               	decf	wreg,f,c
   207  0019FA  E1FD               	bnz	clear_1
   208                           
   209                           ; Clear objects allocated to BANK0 (89 bytes)
   210  0019FC  EE00  F060         	lfsr	0,__pbssBANK0
   211  001A00  0E59               	movlw	89
   212  001A02                     clear_2:
   213  001A02  6AEE               	clrf	postinc0,c
   214  001A04  06E8               	decf	wreg,f,c
   215  001A06  E1FD               	bnz	clear_2
   216                           
   217                           ; Clear objects allocated to COMRAM (2 bytes)
   218  001A08  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   219  001A0A  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   220  001A0C                     end_of_initialization:
   221                           	callstack 0
   222  001A0C                     __end_of__initialization:
   223                           	callstack 0
   224  001A0C  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   225  001A0E  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   226  001A10  0E00               	movlw	low (__Lmediumconst shr (0+16))
   227  001A12  6EF8               	movwf	tblptru,c
   228  001A14  0100               	movlb	0
   229  001A16  EF0C  F00C         	goto	_main	;jump to C main() function
   230                           
   231                           	psect	bssCOMRAM
   232  00005B                     __pbssCOMRAM:
   233                           	callstack 0
   234  00005B                     _flags:
   235                           	callstack 0
   236  00005B                     	ds	2
   237                           
   238                           	psect	bssBANK0
   239  000060                     __pbssBANK0:
   240                           	callstack 0
   241  000060                     _nout:
   242                           	callstack 0
   243  000060                     	ds	2
   244  000062                     _width:
   245                           	callstack 0
   246  000062                     	ds	2
   247  000064                     _prec:
   248                           	callstack 0
   249  000064                     	ds	2
   250  000066                     _position:
   251                           	callstack 0
   252  000066                     	ds	1
   253  000067                     _data_out:
   254                           	callstack 0
   255  000067                     	ds	50
   256  000099                     _dbuf:
   257                           	callstack 0
   258  000099                     	ds	32
   259                           
   260                           	psect	dataBANK0
   261  0000D9                     __pdataBANK0:
   262                           	callstack 0
   263  0000D9                     	ds	2
   264  0000DB                     	ds	2
   265                           
   266                           	psect	bssBANK1
   267  000100                     __pbssBANK1:
   268                           	callstack 0
   269  000100                     _dht_raw_data:
   270                           	callstack 0
   271  000100                     	ds	80
   272                           
   273                           	psect	bssBIGRAM_1
   274  000150                     __pbssBIGRAM_1:
   275                           	callstack 0
   276  000150                     _data_in:
   277                           	callstack 0
   278  000150                     	ds	512
   279                           
   280                           	psect	cstackBANK0
   281  0000B9                     __pcstackBANK0:
   282                           	callstack 0
   283  0000B9                     ?_sprintf:
   284                           	callstack 0
   285  0000B9                     sprintf@s:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0x0
   289  0000B9                     	ds	2
   290  0000BB                     sprintf@fmt:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x2
   294  0000BB                     	ds	6
   295  0000C1                     sprintf@ap:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x8
   299  0000C1                     	ds	2
   300  0000C3                     sprintf@f:
   301                           	callstack 0
   302                           
   303                           ; 6 bytes @ 0xA
   304  0000C3                     	ds	6
   305  0000C9                     ??_dht_read:
   306                           
   307                           ; 1 bytes @ 0x10
   308  0000C9                     	ds	3
   309  0000CC                     dht_read@relative_humidity:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x13
   313  0000CC                     	ds	2
   314  0000CE                     dht_read@temperature:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x15
   318  0000CE                     	ds	2
   319  0000D0                     dht_read@bit_position:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x17
   323  0000D0                     	ds	2
   324  0000D2                     dht_read@index:
   325                           	callstack 0
   326                           
   327                           ; 1 bytes @ 0x19
   328  0000D2                     	ds	1
   329  0000D3                     dht_read@mask:
   330                           	callstack 0
   331                           
   332                           ; 2 bytes @ 0x1A
   333  0000D3                     	ds	2
   334  0000D5                     dht_read@bit_index:
   335                           	callstack 0
   336                           
   337                           ; 2 bytes @ 0x1C
   338  0000D5                     	ds	2
   339  0000D7                     ??_main:
   340                           
   341                           ; 1 bytes @ 0x1E
   342  0000D7                     	ds	2
   343                           
   344                           	psect	cstackCOMRAM
   345  000001                     __pcstackCOMRAM:
   346                           	callstack 0
   347  000001                     ??_isr:
   348  000001                     
   349                           ; 1 bytes @ 0x0
   350  000001                     	ds	2
   351  000003                     ?_dht_read_bit:
   352                           	callstack 0
   353  000003                     ?_strlen:
   354                           	callstack 0
   355  000003                     ?_isspace:
   356                           	callstack 0
   357  000003                     ?_isdigit:
   358                           	callstack 0
   359  000003                     ?_strncmp:
   360                           	callstack 0
   361  000003                     ?_strchr:
   362                           	callstack 0
   363  000003                     ?___wmul:
   364                           	callstack 0
   365  000003                     ?___aodiv:
   366                           	callstack 0
   367  000003                     ?___aomod:
   368                           	callstack 0
   369  000003                     USART_SendChar@data:
   370                           	callstack 0
   371  000003                     ___wmul@multiplier:
   372                           	callstack 0
   373  000003                     isdigit@c:
   374                           	callstack 0
   375  000003                     isspace@c:
   376                           	callstack 0
   377  000003                     memset@dest:
   378                           	callstack 0
   379  000003                     fputc@c:
   380                           	callstack 0
   381  000003                     strlen@s:
   382                           	callstack 0
   383  000003                     strchr@s:
   384                           	callstack 0
   385  000003                     strncmp@_l:
   386                           	callstack 0
   387  000003                     ___aodiv@dividend:
   388                           	callstack 0
   389  000003                     ___aomod@dividend:
   390                           	callstack 0
   391                           
   392                           ; 8 bytes @ 0x2
   393  000003                     	ds	2
   394  000005                     ??_isspace:
   395  000005                     ??_isdigit:
   396  000005                     ___wmul@multiplicand:
   397                           	callstack 0
   398  000005                     memset@c:
   399                           	callstack 0
   400  000005                     fputc@fp:
   401                           	callstack 0
   402  000005                     strlen@a:
   403                           	callstack 0
   404  000005                     strchr@c:
   405                           	callstack 0
   406  000005                     strncmp@_r:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x4
   410  000005                     	ds	2
   411  000007                     ??_fputc:
   412  000007                     USART_SendString@data:
   413                           	callstack 0
   414  000007                     ___wmul@product:
   415                           	callstack 0
   416  000007                     memset@n:
   417                           	callstack 0
   418  000007                     strncmp@n:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x6
   422  000007                     	ds	2
   423  000009                     ??_memset:
   424  000009                     ??_USART_SendString:
   425  000009                     ??_strncmp:
   426  000009                     _isspace$946:
   427                           	callstack 0
   428                           
   429                           ; 1 bytes @ 0x8
   430  000009                     	ds	1
   431  00000A                     ?_atoi:
   432                           	callstack 0
   433  00000A                     atoi@s:
   434                           	callstack 0
   435  00000A                     strncmp@l:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0x9
   439  00000A                     	ds	1
   440  00000B                     USART_SendString@index:
   441                           	callstack 0
   442  00000B                     memset@k:
   443                           	callstack 0
   444  00000B                     ___aodiv@divisor:
   445                           	callstack 0
   446  00000B                     ___aomod@divisor:
   447                           	callstack 0
   448                           
   449                           ; 8 bytes @ 0xA
   450  00000B                     	ds	1
   451  00000C                     ??_atoi:
   452  00000C                     fputs@s:
   453                           	callstack 0
   454  00000C                     strncmp@r:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0xB
   458  00000C                     	ds	1
   459  00000D                     memset@s:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0xC
   463  00000D                     	ds	1
   464  00000E                     ?_strstr:
   465                           	callstack 0
   466  00000E                     fputs@fp:
   467                           	callstack 0
   468  00000E                     strstr@h:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0xD
   472  00000E                     	ds	2
   473  000010                     fputs@c:
   474                           	callstack 0
   475  000010                     atoi@neg:
   476                           	callstack 0
   477  000010                     strstr@n:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0xF
   481  000010                     	ds	1
   482  000011                     fputs@i:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x10
   486  000011                     	ds	1
   487  000012                     _atoi$928:
   488                           	callstack 0
   489  000012                     strstr@nl:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x11
   493  000012                     	ds	1
   494  000013                     ?_pad:
   495                           	callstack 0
   496  000013                     ___aodiv@counter:
   497                           	callstack 0
   498  000013                     ___aomod@counter:
   499                           	callstack 0
   500  000013                     pad@fp:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x12
   504  000013                     	ds	1
   505  000014                     ___aodiv@sign:
   506                           	callstack 0
   507  000014                     ___aomod@sign:
   508                           	callstack 0
   509  000014                     data_received@ptr:
   510                           	callstack 0
   511  000014                     is_command@command:
   512                           	callstack 0
   513  000014                     _atoi$930:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x13
   517  000014                     	ds	1
   518  000015                     ?_abs:
   519                           	callstack 0
   520  000015                     pad@buf:
   521                           	callstack 0
   522  000015                     abs@a:
   523                           	callstack 0
   524  000015                     ___aodiv@quotient:
   525                           	callstack 0
   526                           
   527                           ; 8 bytes @ 0x14
   528  000015                     	ds	1
   529  000016                     _atoi$929:
   530                           	callstack 0
   531  000016                     is_command@ptr:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x15
   535  000016                     	ds	1
   536  000017                     ??_abs:
   537  000017                     atoi@n:
   538                           	callstack 0
   539  000017                     pad@p:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x16
   543  000017                     	ds	2
   544  000019                     ??_pad:
   545  000019                     get_action@str_value:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x18
   549  000019                     	ds	1
   550  00001A                     pad@i:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x19
   554  00001A                     	ds	1
   555  00001B                     get_action@value:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x1A
   559  00001B                     	ds	1
   560  00001C                     pad@w:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x1B
   564  00001C                     	ds	2
   565  00001E                     ?_dtoa:
   566                           	callstack 0
   567  00001E                     dtoa@fp:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x1D
   571  00001E                     	ds	2
   572  000020                     dtoa@d:
   573                           	callstack 0
   574                           
   575                           ; 8 bytes @ 0x1F
   576  000020                     	ds	8
   577  000028                     ??_dtoa:
   578                           
   579                           ; 1 bytes @ 0x27
   580  000028                     	ds	8
   581  000030                     _dtoa$1026:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x2F
   585  000030                     	ds	2
   586  000032                     dtoa@p:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x31
   590  000032                     	ds	2
   591  000034                     dtoa@w:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x33
   595  000034                     	ds	2
   596  000036                     dtoa@s:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x35
   600  000036                     	ds	2
   601  000038                     dtoa@n:
   602                           	callstack 0
   603                           
   604                           ; 8 bytes @ 0x37
   605  000038                     	ds	8
   606  000040                     dtoa@i:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x3F
   610  000040                     	ds	2
   611  000042                     ?_vfpfcnvrt:
   612                           	callstack 0
   613  000042                     vfpfcnvrt@fp:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x41
   617  000042                     	ds	2
   618  000044                     vfpfcnvrt@fmt:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x43
   622  000044                     	ds	2
   623  000046                     vfpfcnvrt@ap:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x45
   627  000046                     	ds	2
   628  000048                     ??_vfpfcnvrt:
   629                           
   630                           ; 1 bytes @ 0x47
   631  000048                     	ds	2
   632  00004A                     vfpfcnvrt@ll:
   633                           	callstack 0
   634                           
   635                           ; 8 bytes @ 0x49
   636  00004A                     	ds	8
   637  000052                     ?_vfprintf:
   638                           	callstack 0
   639  000052                     vfprintf@fp:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x51
   643  000052                     	ds	2
   644  000054                     vfprintf@fmt:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x53
   648  000054                     	ds	2
   649  000056                     vfprintf@ap:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x55
   653  000056                     	ds	2
   654  000058                     vfprintf@cfmt:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x57
   658  000058                     	ds	2
   659  00005A                     main@action:
   660                           	callstack 0
   661                           
   662                           ; 1 bytes @ 0x59
   663  00005A                     	ds	1
   664                           
   665 ;;
   666 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   667 ;;
   668 ;; *************** function _main *****************
   669 ;; Defined at:
   670 ;;		line 113 in file "main.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;		None
   673 ;; Auto vars:     Size  Location     Type
   674 ;;  action          1   89[COMRAM] enum E3677
   675 ;; Return value:  Size  Location     Type
   676 ;;                  1    wreg      void 
   677 ;; Registers used:
   678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   684 ;;      Params:         0       0       0       0       0       0       0       0       0
   685 ;;      Locals:         1       0       0       0       0       0       0       0       0
   686 ;;      Temps:          0       2       0       0       0       0       0       0       0
   687 ;;      Totals:         1       2       0       0       0       0       0       0       0
   688 ;;Total ram usage:        3 bytes
   689 ;; Hardware stack levels required when called:   10
   690 ;; This function calls:
   691 ;;		_USART_Init
   692 ;;		_data_received
   693 ;;		_dht_read
   694 ;;		_get_action
   695 ;;		_memset
   696 ;; This function is called by:
   697 ;;		Startup code after reset
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           	psect	text0
   702  001818                     __ptext0:
   703                           	callstack 0
   704  001818                     _main:
   705                           	callstack 21
   706  001818                     
   707                           ;main.c: 114:     USART_Init();
   708  001818  ECC1  F00E         	call	_USART_Init	;wreg free
   709  00181C                     
   710                           ;main.c: 115:     memset(data_in, 0, 512);
   711  00181C  0E50               	movlw	low _data_in
   712  00181E  6E03               	movwf	memset@dest^0,c
   713  001820  0E01               	movlw	high _data_in
   714  001822  6E04               	movwf	(memset@dest+1)^0,c
   715  001824  0E00               	movlw	0
   716  001826  6E06               	movwf	(memset@c+1)^0,c
   717  001828  0E00               	movlw	0
   718  00182A  6E05               	movwf	memset@c^0,c
   719  00182C  0E02               	movlw	2
   720  00182E  6E08               	movwf	(memset@n+1)^0,c
   721  001830  0E00               	movlw	0
   722  001832  6E07               	movwf	memset@n^0,c
   723  001834  EC0E  F009         	call	_memset	;wreg free
   724  001838                     
   725                           ;main.c: 116:     position = 0;
   726  001838  0E00               	movlw	0
   727  00183A  0100               	movlb	0	; () banked
   728  00183C  6F66               	movwf	_position& (0+255),b
   729  00183E                     
   730                           ; BSR set to: 0
   731                           ;main.c: 117:     TRISD = 0;
   732  00183E  0E00               	movlw	0
   733  001840  6E95               	movwf	149,c	;volatile
   734  001842                     
   735                           ; BSR set to: 0
   736                           ;main.c: 118:     LATD = 0;
   737  001842  0E00               	movlw	0
   738  001844  6E8C               	movwf	140,c	;volatile
   739  001846                     l2922:
   740                           
   741                           ;main.c: 121:         _delay((unsigned long)((1000)*(16000000/4000.0)));
   742  001846  0E15               	movlw	21
   743  001848  0100               	movlb	0	; () banked
   744  00184A  6FD8               	movwf	(??_main+1)& (0+255),b
   745  00184C  0E4B               	movlw	75
   746  00184E  6FD7               	movwf	??_main& (0+255),b
   747  001850  0EBE               	movlw	190
   748  001852                     u2787:
   749  001852  2EE8               	decfsz	wreg,f,c
   750  001854  D7FE               	bra	u2787
   751  001856  2FD7               	decfsz	??_main& (0+255),f,b
   752  001858  D7FC               	bra	u2787
   753  00185A  2FD8               	decfsz	(??_main+1)& (0+255),f,b
   754  00185C  D7FA               	bra	u2787
   755  00185E  F000               	nop	
   756  001860                     
   757                           ;main.c: 122:         dht_read();
   758  001860  EC83  F005         	call	_dht_read	;wreg free
   759  001864                     
   760                           ;main.c: 124:         if (data_received()) {
   761  001864  EC92  F00E         	call	_data_received	;wreg free
   762  001868  0900               	iorlw	0
   763  00186A  B4D8               	btfsc	status,2,c
   764  00186C  EF3A  F00C         	goto	u2771
   765  001870  EF3C  F00C         	goto	u2770
   766  001874                     u2771:
   767  001874  EF23  F00C         	goto	l2922
   768  001878                     u2770:
   769  001878                     
   770                           ;main.c: 125:             action_t action = get_action();
   771  001878  EC65  F00C         	call	_get_action	;wreg free
   772  00187C  6E5A               	movwf	main@action^0,c
   773                           
   774                           ;main.c: 127:             switch (action) {
   775  00187E  EF47  F00C         	goto	l2932
   776  001882                     l80:
   777                           
   778                           ; BSR set to: 0
   779                           ;main.c: 129:                     LATDbits.LATD1 = 1;
   780  001882  828C               	bsf	140,1,c	;volatile
   781                           
   782                           ;main.c: 130:                     break;
   783  001884  EF23  F00C         	goto	l2922
   784  001888                     l82:
   785                           
   786                           ; BSR set to: 0
   787                           ;main.c: 133:                     LATDbits.LATD1 = 0;
   788  001888  928C               	bcf	140,1,c	;volatile
   789                           
   790                           ;main.c: 134:                     break;
   791  00188A  EF23  F00C         	goto	l2922
   792  00188E                     l2932:
   793  00188E  505A               	movf	main@action^0,w,c
   794  001890  0100               	movlb	0	; () banked
   795  001892  6FD7               	movwf	??_main& (0+255),b
   796  001894  6BD8               	clrf	(??_main+1)& (0+255),b
   797                           
   798                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   799                           ; Switch size 1, requested type "simple"
   800                           ; Number of cases is 1, Range of values is 0 to 0
   801                           ; switch strategies available:
   802                           ; Name         Instructions Cycles
   803                           ; simple_byte            4     3 (average)
   804                           ;	Chosen strategy is simple_byte
   805  001896  51D8               	movf	(??_main+1)& (0+255),w,b
   806  001898  0A00               	xorlw	0	; case 0
   807  00189A  B4D8               	btfsc	status,2,c
   808  00189C  EF52  F00C         	goto	l2990
   809  0018A0  EF23  F00C         	goto	l2922
   810  0018A4                     l2990:
   811                           
   812                           ; BSR set to: 0
   813                           ; Switch size 1, requested type "simple"
   814                           ; Number of cases is 3, Range of values is 0 to 2
   815                           ; switch strategies available:
   816                           ; Name         Instructions Cycles
   817                           ; simple_byte           10     6 (average)
   818                           ;	Chosen strategy is simple_byte
   819  0018A4  51D7               	movf	??_main& (0+255),w,b
   820  0018A6  0A00               	xorlw	0	; case 0
   821  0018A8  B4D8               	btfsc	status,2,c
   822  0018AA  EF41  F00C         	goto	l80
   823  0018AE  0A01               	xorlw	1	; case 1
   824  0018B0  B4D8               	btfsc	status,2,c
   825  0018B2  EF44  F00C         	goto	l82
   826  0018B6  0A03               	xorlw	3	; case 2
   827  0018B8  B4D8               	btfsc	status,2,c
   828  0018BA  EF61  F00C         	goto	l78
   829  0018BE  EF23  F00C         	goto	l2922
   830  0018C2                     l78:
   831                           
   832                           ; BSR set to: 0
   833  0018C2  EF23  F00C         	goto	l2922
   834  0018C6  EF07  F000         	goto	start
   835  0018CA                     __end_of_main:
   836                           	callstack 0
   837                           
   838 ;; *************** function _get_action *****************
   839 ;; Defined at:
   840 ;;		line 217 in file "main.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;		None
   843 ;; Auto vars:     Size  Location     Type
   844 ;;  value           2   26[COMRAM] int 
   845 ;;  str_value       2   24[COMRAM] PTR unsigned char 
   846 ;;		 -> NULL(0), data_in(512), 
   847 ;; Return value:  Size  Location     Type
   848 ;;                  1    wreg      enum E3677
   849 ;; Registers used:
   850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   856 ;;      Params:         0       0       0       0       0       0       0       0       0
   857 ;;      Locals:         4       0       0       0       0       0       0       0       0
   858 ;;      Temps:          0       0       0       0       0       0       0       0       0
   859 ;;      Totals:         4       0       0       0       0       0       0       0       0
   860 ;;Total ram usage:        4 bytes
   861 ;; Hardware stack levels used:    1
   862 ;; Hardware stack levels required when called:    4
   863 ;; This function calls:
   864 ;;		_atoi
   865 ;;		_is_command
   866 ;;		_memset
   867 ;;		_strstr
   868 ;; This function is called by:
   869 ;;		_main
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           	psect	text1
   874  0018CA                     __ptext1:
   875                           	callstack 0
   876  0018CA                     _get_action:
   877                           	callstack 26
   878  0018CA                     
   879                           ;main.c: 218:     if (is_command(LED0_CMD)) {
   880  0018CA  0E11               	movlw	low STR_1
   881  0018CC  6E14               	movwf	is_command@command^0,c
   882  0018CE  0E08               	movlw	high STR_1
   883  0018D0  6E15               	movwf	(is_command@command+1)^0,c
   884  0018D2  EC5A  F00E         	call	_is_command	;wreg free
   885  0018D6  0900               	iorlw	0
   886  0018D8  B4D8               	btfsc	status,2,c
   887  0018DA  EF71  F00C         	goto	u2741
   888  0018DE  EF73  F00C         	goto	u2740
   889  0018E2                     u2741:
   890  0018E2  EFAB  F00C         	goto	l2908
   891  0018E6                     u2740:
   892  0018E6                     
   893                           ;main.c: 219:         char * str_value = (strstr(data_in, "=") + 1);
   894  0018E6  0E50               	movlw	low _data_in
   895  0018E8  6E0E               	movwf	strstr@h^0,c
   896  0018EA  0E01               	movlw	high _data_in
   897  0018EC  6E0F               	movwf	(strstr@h+1)^0,c
   898  0018EE  0E24               	movlw	low STR_5
   899  0018F0  6E10               	movwf	strstr@n^0,c
   900  0018F2  0E08               	movlw	high STR_5
   901  0018F4  6E11               	movwf	(strstr@n+1)^0,c
   902  0018F6  ECAC  F00B         	call	_strstr	;wreg free
   903  0018FA  0E01               	movlw	1
   904  0018FC  240E               	addwf	?_strstr^0,w,c
   905  0018FE  6E19               	movwf	get_action@str_value^0,c
   906  001900  0E00               	movlw	0
   907  001902  200F               	addwfc	(?_strstr+1)^0,w,c
   908  001904  6E1A               	movwf	(get_action@str_value+1)^0,c
   909  001906                     
   910                           ;main.c: 220:         int value = atoi(str_value);
   911  001906  C019  F00A         	movff	get_action@str_value,atoi@s
   912  00190A  C01A  F00B         	movff	get_action@str_value+1,atoi@s+1
   913  00190E  EC85  F007         	call	_atoi	;wreg free
   914  001912  C00A  F01B         	movff	?_atoi,get_action@value
   915  001916  C00B  F01C         	movff	?_atoi+1,get_action@value+1
   916  00191A                     
   917                           ;main.c: 221:         memset(data_in, '\0', 512);
   918  00191A  0E50               	movlw	low _data_in
   919  00191C  6E03               	movwf	memset@dest^0,c
   920  00191E  0E01               	movlw	high _data_in
   921  001920  6E04               	movwf	(memset@dest+1)^0,c
   922  001922  0E00               	movlw	0
   923  001924  6E06               	movwf	(memset@c+1)^0,c
   924  001926  0E00               	movlw	0
   925  001928  6E05               	movwf	memset@c^0,c
   926  00192A  0E02               	movlw	2
   927  00192C  6E08               	movwf	(memset@n+1)^0,c
   928  00192E  0E00               	movlw	0
   929  001930  6E07               	movwf	memset@n^0,c
   930  001932  EC0E  F009         	call	_memset	;wreg free
   931  001936                     
   932                           ;main.c: 222:         position = 0;
   933  001936  0E00               	movlw	0
   934  001938  0100               	movlb	0	; () banked
   935  00193A  6F66               	movwf	_position& (0+255),b
   936  00193C                     
   937                           ; BSR set to: 0
   938                           ;main.c: 224:         return (value == 1) ? LED_ON : LED_OFF;
   939  00193C  041B               	decf	get_action@value^0,w,c
   940  00193E  101C               	iorwf	(get_action@value+1)^0,w,c
   941  001940  A4D8               	btfss	status,2,c
   942  001942  EFA5  F00C         	goto	u2751
   943  001946  EFA8  F00C         	goto	u2750
   944  00194A                     u2751:
   945  00194A  0E01               	movlw	1
   946  00194C  EFA9  F00C         	goto	u2760
   947  001950                     u2750:
   948  001950  0E00               	movlw	0
   949  001952                     u2760:
   950  001952  EFAC  F00C         	goto	l123
   951  001956                     l2908:
   952                           
   953                           ;main.c: 229:     return NO_OP;
   954  001956  0E02               	movlw	2
   955  001958                     l123:
   956  001958  0012               	return		;funcret
   957  00195A                     __end_of_get_action:
   958                           	callstack 0
   959                           
   960 ;; *************** function _is_command *****************
   961 ;; Defined at:
   962 ;;		line 232 in file "main.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;  command         2   19[COMRAM] PTR const unsigned char 
   965 ;;		 -> STR_1(8), 
   966 ;; Auto vars:     Size  Location     Type
   967 ;;  ptr             2   21[COMRAM] PTR unsigned char 
   968 ;;		 -> NULL(0), data_in(512), 
   969 ;; Return value:  Size  Location     Type
   970 ;;                  1    wreg      _Bool 
   971 ;; Registers used:
   972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   973 ;; Tracked objects:
   974 ;;		On entry : 0/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   978 ;;      Params:         2       0       0       0       0       0       0       0       0
   979 ;;      Locals:         2       0       0       0       0       0       0       0       0
   980 ;;      Temps:          0       0       0       0       0       0       0       0       0
   981 ;;      Totals:         4       0       0       0       0       0       0       0       0
   982 ;;Total ram usage:        4 bytes
   983 ;; Hardware stack levels used:    1
   984 ;; Hardware stack levels required when called:    3
   985 ;; This function calls:
   986 ;;		_strstr
   987 ;; This function is called by:
   988 ;;		_get_action
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           	psect	text2
   993  001CB4                     __ptext2:
   994                           	callstack 0
   995  001CB4                     _is_command:
   996                           	callstack 26
   997  001CB4                     
   998                           ;main.c: 233:     char * ptr = strstr(data_in, command);
   999  001CB4  0E50               	movlw	low _data_in
  1000  001CB6  6E0E               	movwf	strstr@h^0,c
  1001  001CB8  0E01               	movlw	high _data_in
  1002  001CBA  6E0F               	movwf	(strstr@h+1)^0,c
  1003  001CBC  C014  F010         	movff	is_command@command,strstr@n
  1004  001CC0  C015  F011         	movff	is_command@command+1,strstr@n+1
  1005  001CC4  ECAC  F00B         	call	_strstr	;wreg free
  1006  001CC8  C00E  F016         	movff	?_strstr,is_command@ptr
  1007  001CCC  C00F  F017         	movff	?_strstr+1,is_command@ptr+1
  1008  001CD0                     
  1009                           ;main.c: 235:     if (ptr != ((void*)0)) {
  1010  001CD0  5016               	movf	is_command@ptr^0,w,c
  1011  001CD2  1017               	iorwf	(is_command@ptr+1)^0,w,c
  1012  001CD4  B4D8               	btfsc	status,2,c
  1013  001CD6  EF6F  F00E         	goto	u2571
  1014  001CDA  EF71  F00E         	goto	u2570
  1015  001CDE                     u2571:
  1016  001CDE  EF74  F00E         	goto	l2744
  1017  001CE2                     u2570:
  1018  001CE2                     
  1019                           ;main.c: 236:         return 1;
  1020  001CE2  0E01               	movlw	1
  1021  001CE4  EF75  F00E         	goto	l127
  1022  001CE8                     l2744:
  1023                           
  1024                           ;main.c: 239:     return 0;
  1025  001CE8  0E00               	movlw	0
  1026  001CEA                     l127:
  1027  001CEA  0012               	return		;funcret
  1028  001CEC                     __end_of_is_command:
  1029                           	callstack 0
  1030                           
  1031 ;; *************** function _atoi *****************
  1032 ;; Defined at:
  1033 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/atoi.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1036 ;;		 -> NULL(0), data_in(512), 
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;  n               2   22[COMRAM] int 
  1039 ;;  neg             2   15[COMRAM] int 
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  2    9[COMRAM] int 
  1042 ;; Registers used:
  1043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1049 ;;      Params:         2       0       0       0       0       0       0       0       0
  1050 ;;      Locals:         9       0       0       0       0       0       0       0       0
  1051 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1052 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1053 ;;Total ram usage:       15 bytes
  1054 ;; Hardware stack levels used:    1
  1055 ;; Hardware stack levels required when called:    2
  1056 ;; This function calls:
  1057 ;;		___wmul
  1058 ;;		_isdigit
  1059 ;;		_isspace
  1060 ;; This function is called by:
  1061 ;;		_get_action
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           	psect	text3
  1066  000F0A                     __ptext3:
  1067                           	callstack 0
  1068  000F0A                     _atoi:
  1069                           	callstack 27
  1070  000F0A  0E00               	movlw	0
  1071  000F0C  6E18               	movwf	(atoi@n+1)^0,c
  1072  000F0E  0E00               	movlw	0
  1073  000F10  6E17               	movwf	atoi@n^0,c
  1074  000F12  0E00               	movlw	0
  1075  000F14  6E11               	movwf	(atoi@neg+1)^0,c
  1076  000F16  0E00               	movlw	0
  1077  000F18  6E10               	movwf	atoi@neg^0,c
  1078  000F1A  EF91  F007         	goto	l2752
  1079  000F1E                     l2750:
  1080  000F1E  4A0A               	infsnz	atoi@s^0,f,c
  1081  000F20  2A0B               	incf	(atoi@s+1)^0,f,c
  1082  000F22                     l2752:
  1083  000F22  0E01               	movlw	1
  1084  000F24  6E16               	movwf	_atoi$929^0,c
  1085  000F26  C00A  FFD9         	movff	atoi@s,fsr2l
  1086  000F2A  C00B  FFDA         	movff	atoi@s+1,fsr2h
  1087  000F2E  0E20               	movlw	32
  1088  000F30  18DE               	xorwf	postinc2,w,c
  1089  000F32  B4D8               	btfsc	status,2,c
  1090  000F34  EF9E  F007         	goto	u2581
  1091  000F38  EFA0  F007         	goto	u2580
  1092  000F3C                     u2581:
  1093  000F3C  EFBC  F007         	goto	l2760
  1094  000F40                     u2580:
  1095  000F40  0EF7               	movlw	247
  1096  000F42  6E0C               	movwf	??_atoi^0,c
  1097  000F44  0EFF               	movlw	255
  1098  000F46  6E0D               	movwf	(??_atoi+1)^0,c
  1099  000F48  C00A  FFD9         	movff	atoi@s,fsr2l
  1100  000F4C  C00B  FFDA         	movff	atoi@s+1,fsr2h
  1101  000F50  50DF               	movf	indf2,w,c
  1102  000F52  6E0E               	movwf	(??_atoi+2)^0,c
  1103  000F54  6A0F               	clrf	(??_atoi+3)^0,c
  1104  000F56  500C               	movf	??_atoi^0,w,c
  1105  000F58  260E               	addwf	(??_atoi+2)^0,f,c
  1106  000F5A  500D               	movf	(??_atoi+1)^0,w,c
  1107  000F5C  220F               	addwfc	(??_atoi+3)^0,f,c
  1108  000F5E  500F               	movf	(??_atoi+3)^0,w,c
  1109  000F60  E109               	bnz	u2590
  1110  000F62  0E05               	movlw	5
  1111  000F64  5C0E               	subwf	(??_atoi+2)^0,w,c
  1112  000F66  A0D8               	btfss	status,0,c
  1113  000F68  EFB8  F007         	goto	u2591
  1114  000F6C  EFBA  F007         	goto	u2590
  1115  000F70                     u2591:
  1116  000F70  EFBC  F007         	goto	l2760
  1117  000F74                     u2590:
  1118  000F74  0E00               	movlw	0
  1119  000F76  6E16               	movwf	_atoi$929^0,c
  1120  000F78                     l2760:
  1121  000F78  C016  F012         	movff	_atoi$929,_atoi$928
  1122  000F7C  6A13               	clrf	(_atoi$928+1)^0,c
  1123  000F7E  5012               	movf	_atoi$928^0,w,c
  1124  000F80  1013               	iorwf	(_atoi$928+1)^0,w,c
  1125  000F82  A4D8               	btfss	status,2,c
  1126  000F84  EFC6  F007         	goto	u2601
  1127  000F88  EFC8  F007         	goto	u2600
  1128  000F8C                     u2601:
  1129  000F8C  EF8F  F007         	goto	l2750
  1130  000F90                     u2600:
  1131  000F90  EFD2  F007         	goto	l2770
  1132  000F94                     l2766:
  1133  000F94  0E00               	movlw	0
  1134  000F96  6E11               	movwf	(atoi@neg+1)^0,c
  1135  000F98  0E01               	movlw	1
  1136  000F9A  6E10               	movwf	atoi@neg^0,c
  1137  000F9C                     l2768:
  1138  000F9C  4A0A               	infsnz	atoi@s^0,f,c
  1139  000F9E  2A0B               	incf	(atoi@s+1)^0,f,c
  1140  000FA0  EF07  F008         	goto	l2776
  1141  000FA4                     l2770:
  1142  000FA4  C00A  FFD9         	movff	atoi@s,fsr2l
  1143  000FA8  C00B  FFDA         	movff	atoi@s+1,fsr2h
  1144  000FAC  50DF               	movf	indf2,w,c
  1145  000FAE  6E0C               	movwf	??_atoi^0,c
  1146  000FB0  6A0D               	clrf	(??_atoi+1)^0,c
  1147                           
  1148                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1149                           ; Switch size 1, requested type "simple"
  1150                           ; Number of cases is 1, Range of values is 0 to 0
  1151                           ; switch strategies available:
  1152                           ; Name         Instructions Cycles
  1153                           ; simple_byte            4     3 (average)
  1154                           ;	Chosen strategy is simple_byte
  1155  000FB2  500D               	movf	(??_atoi+1)^0,w,c
  1156  000FB4  0A00               	xorlw	0	; case 0
  1157  000FB6  B4D8               	btfsc	status,2,c
  1158  000FB8  EFE0  F007         	goto	l2992
  1159  000FBC  EF07  F008         	goto	l2776
  1160  000FC0                     l2992:
  1161                           
  1162                           ; Switch size 1, requested type "simple"
  1163                           ; Number of cases is 2, Range of values is 43 to 45
  1164                           ; switch strategies available:
  1165                           ; Name         Instructions Cycles
  1166                           ; simple_byte            7     4 (average)
  1167                           ;	Chosen strategy is simple_byte
  1168  000FC0  500C               	movf	??_atoi^0,w,c
  1169  000FC2  0A2B               	xorlw	43	; case 43
  1170  000FC4  B4D8               	btfsc	status,2,c
  1171  000FC6  EFCE  F007         	goto	l2768
  1172  000FCA  0A06               	xorlw	6	; case 45
  1173  000FCC  B4D8               	btfsc	status,2,c
  1174  000FCE  EFCA  F007         	goto	l2766
  1175  000FD2  EF07  F008         	goto	l2776
  1176  000FD6                     l2772:
  1177  000FD6  C017  F003         	movff	atoi@n,___wmul@multiplier
  1178  000FDA  C018  F004         	movff	atoi@n+1,___wmul@multiplier+1
  1179  000FDE  0E00               	movlw	0
  1180  000FE0  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  1181  000FE2  0E0A               	movlw	10
  1182  000FE4  6E05               	movwf	___wmul@multiplicand^0,c
  1183  000FE6  ECAE  F00E         	call	___wmul	;wreg free
  1184  000FEA  C00A  FFD9         	movff	atoi@s,fsr2l
  1185  000FEE  C00B  FFDA         	movff	atoi@s+1,fsr2h
  1186  000FF2  50DF               	movf	indf2,w,c
  1187  000FF4  6E0C               	movwf	??_atoi^0,c
  1188  000FF6  500C               	movf	??_atoi^0,w,c
  1189  000FF8  5E03               	subwf	?___wmul^0,f,c
  1190  000FFA  0E00               	movlw	0
  1191  000FFC  5A04               	subwfb	(?___wmul+1)^0,f,c
  1192  000FFE  0E30               	movlw	48
  1193  001000  2403               	addwf	?___wmul^0,w,c
  1194  001002  6E17               	movwf	atoi@n^0,c
  1195  001004  0E00               	movlw	0
  1196  001006  2004               	addwfc	(?___wmul+1)^0,w,c
  1197  001008  6E18               	movwf	(atoi@n+1)^0,c
  1198  00100A  EFCE  F007         	goto	l2768
  1199  00100E                     l2776:
  1200  00100E  0ED0               	movlw	208
  1201  001010  6E0C               	movwf	??_atoi^0,c
  1202  001012  0EFF               	movlw	255
  1203  001014  6E0D               	movwf	(??_atoi+1)^0,c
  1204  001016  C00A  FFD9         	movff	atoi@s,fsr2l
  1205  00101A  C00B  FFDA         	movff	atoi@s+1,fsr2h
  1206  00101E  50DF               	movf	indf2,w,c
  1207  001020  6E0E               	movwf	(??_atoi+2)^0,c
  1208  001022  6A0F               	clrf	(??_atoi+3)^0,c
  1209  001024  500C               	movf	??_atoi^0,w,c
  1210  001026  260E               	addwf	(??_atoi+2)^0,f,c
  1211  001028  500D               	movf	(??_atoi+1)^0,w,c
  1212  00102A  220F               	addwfc	(??_atoi+3)^0,f,c
  1213  00102C  500F               	movf	(??_atoi+3)^0,w,c
  1214  00102E  E10A               	bnz	u2610
  1215  001030  0E0A               	movlw	10
  1216  001032  5C0E               	subwf	(??_atoi+2)^0,w,c
  1217  001034  A0D8               	btfss	status,0,c
  1218  001036  EF1F  F008         	goto	u2611
  1219  00103A  EF22  F008         	goto	u2610
  1220  00103E                     u2611:
  1221  00103E  0E01               	movlw	1
  1222  001040  EF23  F008         	goto	u2620
  1223  001044                     u2610:
  1224  001044  0E00               	movlw	0
  1225  001046                     u2620:
  1226  001046  6E14               	movwf	_atoi$930^0,c
  1227  001048  6A15               	clrf	(_atoi$930+1)^0,c
  1228  00104A  5014               	movf	_atoi$930^0,w,c
  1229  00104C  1015               	iorwf	(_atoi$930+1)^0,w,c
  1230  00104E  A4D8               	btfss	status,2,c
  1231  001050  EF2C  F008         	goto	u2631
  1232  001054  EF2E  F008         	goto	u2630
  1233  001058                     u2631:
  1234  001058  EFEB  F007         	goto	l2772
  1235  00105C                     u2630:
  1236  00105C  5010               	movf	atoi@neg^0,w,c
  1237  00105E  1011               	iorwf	(atoi@neg+1)^0,w,c
  1238  001060  A4D8               	btfss	status,2,c
  1239  001062  EF35  F008         	goto	u2641
  1240  001066  EF37  F008         	goto	u2640
  1241  00106A                     u2641:
  1242  00106A  EF45  F008         	goto	l851
  1243  00106E                     u2640:
  1244  00106E  C017  F00C         	movff	atoi@n,??_atoi
  1245  001072  C018  F00D         	movff	atoi@n+1,??_atoi+1
  1246  001076  1E0C               	comf	??_atoi^0,f,c
  1247  001078  1E0D               	comf	(??_atoi+1)^0,f,c
  1248  00107A  4A0C               	infsnz	??_atoi^0,f,c
  1249  00107C  2A0D               	incf	(??_atoi+1)^0,f,c
  1250  00107E  C00C  F00A         	movff	??_atoi,?_atoi
  1251  001082  C00D  F00B         	movff	??_atoi+1,?_atoi+1
  1252  001086  EF49  F008         	goto	l854
  1253  00108A                     l851:
  1254  00108A  C017  F00A         	movff	atoi@n,?_atoi
  1255  00108E  C018  F00B         	movff	atoi@n+1,?_atoi+1
  1256  001092                     l854:
  1257  001092  0012               	return		;funcret
  1258  001094                     __end_of_atoi:
  1259                           	callstack 0
  1260                           
  1261 ;; *************** function _isspace *****************
  1262 ;; Defined at:
  1263 ;;		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/isspace.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;  c               2    2[COMRAM] int 
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;		None
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  2    2[COMRAM] int 
  1270 ;; Registers used:
  1271 ;;		wreg, status,2, status,0
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1277 ;;      Params:         2       0       0       0       0       0       0       0       0
  1278 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1279 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1280 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1281 ;;Total ram usage:        7 bytes
  1282 ;; Hardware stack levels used:    1
  1283 ;; Hardware stack levels required when called:    1
  1284 ;; This function calls:
  1285 ;;		Nothing
  1286 ;; This function is called by:
  1287 ;;		_atoi
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text4
  1292  001A1A                     __ptext4:
  1293                           	callstack 0
  1294  001A1A                     _isspace:
  1295                           	callstack 27
  1296  001A1A  0E01               	movlw	1
  1297  001A1C  6E09               	movwf	_isspace$946^0,c
  1298  001A1E  0E20               	movlw	32
  1299  001A20  1803               	xorwf	isspace@c^0,w,c
  1300  001A22  1004               	iorwf	(isspace@c+1)^0,w,c
  1301  001A24  B4D8               	btfsc	status,2,c
  1302  001A26  EF17  F00D         	goto	u2431
  1303  001A2A  EF19  F00D         	goto	u2430
  1304  001A2E                     u2431:
  1305  001A2E  EF32  F00D         	goto	l2650
  1306  001A32                     u2430:
  1307  001A32  0EF7               	movlw	247
  1308  001A34  6E05               	movwf	??_isspace^0,c
  1309  001A36  0EFF               	movlw	255
  1310  001A38  6E06               	movwf	(??_isspace+1)^0,c
  1311  001A3A  C003  F007         	movff	isspace@c,??_isspace+2
  1312  001A3E  C004  F008         	movff	isspace@c+1,??_isspace+3
  1313  001A42  5005               	movf	??_isspace^0,w,c
  1314  001A44  2607               	addwf	(??_isspace+2)^0,f,c
  1315  001A46  5006               	movf	(??_isspace+1)^0,w,c
  1316  001A48  2208               	addwfc	(??_isspace+3)^0,f,c
  1317  001A4A  5008               	movf	(??_isspace+3)^0,w,c
  1318  001A4C  E109               	bnz	u2440
  1319  001A4E  0E05               	movlw	5
  1320  001A50  5C07               	subwf	(??_isspace+2)^0,w,c
  1321  001A52  A0D8               	btfss	status,0,c
  1322  001A54  EF2E  F00D         	goto	u2441
  1323  001A58  EF30  F00D         	goto	u2440
  1324  001A5C                     u2441:
  1325  001A5C  EF32  F00D         	goto	l2650
  1326  001A60                     u2440:
  1327  001A60  0E00               	movlw	0
  1328  001A62  6E09               	movwf	_isspace$946^0,c
  1329  001A64                     l2650:
  1330  001A64  C009  F003         	movff	_isspace$946,?_isspace
  1331  001A68  6A04               	clrf	(?_isspace+1)^0,c
  1332  001A6A  0012               	return		;funcret
  1333  001A6C                     __end_of_isspace:
  1334                           	callstack 0
  1335                           
  1336 ;; *************** function _isdigit *****************
  1337 ;; Defined at:
  1338 ;;		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/isdigit.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;  c               2    2[COMRAM] int 
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;		None
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  2    2[COMRAM] int 
  1345 ;; Registers used:
  1346 ;;		wreg, status,2, status,0
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1352 ;;      Params:         2       0       0       0       0       0       0       0       0
  1353 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1354 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1355 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1356 ;;Total ram usage:        6 bytes
  1357 ;; Hardware stack levels used:    1
  1358 ;; Hardware stack levels required when called:    1
  1359 ;; This function calls:
  1360 ;;		Nothing
  1361 ;; This function is called by:
  1362 ;;		_atoi
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           	psect	text5
  1367  001CEC                     __ptext5:
  1368                           	callstack 0
  1369  001CEC                     _isdigit:
  1370                           	callstack 27
  1371  001CEC  0ED0               	movlw	208
  1372  001CEE  6E05               	movwf	??_isdigit^0,c
  1373  001CF0  0EFF               	movlw	255
  1374  001CF2  6E06               	movwf	(??_isdigit+1)^0,c
  1375  001CF4  C003  F007         	movff	isdigit@c,??_isdigit+2
  1376  001CF8  C004  F008         	movff	isdigit@c+1,??_isdigit+3
  1377  001CFC  5005               	movf	??_isdigit^0,w,c
  1378  001CFE  2607               	addwf	(??_isdigit+2)^0,f,c
  1379  001D00  5006               	movf	(??_isdigit+1)^0,w,c
  1380  001D02  2208               	addwfc	(??_isdigit+3)^0,f,c
  1381  001D04  5008               	movf	(??_isdigit+3)^0,w,c
  1382  001D06  E10A               	bnz	u2450
  1383  001D08  0E0A               	movlw	10
  1384  001D0A  5C07               	subwf	(??_isdigit+2)^0,w,c
  1385  001D0C  A0D8               	btfss	status,0,c
  1386  001D0E  EF8B  F00E         	goto	u2451
  1387  001D12  EF8E  F00E         	goto	u2450
  1388  001D16                     u2451:
  1389  001D16  0E01               	movlw	1
  1390  001D18  EF8F  F00E         	goto	u2460
  1391  001D1C                     u2450:
  1392  001D1C  0E00               	movlw	0
  1393  001D1E                     u2460:
  1394  001D1E  6E03               	movwf	?_isdigit^0,c
  1395  001D20  6A04               	clrf	(?_isdigit+1)^0,c
  1396  001D22  0012               	return		;funcret
  1397  001D24                     __end_of_isdigit:
  1398                           	callstack 0
  1399                           
  1400 ;; *************** function ___wmul *****************
  1401 ;; Defined at:
  1402 ;;		line 15 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/Umul16.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;  multiplier      2    2[COMRAM] unsigned int 
  1405 ;;  multiplicand    2    4[COMRAM] unsigned int 
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;  product         2    6[COMRAM] unsigned int 
  1408 ;; Return value:  Size  Location     Type
  1409 ;;                  2    2[COMRAM] unsigned int 
  1410 ;; Registers used:
  1411 ;;		wreg, status,2, status,0, prodl, prodh
  1412 ;; Tracked objects:
  1413 ;;		On entry : 0/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1417 ;;      Params:         4       0       0       0       0       0       0       0       0
  1418 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1419 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1420 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1421 ;;Total ram usage:        6 bytes
  1422 ;; Hardware stack levels used:    1
  1423 ;; Hardware stack levels required when called:    1
  1424 ;; This function calls:
  1425 ;;		Nothing
  1426 ;; This function is called by:
  1427 ;;		_atoi
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           	psect	text6
  1432  001D5C                     __ptext6:
  1433                           	callstack 0
  1434  001D5C                     ___wmul:
  1435                           	callstack 27
  1436  001D5C  5003               	movf	___wmul@multiplier^0,w,c
  1437  001D5E  0205               	mulwf	___wmul@multiplicand^0,c
  1438  001D60  CFF3 F007          	movff	prodl,___wmul@product
  1439  001D64  CFF4 F008          	movff	prodh,___wmul@product+1
  1440  001D68  5003               	movf	___wmul@multiplier^0,w,c
  1441  001D6A  0206               	mulwf	(___wmul@multiplicand+1)^0,c
  1442  001D6C  50F3               	movf	243,w,c
  1443  001D6E  2608               	addwf	(___wmul@product+1)^0,f,c
  1444  001D70  5004               	movf	(___wmul@multiplier+1)^0,w,c
  1445  001D72  0205               	mulwf	___wmul@multiplicand^0,c
  1446  001D74  50F3               	movf	243,w,c
  1447  001D76  2608               	addwf	(___wmul@product+1)^0,f,c
  1448  001D78  C007  F003         	movff	___wmul@product,?___wmul
  1449  001D7C  C008  F004         	movff	___wmul@product+1,?___wmul+1
  1450  001D80  0012               	return		;funcret
  1451  001D82                     __end_of___wmul:
  1452                           	callstack 0
  1453                           
  1454 ;; *************** function _dht_read *****************
  1455 ;; Defined at:
  1456 ;;		line 145 in file "main.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;		None
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;  index           1   25[BANK0 ] unsigned char 
  1461 ;;  bit_index       2   28[BANK0 ] int 
  1462 ;;  mask            2   26[BANK0 ] int 
  1463 ;;  bit_position    2   23[BANK0 ] int 
  1464 ;;  temperature     2   21[BANK0 ] int 
  1465 ;;  relative_hum    2   19[BANK0 ] int 
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  1    wreg      void 
  1468 ;; Registers used:
  1469 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1475 ;;      Params:         0       0       0       0       0       0       0       0       0
  1476 ;;      Locals:         0      11       0       0       0       0       0       0       0
  1477 ;;      Temps:          0       3       0       0       0       0       0       0       0
  1478 ;;      Totals:         0      14       0       0       0       0       0       0       0
  1479 ;;Total ram usage:       14 bytes
  1480 ;; Hardware stack levels used:    1
  1481 ;; Hardware stack levels required when called:    9
  1482 ;; This function calls:
  1483 ;;		_USART_SendString
  1484 ;;		_dht_read_bit
  1485 ;;		_memset
  1486 ;;		_sprintf
  1487 ;; This function is called by:
  1488 ;;		_main
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492                           	psect	text7
  1493  000B06                     __ptext7:
  1494                           	callstack 0
  1495  000B06                     _dht_read:
  1496                           	callstack 21
  1497  000B06                     
  1498                           ;main.c: 146:     memset(dht_raw_data, 0, 40);
  1499  000B06  0E00               	movlw	low _dht_raw_data
  1500  000B08  6E03               	movwf	memset@dest^0,c
  1501  000B0A  0E01               	movlw	high _dht_raw_data
  1502  000B0C  6E04               	movwf	(memset@dest+1)^0,c
  1503  000B0E  0E00               	movlw	0
  1504  000B10  6E06               	movwf	(memset@c+1)^0,c
  1505  000B12  0E00               	movlw	0
  1506  000B14  6E05               	movwf	memset@c^0,c
  1507  000B16  0E00               	movlw	0
  1508  000B18  6E08               	movwf	(memset@n+1)^0,c
  1509  000B1A  0E28               	movlw	40
  1510  000B1C  6E07               	movwf	memset@n^0,c
  1511  000B1E  EC0E  F009         	call	_memset	;wreg free
  1512  000B22                     
  1513                           ;main.c: 147:     TRISD = 0;
  1514  000B22  0E00               	movlw	0
  1515  000B24  6E95               	movwf	149,c	;volatile
  1516  000B26                     
  1517                           ;main.c: 148:     LATDbits.LATD2 = 0;
  1518  000B26  948C               	bcf	140,2,c	;volatile
  1519  000B28                     
  1520                           ;main.c: 149:     _delay((unsigned long)((18)*(16000000/4000.0)));
  1521  000B28  0E5E               	movlw	94
  1522  000B2A  0100               	movlb	0	; () banked
  1523  000B2C  6FC9               	movwf	??_dht_read& (0+255),b
  1524  000B2E  0E80               	movlw	128
  1525  000B30                     u2797:
  1526  000B30  2EE8               	decfsz	wreg,f,c
  1527  000B32  D7FE               	bra	u2797
  1528  000B34  2FC9               	decfsz	??_dht_read& (0+255),f,b
  1529  000B36  D7FC               	bra	u2797
  1530  000B38  F000               	nop	
  1531  000B3A                     
  1532                           ;main.c: 150:     LATDbits.LATD2 = 1;
  1533  000B3A  848C               	bsf	140,2,c	;volatile
  1534  000B3C                     
  1535                           ;main.c: 151:     _delay((unsigned long)((20)*(16000000/4000000.0)));
  1536  000B3C  0E1A               	movlw	26
  1537  000B3E                     u2807:
  1538  000B3E  2EE8               	decfsz	wreg,f,c
  1539  000B40  D7FE               	bra	u2807
  1540  000B42  D000               	nop2	
  1541  000B44                     
  1542                           ;main.c: 152:     TRISD = 1;
  1543  000B44  0E01               	movlw	1
  1544  000B46  6E95               	movwf	149,c	;volatile
  1545  000B48                     l89:
  1546  000B48  B483               	btfsc	131,2,c	;volatile
  1547  000B4A  EFA9  F005         	goto	u2651
  1548  000B4E  EFAB  F005         	goto	u2650
  1549  000B52                     u2651:
  1550  000B52  EFA4  F005         	goto	l89
  1551  000B56                     u2650:
  1552  000B56                     l92:
  1553  000B56  A483               	btfss	131,2,c	;volatile
  1554  000B58  EFB0  F005         	goto	u2661
  1555  000B5C  EFB2  F005         	goto	u2660
  1556  000B60                     u2661:
  1557  000B60  EFAB  F005         	goto	l92
  1558  000B64                     u2660:
  1559  000B64                     l95:
  1560  000B64  B483               	btfsc	131,2,c	;volatile
  1561  000B66  EFB7  F005         	goto	u2671
  1562  000B6A  EFB9  F005         	goto	u2670
  1563  000B6E                     u2671:
  1564  000B6E  EFB2  F005         	goto	l95
  1565  000B72                     u2670:
  1566  000B72                     
  1567                           ;main.c: 158:     for (uint8_t index = 0; index < 40; index++) {
  1568  000B72  0E00               	movlw	0
  1569  000B74  0100               	movlb	0	; () banked
  1570  000B76  6FD2               	movwf	dht_read@index& (0+255),b
  1571  000B78                     l2830:
  1572                           
  1573                           ; BSR set to: 0
  1574                           ;main.c: 159:         dht_raw_data[index] = dht_read_bit();
  1575  000B78  ECD2  F00D         	call	_dht_read_bit	;wreg free
  1576  000B7C  0100               	movlb	0	; () banked
  1577  000B7E  51D2               	movf	dht_read@index& (0+255),w,b
  1578  000B80  0D02               	mullw	2
  1579  000B82  0E00               	movlw	low _dht_raw_data
  1580  000B84  24F3               	addwf	243,w,c
  1581  000B86  6ED9               	movwf	fsr2l,c
  1582  000B88  0E01               	movlw	high _dht_raw_data
  1583  000B8A  20F4               	addwfc	prodh,w,c
  1584  000B8C  6EDA               	movwf	fsr2h,c
  1585  000B8E  C003  FFDE         	movff	?_dht_read_bit,postinc2
  1586  000B92  C004  FFDD         	movff	?_dht_read_bit+1,postdec2
  1587  000B96                     
  1588                           ; BSR set to: 0
  1589                           ;main.c: 160:     }
  1590  000B96  2BD2               	incf	dht_read@index& (0+255),f,b
  1591  000B98                     
  1592                           ; BSR set to: 0
  1593  000B98  0E27               	movlw	39
  1594  000B9A  65D2               	cpfsgt	dht_read@index& (0+255),b
  1595  000B9C  EFD2  F005         	goto	u2681
  1596  000BA0  EFD4  F005         	goto	u2680
  1597  000BA4                     u2681:
  1598  000BA4  EFBC  F005         	goto	l2830
  1599  000BA8                     u2680:
  1600  000BA8                     
  1601                           ; BSR set to: 0
  1602                           ;main.c: 162:     int relative_humidity = 0;
  1603  000BA8  0E00               	movlw	0
  1604  000BAA  6FCD               	movwf	(dht_read@relative_humidity+1)& (0+255),b
  1605  000BAC  0E00               	movlw	0
  1606  000BAE  6FCC               	movwf	dht_read@relative_humidity& (0+255),b
  1607                           
  1608                           ;main.c: 163:     int temperature = 0;
  1609  000BB0  0E00               	movlw	0
  1610  000BB2  6FCF               	movwf	(dht_read@temperature+1)& (0+255),b
  1611  000BB4  0E00               	movlw	0
  1612  000BB6  6FCE               	movwf	dht_read@temperature& (0+255),b
  1613                           
  1614                           ;main.c: 165:     int bit_index = 0;
  1615  000BB8  0E00               	movlw	0
  1616  000BBA  6FD6               	movwf	(dht_read@bit_index+1)& (0+255),b
  1617  000BBC  0E00               	movlw	0
  1618  000BBE  6FD5               	movwf	dht_read@bit_index& (0+255),b
  1619                           
  1620                           ;main.c: 166:     int bit_position = 7;
  1621  000BC0  0E00               	movlw	0
  1622  000BC2  6FD1               	movwf	(dht_read@bit_position+1)& (0+255),b
  1623  000BC4  0E07               	movlw	7
  1624  000BC6  6FD0               	movwf	dht_read@bit_position& (0+255),b
  1625                           
  1626                           ;main.c: 168:     for (bit_index = 0; bit_index < 8; bit_index++) {
  1627  000BC8  0E00               	movlw	0
  1628  000BCA  6FD6               	movwf	(dht_read@bit_index+1)& (0+255),b
  1629  000BCC  0E00               	movlw	0
  1630  000BCE  6FD5               	movwf	dht_read@bit_index& (0+255),b
  1631  000BD0                     l2842:
  1632                           
  1633                           ; BSR set to: 0
  1634                           ;main.c: 169:         mask = dht_raw_data[bit_index];
  1635  000BD0  90D8               	bcf	status,0,c
  1636  000BD2  35D5               	rlcf	dht_read@bit_index& (0+255),w,b
  1637  000BD4  6ED9               	movwf	fsr2l,c
  1638  000BD6  35D6               	rlcf	(dht_read@bit_index+1)& (0+255),w,b
  1639  000BD8  6EDA               	movwf	fsr2h,c
  1640  000BDA  0E00               	movlw	low _dht_raw_data
  1641  000BDC  26D9               	addwf	fsr2l,f,c
  1642  000BDE  0E01               	movlw	high _dht_raw_data
  1643  000BE0  22DA               	addwfc	fsr2h,f,c
  1644  000BE2  CFDE F0D3          	movff	postinc2,dht_read@mask
  1645  000BE6  CFDD F0D4          	movff	postdec2,dht_read@mask+1
  1646  000BEA                     
  1647                           ; BSR set to: 0
  1648                           ;main.c: 171:         mask = (mask << bit_position);
  1649  000BEA  C0D0  F0C9         	movff	dht_read@bit_position,??_dht_read
  1650  000BEE  C0D3  F0CA         	movff	dht_read@mask,??_dht_read+1
  1651  000BF2  C0D4  F0CB         	movff	dht_read@mask+1,??_dht_read+2
  1652  000BF6  2BC9               	incf	??_dht_read& (0+255),f,b
  1653  000BF8  EF01  F006         	goto	u2694
  1654  000BFC                     u2695:
  1655  000BFC  90D8               	bcf	status,0,c
  1656  000BFE  37CA               	rlcf	(??_dht_read+1)& (0+255),f,b
  1657  000C00  37CB               	rlcf	(??_dht_read+2)& (0+255),f,b
  1658  000C02                     u2694:
  1659  000C02  2FC9               	decfsz	??_dht_read& (0+255),f,b
  1660  000C04  EFFE  F005         	goto	u2695
  1661  000C08  C0CA  F0D3         	movff	??_dht_read+1,dht_read@mask
  1662  000C0C  C0CB  F0D4         	movff	??_dht_read+2,dht_read@mask+1
  1663  000C10                     
  1664                           ;main.c: 172:         relative_humidity = (relative_humidity | mask);
  1665  000C10  0100               	movlb	0	; () banked
  1666  000C12  51D3               	movf	dht_read@mask& (0+255),w,b
  1667  000C14  11CC               	iorwf	dht_read@relative_humidity& (0+255),w,b
  1668  000C16  6FCC               	movwf	dht_read@relative_humidity& (0+255),b
  1669  000C18  51D4               	movf	(dht_read@mask+1)& (0+255),w,b
  1670  000C1A  11CD               	iorwf	(dht_read@relative_humidity+1)& (0+255),w,b
  1671  000C1C  6FCD               	movwf	(dht_read@relative_humidity+1)& (0+255),b
  1672  000C1E                     
  1673                           ; BSR set to: 0
  1674                           ;main.c: 173:         bit_position--;
  1675  000C1E  07D0               	decf	dht_read@bit_position& (0+255),f,b
  1676  000C20  A0D8               	btfss	status,0,c
  1677  000C22  07D1               	decf	(dht_read@bit_position+1)& (0+255),f,b
  1678  000C24                     
  1679                           ; BSR set to: 0
  1680                           ;main.c: 174:     }
  1681  000C24  4BD5               	infsnz	dht_read@bit_index& (0+255),f,b
  1682  000C26  2BD6               	incf	(dht_read@bit_index+1)& (0+255),f,b
  1683  000C28                     
  1684                           ; BSR set to: 0
  1685  000C28  BFD6               	btfsc	(dht_read@bit_index+1)& (0+255),7,b
  1686  000C2A  EF20  F006         	goto	u2701
  1687  000C2E  51D6               	movf	(dht_read@bit_index+1)& (0+255),w,b
  1688  000C30  E109               	bnz	u2700
  1689  000C32  0E08               	movlw	8
  1690  000C34  5DD5               	subwf	dht_read@bit_index& (0+255),w,b
  1691  000C36  A0D8               	btfss	status,0,c
  1692  000C38  EF20  F006         	goto	u2701
  1693  000C3C  EF22  F006         	goto	u2700
  1694  000C40                     u2701:
  1695  000C40  EFE8  F005         	goto	l2842
  1696  000C44                     u2700:
  1697  000C44                     
  1698                           ; BSR set to: 0
  1699                           ;main.c: 176:     bit_position = 7;
  1700  000C44  0E00               	movlw	0
  1701  000C46  6FD1               	movwf	(dht_read@bit_position+1)& (0+255),b
  1702  000C48  0E07               	movlw	7
  1703  000C4A  6FD0               	movwf	dht_read@bit_position& (0+255),b
  1704                           
  1705                           ;main.c: 178:     for (bit_index = 16; bit_index < 24; bit_index++) {
  1706  000C4C  0E00               	movlw	0
  1707  000C4E  6FD6               	movwf	(dht_read@bit_index+1)& (0+255),b
  1708  000C50  0E10               	movlw	16
  1709  000C52  6FD5               	movwf	dht_read@bit_index& (0+255),b
  1710  000C54                     l2860:
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;main.c: 179:         mask = dht_raw_data[bit_index];
  1714  000C54  90D8               	bcf	status,0,c
  1715  000C56  35D5               	rlcf	dht_read@bit_index& (0+255),w,b
  1716  000C58  6ED9               	movwf	fsr2l,c
  1717  000C5A  35D6               	rlcf	(dht_read@bit_index+1)& (0+255),w,b
  1718  000C5C  6EDA               	movwf	fsr2h,c
  1719  000C5E  0E00               	movlw	low _dht_raw_data
  1720  000C60  26D9               	addwf	fsr2l,f,c
  1721  000C62  0E01               	movlw	high _dht_raw_data
  1722  000C64  22DA               	addwfc	fsr2h,f,c
  1723  000C66  CFDE F0D3          	movff	postinc2,dht_read@mask
  1724  000C6A  CFDD F0D4          	movff	postdec2,dht_read@mask+1
  1725  000C6E                     
  1726                           ; BSR set to: 0
  1727                           ;main.c: 181:         mask = (mask << bit_position);
  1728  000C6E  C0D0  F0C9         	movff	dht_read@bit_position,??_dht_read
  1729  000C72  C0D3  F0CA         	movff	dht_read@mask,??_dht_read+1
  1730  000C76  C0D4  F0CB         	movff	dht_read@mask+1,??_dht_read+2
  1731  000C7A  2BC9               	incf	??_dht_read& (0+255),f,b
  1732  000C7C  EF43  F006         	goto	u2714
  1733  000C80                     u2715:
  1734  000C80  90D8               	bcf	status,0,c
  1735  000C82  37CA               	rlcf	(??_dht_read+1)& (0+255),f,b
  1736  000C84  37CB               	rlcf	(??_dht_read+2)& (0+255),f,b
  1737  000C86                     u2714:
  1738  000C86  2FC9               	decfsz	??_dht_read& (0+255),f,b
  1739  000C88  EF40  F006         	goto	u2715
  1740  000C8C  C0CA  F0D3         	movff	??_dht_read+1,dht_read@mask
  1741  000C90  C0CB  F0D4         	movff	??_dht_read+2,dht_read@mask+1
  1742  000C94                     
  1743                           ;main.c: 182:         temperature = (temperature | mask);
  1744  000C94  0100               	movlb	0	; () banked
  1745  000C96  51D3               	movf	dht_read@mask& (0+255),w,b
  1746  000C98  11CE               	iorwf	dht_read@temperature& (0+255),w,b
  1747  000C9A  6FCE               	movwf	dht_read@temperature& (0+255),b
  1748  000C9C  51D4               	movf	(dht_read@mask+1)& (0+255),w,b
  1749  000C9E  11CF               	iorwf	(dht_read@temperature+1)& (0+255),w,b
  1750  000CA0  6FCF               	movwf	(dht_read@temperature+1)& (0+255),b
  1751  000CA2                     
  1752                           ; BSR set to: 0
  1753                           ;main.c: 183:         bit_position--;
  1754  000CA2  07D0               	decf	dht_read@bit_position& (0+255),f,b
  1755  000CA4  A0D8               	btfss	status,0,c
  1756  000CA6  07D1               	decf	(dht_read@bit_position+1)& (0+255),f,b
  1757  000CA8                     
  1758                           ; BSR set to: 0
  1759                           ;main.c: 184:     }
  1760  000CA8  4BD5               	infsnz	dht_read@bit_index& (0+255),f,b
  1761  000CAA  2BD6               	incf	(dht_read@bit_index+1)& (0+255),f,b
  1762  000CAC                     
  1763                           ; BSR set to: 0
  1764  000CAC  BFD6               	btfsc	(dht_read@bit_index+1)& (0+255),7,b
  1765  000CAE  EF62  F006         	goto	u2721
  1766  000CB2  51D6               	movf	(dht_read@bit_index+1)& (0+255),w,b
  1767  000CB4  E109               	bnz	u2720
  1768  000CB6  0E18               	movlw	24
  1769  000CB8  5DD5               	subwf	dht_read@bit_index& (0+255),w,b
  1770  000CBA  A0D8               	btfss	status,0,c
  1771  000CBC  EF62  F006         	goto	u2721
  1772  000CC0  EF64  F006         	goto	u2720
  1773  000CC4                     u2721:
  1774  000CC4  EF2A  F006         	goto	l2860
  1775  000CC8                     u2720:
  1776  000CC8                     
  1777                           ; BSR set to: 0
  1778                           ;main.c: 186:     memset(data_out, 0, 50);
  1779  000CC8  0E67               	movlw	low _data_out
  1780  000CCA  6E03               	movwf	memset@dest^0,c
  1781  000CCC  0E00               	movlw	high _data_out
  1782  000CCE  6E04               	movwf	(memset@dest+1)^0,c
  1783  000CD0  0E00               	movlw	0
  1784  000CD2  6E06               	movwf	(memset@c+1)^0,c
  1785  000CD4  0E00               	movlw	0
  1786  000CD6  6E05               	movwf	memset@c^0,c
  1787  000CD8  0E00               	movlw	0
  1788  000CDA  6E08               	movwf	(memset@n+1)^0,c
  1789  000CDC  0E32               	movlw	50
  1790  000CDE  6E07               	movwf	memset@n^0,c
  1791  000CE0  EC0E  F009         	call	_memset	;wreg free
  1792  000CE4                     
  1793                           ;main.c: 187:     sprintf(data_out, "Temperature: %d", temperature);
  1794  000CE4  0E67               	movlw	low _data_out
  1795  000CE6  0100               	movlb	0	; () banked
  1796  000CE8  6FB9               	movwf	sprintf@s& (0+255),b
  1797  000CEA  0E00               	movlw	high _data_out
  1798  000CEC  6FBA               	movwf	(sprintf@s+1)& (0+255),b
  1799  000CEE  0E01               	movlw	low STR_3
  1800  000CF0  6FBB               	movwf	sprintf@fmt& (0+255),b
  1801  000CF2  0E08               	movlw	high STR_3
  1802  000CF4  6FBC               	movwf	(sprintf@fmt+1)& (0+255),b
  1803  000CF6  C0CE  F0BD         	movff	dht_read@temperature,?_sprintf+4
  1804  000CFA  C0CF  F0BE         	movff	dht_read@temperature+1,?_sprintf+5
  1805  000CFE  EC36  F00D         	call	_sprintf	;wreg free
  1806  000D02                     
  1807                           ;main.c: 188:     USART_SendString(data_out);
  1808  000D02  0E67               	movlw	low _data_out
  1809  000D04  6E07               	movwf	USART_SendString@data^0,c
  1810  000D06  0E00               	movlw	high _data_out
  1811  000D08  6E08               	movwf	(USART_SendString@data+1)^0,c
  1812  000D0A  ECF5  F00D         	call	_USART_SendString	;wreg free
  1813                           
  1814                           ;main.c: 190:     memset(data_out, 0, 50);
  1815  000D0E  0E67               	movlw	low _data_out
  1816  000D10  6E03               	movwf	memset@dest^0,c
  1817  000D12  0E00               	movlw	high _data_out
  1818  000D14  6E04               	movwf	(memset@dest+1)^0,c
  1819  000D16  0E00               	movlw	0
  1820  000D18  6E06               	movwf	(memset@c+1)^0,c
  1821  000D1A  0E00               	movlw	0
  1822  000D1C  6E05               	movwf	memset@c^0,c
  1823  000D1E  0E00               	movlw	0
  1824  000D20  6E08               	movwf	(memset@n+1)^0,c
  1825  000D22  0E32               	movlw	50
  1826  000D24  6E07               	movwf	memset@n^0,c
  1827  000D26  EC0E  F009         	call	_memset	;wreg free
  1828  000D2A                     
  1829                           ;main.c: 191:     sprintf(data_out, "RH: %d", relative_humidity);
  1830  000D2A  0E67               	movlw	low _data_out
  1831  000D2C  0100               	movlb	0	; () banked
  1832  000D2E  6FB9               	movwf	sprintf@s& (0+255),b
  1833  000D30  0E00               	movlw	high _data_out
  1834  000D32  6FBA               	movwf	(sprintf@s+1)& (0+255),b
  1835  000D34  0E19               	movlw	low STR_4
  1836  000D36  6FBB               	movwf	sprintf@fmt& (0+255),b
  1837  000D38  0E08               	movlw	high STR_4
  1838  000D3A  6FBC               	movwf	(sprintf@fmt+1)& (0+255),b
  1839  000D3C  C0CC  F0BD         	movff	dht_read@relative_humidity,?_sprintf+4
  1840  000D40  C0CD  F0BE         	movff	dht_read@relative_humidity+1,?_sprintf+5
  1841  000D44  EC36  F00D         	call	_sprintf	;wreg free
  1842  000D48                     
  1843                           ;main.c: 192:     USART_SendString(data_out);
  1844  000D48  0E67               	movlw	low _data_out
  1845  000D4A  6E07               	movwf	USART_SendString@data^0,c
  1846  000D4C  0E00               	movlw	high _data_out
  1847  000D4E  6E08               	movwf	(USART_SendString@data+1)^0,c
  1848  000D50  ECF5  F00D         	call	_USART_SendString	;wreg free
  1849  000D54  0012               	return		;funcret
  1850  000D56                     __end_of_dht_read:
  1851                           	callstack 0
  1852                           
  1853 ;; *************** function _sprintf *****************
  1854 ;; Defined at:
  1855 ;;		line 9 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/nf_sprintf.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1858 ;;		 -> data_out(50), 
  1859 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1860 ;;		 -> STR_4(7), STR_3(16), 
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;  f               6   10[BANK0 ] struct _IO_FILE
  1863 ;;  ap              2    8[BANK0 ] PTR void [1]
  1864 ;;		 -> ?_sprintf(2), 
  1865 ;;  ret             2    0        int 
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  2    0[BANK0 ] int 
  1868 ;; Registers used:
  1869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1875 ;;      Params:         0       6       0       0       0       0       0       0       0
  1876 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1877 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1878 ;;      Totals:         0      16       0       0       0       0       0       0       0
  1879 ;;Total ram usage:       16 bytes
  1880 ;; Hardware stack levels used:    1
  1881 ;; Hardware stack levels required when called:    8
  1882 ;; This function calls:
  1883 ;;		_vfprintf
  1884 ;; This function is called by:
  1885 ;;		_dht_read
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           	psect	text8
  1890  001A6C                     __ptext8:
  1891                           	callstack 0
  1892  001A6C                     _sprintf:
  1893                           	callstack 21
  1894  001A6C  0EBD               	movlw	low (?_sprintf+4)
  1895  001A6E  0100               	movlb	0	; () banked
  1896  001A70  6FC1               	movwf	sprintf@ap& (0+255),b
  1897  001A72  0E00               	movlw	high (?_sprintf+4)
  1898  001A74  6FC2               	movwf	(sprintf@ap+1)& (0+255),b
  1899  001A76  C0B9  F0C3         	movff	sprintf@s,sprintf@f
  1900  001A7A  C0BA  F0C4         	movff	sprintf@s+1,sprintf@f+1
  1901  001A7E                     
  1902                           ; BSR set to: 0
  1903  001A7E  0E00               	movlw	0
  1904  001A80  6FC6               	movwf	(sprintf@f+3)& (0+255),b
  1905  001A82  0E00               	movlw	0
  1906  001A84  6FC5               	movwf	(sprintf@f+2)& (0+255),b
  1907  001A86                     
  1908                           ; BSR set to: 0
  1909  001A86  0E00               	movlw	0
  1910  001A88  6FC8               	movwf	(sprintf@f+5)& (0+255),b
  1911  001A8A  0E00               	movlw	0
  1912  001A8C  6FC7               	movwf	(sprintf@f+4)& (0+255),b
  1913  001A8E                     
  1914                           ; BSR set to: 0
  1915  001A8E  0EC3               	movlw	low sprintf@f
  1916  001A90  6E52               	movwf	vfprintf@fp^0,c
  1917  001A92  0E00               	movlw	high sprintf@f
  1918  001A94  6E53               	movwf	(vfprintf@fp+1)^0,c
  1919  001A96  C0BB  F054         	movff	sprintf@fmt,vfprintf@fmt
  1920  001A9A  C0BC  F055         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1921  001A9E  0EC1               	movlw	low sprintf@ap
  1922  001AA0  6E56               	movwf	vfprintf@ap^0,c
  1923  001AA2  0E00               	movlw	high sprintf@ap
  1924  001AA4  6E57               	movwf	(vfprintf@ap+1)^0,c
  1925  001AA6  ECAD  F00C         	call	_vfprintf	;wreg free
  1926  001AAA  0100               	movlb	0	; () banked
  1927  001AAC  51C5               	movf	(sprintf@f+2)& (0+255),w,b
  1928  001AAE  25B9               	addwf	sprintf@s& (0+255),w,b
  1929  001AB0  6ED9               	movwf	fsr2l,c
  1930  001AB2  51C6               	movf	(sprintf@f+3)& (0+255),w,b
  1931  001AB4  21BA               	addwfc	(sprintf@s+1)& (0+255),w,b
  1932  001AB6  6EDA               	movwf	fsr2h,c
  1933  001AB8  0E00               	movlw	0
  1934  001ABA  6EDF               	movwf	indf2,c
  1935  001ABC                     
  1936                           ; BSR set to: 0
  1937  001ABC  0012               	return		;funcret
  1938  001ABE                     __end_of_sprintf:
  1939                           	callstack 0
  1940                           
  1941 ;; *************** function _vfprintf *****************
  1942 ;; Defined at:
  1943 ;;		line 1390 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
  1946 ;;		 -> sprintf@f(6), 
  1947 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
  1948 ;;		 -> STR_4(7), STR_3(16), 
  1949 ;;  ap              2   85[COMRAM] PTR PTR void 
  1950 ;;		 -> sprintf@ap(2), 
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
  1953 ;;		 -> STR_4(7), STR_3(16), 
  1954 ;; Return value:  Size  Location     Type
  1955 ;;                  2   81[COMRAM] int 
  1956 ;; Registers used:
  1957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1958 ;; Tracked objects:
  1959 ;;		On entry : 0/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1963 ;;      Params:         6       0       0       0       0       0       0       0       0
  1964 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1965 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1966 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1967 ;;Total ram usage:        8 bytes
  1968 ;; Hardware stack levels used:    1
  1969 ;; Hardware stack levels required when called:    7
  1970 ;; This function calls:
  1971 ;;		_vfpfcnvrt
  1972 ;; This function is called by:
  1973 ;;		_sprintf
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977                           	psect	text9
  1978  00195A                     __ptext9:
  1979                           	callstack 0
  1980  00195A                     _vfprintf:
  1981                           	callstack 21
  1982  00195A                     
  1983                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1
      +                          391: {;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1393:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1395:     cfmt = (char *)fmt;
  1984  00195A  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
  1985  00195E  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1986  001962                     
  1987                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  1988  001962  0E00               	movlw	0
  1989  001964  0100               	movlb	0	; () banked
  1990  001966  6F61               	movwf	(_nout+1)& (0+255),b
  1991  001968  0E00               	movlw	0
  1992  00196A  6F60               	movwf	_nout& (0+255),b
  1993                           
  1994                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  1995  00196C  EFCB  F00C         	goto	l2664
  1996  001970                     l2662:
  1997                           
  1998                           ; BSR set to: 0
  1999                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1398:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  2000  001970  C052  F042         	movff	vfprintf@fp,vfpfcnvrt@fp
  2001  001974  C053  F043         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2002  001978  0E58               	movlw	low vfprintf@cfmt
  2003  00197A  6E44               	movwf	vfpfcnvrt@fmt^0,c
  2004  00197C  0E00               	movlw	high vfprintf@cfmt
  2005  00197E  6E45               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2006  001980  C056  F046         	movff	vfprintf@ap,vfpfcnvrt@ap
  2007  001984  C057  F047         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2008  001988  ECAB  F006         	call	_vfpfcnvrt	;wreg free
  2009  00198C  5042               	movf	?_vfpfcnvrt^0,w,c
  2010  00198E  0100               	movlb	0	; () banked
  2011  001990  2760               	addwf	_nout& (0+255),f,b
  2012  001992  5043               	movf	(?_vfpfcnvrt+1)^0,w,c
  2013  001994  2361               	addwfc	(_nout+1)& (0+255),f,b
  2014  001996                     l2664:
  2015                           
  2016                           ; BSR set to: 0
  2017                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  2018  001996  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
  2019  00199A  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2020  00199E                     	if	0	;tblptru may be non-zero
  2021  00199E                     	endif
  2022  00199E                     	if	0	;tblptru may be non-zero
  2023  00199E                     	endif
  2024  00199E  0008               	tblrd		*
  2025  0019A0  50F5               	movf	tablat,w,c
  2026  0019A2  0900               	iorlw	0
  2027  0019A4  A4D8               	btfss	status,2,c
  2028  0019A6  EFD7  F00C         	goto	u2471
  2029  0019AA  EFD9  F00C         	goto	u2470
  2030  0019AE                     u2471:
  2031  0019AE  EFB8  F00C         	goto	l2662
  2032  0019B2                     u2470:
  2033  0019B2                     
  2034                           ; BSR set to: 0
  2035                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1400:     return nout;
  2036  0019B2  C060  F052         	movff	_nout,?_vfprintf
  2037  0019B6  C061  F053         	movff	_nout+1,?_vfprintf+1
  2038  0019BA                     
  2039                           ; BSR set to: 0
  2040  0019BA  0012               	return		;funcret
  2041  0019BC                     __end_of_vfprintf:
  2042                           	callstack 0
  2043                           
  2044 ;; *************** function _vfpfcnvrt *****************
  2045 ;; Defined at:
  2046 ;;		line 692 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  fp              2   65[COMRAM] PTR struct _IO_FILE
  2049 ;;		 -> sprintf@f(6), 
  2050 ;;  fmt             2   67[COMRAM] PTR PTR unsigned char 
  2051 ;;		 -> vfprintf@cfmt(2), 
  2052 ;;  ap              2   69[COMRAM] PTR PTR void 
  2053 ;;		 -> sprintf@ap(2), 
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;  ll              8   73[COMRAM] long long 
  2056 ;;  llu             8    0        unsigned long long 
  2057 ;;  f               4    0        unsigned long long 
  2058 ;;  vp              3    0        PTR void 
  2059 ;;  ct              3    0        unsigned char [3]
  2060 ;;  cp              3    0        PTR unsigned char 
  2061 ;;  i               2    0        int 
  2062 ;;  done            2    0        int 
  2063 ;;  c               1    0        unsigned char 
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  2   65[COMRAM] int 
  2066 ;; Registers used:
  2067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2073 ;;      Params:         6       0       0       0       0       0       0       0       0
  2074 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2075 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2076 ;;      Totals:        16       0       0       0       0       0       0       0       0
  2077 ;;Total ram usage:       16 bytes
  2078 ;; Hardware stack levels used:    1
  2079 ;; Hardware stack levels required when called:    6
  2080 ;; This function calls:
  2081 ;;		_dtoa
  2082 ;;		_fputc
  2083 ;; This function is called by:
  2084 ;;		_vfprintf
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           	psect	text10
  2089  000D56                     __ptext10:
  2090                           	callstack 0
  2091  000D56                     _vfpfcnvrt:
  2092                           	callstack 21
  2093  000D56                     
  2094                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 692: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c
      +                          : 693: {;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 694:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 695:     int done, i;;
      +                          /opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 696:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 697:     unsigned long long llu;
  2095  000D56  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2096  000D5A  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2097  000D5E  CFDE FFF6          	movff	postinc2,tblptrl
  2098  000D62  CFDD FFF7          	movff	postdec2,tblptrh
  2099  000D66                     	if	0	;tblptru may be non-zero
  2100  000D66                     	endif
  2101  000D66                     	if	0	;tblptru may be non-zero
  2102  000D66                     	endif
  2103  000D66  0008               	tblrd		*
  2104  000D68  50F5               	movf	tablat,w,c
  2105  000D6A  0A25               	xorlw	37
  2106  000D6C  A4D8               	btfss	status,2,c
  2107  000D6E  EFBB  F006         	goto	u2271
  2108  000D72  EFBD  F006         	goto	u2270
  2109  000D76                     u2271:
  2110  000D76  EF69  F007         	goto	l2572
  2111  000D7A                     u2270:
  2112  000D7A                     
  2113                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  2114  000D7A  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2115  000D7E  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2116  000D82  2ADE               	incf	postinc2,f,c
  2117  000D84  0E00               	movlw	0
  2118  000D86  22DD               	addwfc	postdec2,f,c
  2119  000D88                     
  2120                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 705:         flags = width = 
      +                          0;
  2121  000D88  0E00               	movlw	0
  2122  000D8A  0100               	movlb	0	; () banked
  2123  000D8C  6F63               	movwf	(_width+1)& (0+255),b
  2124  000D8E  0E00               	movlw	0
  2125  000D90  6F62               	movwf	_width& (0+255),b
  2126  000D92  C062  F05B         	movff	_width,_flags
  2127  000D96  C063  F05C         	movff	_width+1,_flags+1
  2128  000D9A                     
  2129                           ; BSR set to: 0
  2130                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 706:         prec = -1;
  2131  000D9A  6964               	setf	_prec& (0+255),b
  2132  000D9C  6965               	setf	(_prec+1)& (0+255),b
  2133  000D9E                     
  2134                           ; BSR set to: 0
  2135                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 847:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  2136  000D9E  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2137  000DA2  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2138  000DA6  CFDE FFF6          	movff	postinc2,tblptrl
  2139  000DAA  CFDD FFF7          	movff	postdec2,tblptrh
  2140  000DAE                     	if	0	;tblptru may be non-zero
  2141  000DAE                     	endif
  2142  000DAE                     	if	0	;tblptru may be non-zero
  2143  000DAE                     	endif
  2144  000DAE  0008               	tblrd		*
  2145  000DB0  50F5               	movf	tablat,w,c
  2146  000DB2  0A64               	xorlw	100
  2147  000DB4  B4D8               	btfsc	status,2,c
  2148  000DB6  EFDF  F006         	goto	u2281
  2149  000DBA  EFE1  F006         	goto	u2280
  2150  000DBE                     u2281:
  2151  000DBE  EFF3  F006         	goto	l2550
  2152  000DC2                     u2280:
  2153  000DC2                     
  2154                           ; BSR set to: 0
  2155  000DC2  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2156  000DC6  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2157  000DCA  CFDE FFF6          	movff	postinc2,tblptrl
  2158  000DCE  CFDD FFF7          	movff	postdec2,tblptrh
  2159  000DD2                     	if	0	;tblptru may be non-zero
  2160  000DD2                     	endif
  2161  000DD2                     	if	0	;tblptru may be non-zero
  2162  000DD2                     	endif
  2163  000DD2  0008               	tblrd		*
  2164  000DD4  50F5               	movf	tablat,w,c
  2165  000DD6  0A69               	xorlw	105
  2166  000DD8  A4D8               	btfss	status,2,c
  2167  000DDA  EFF1  F006         	goto	u2291
  2168  000DDE  EFF3  F006         	goto	u2290
  2169  000DE2                     u2291:
  2170  000DE2  EF33  F007         	goto	l2556
  2171  000DE6                     u2290:
  2172  000DE6                     l2550:
  2173                           
  2174                           ; BSR set to: 0
  2175                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 849:             ++*fmt;
  2176  000DE6  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2177  000DEA  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2178  000DEE  2ADE               	incf	postinc2,f,c
  2179  000DF0  0E00               	movlw	0
  2180  000DF2  22DD               	addwfc	postdec2,f,c
  2181                           
  2182                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 850:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  2183  000DF4  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2184  000DF8  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2185  000DFC  CFDF F048          	movff	indf2,??_vfpfcnvrt
  2186  000E00  0E02               	movlw	2
  2187  000E02  26DE               	addwf	postinc2,f,c
  2188  000E04  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  2189  000E08  0E00               	movlw	0
  2190  000E0A  22DD               	addwfc	postdec2,f,c
  2191  000E0C  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2192  000E10  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2193  000E14  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  2194  000E18  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  2195  000E1C  0E00               	movlw	0
  2196  000E1E  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2197  000E20  0EFF               	movlw	-1
  2198  000E22  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  2199  000E24  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  2200  000E26  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  2201  000E28  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  2202  000E2A  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  2203  000E2C  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  2204  000E2E                     
  2205                           ; BSR set to: 0
  2206                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 852:             return dtoa(
      +                          fp, ll);
  2207  000E2E  C042  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  2208  000E32  C043  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2209  000E36  C04A  F020         	movff	vfpfcnvrt@ll,dtoa@d
  2210  000E3A  C04B  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2211  000E3E  C04C  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2212  000E42  C04D  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2213  000E46  C04E  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2214  000E4A  C04F  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2215  000E4E  C050  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2216  000E52  C051  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2217  000E56  EC14  F004         	call	_dtoa	;wreg free
  2218  000E5A  C01E  F042         	movff	?_dtoa,?_vfpfcnvrt
  2219  000E5E  C01F  F043         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2220  000E62  EF84  F007         	goto	l950
  2221  000E66                     l2556:
  2222                           
  2223                           ; BSR set to: 0
  2224                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1372:         if ((*fmt)[0] =
      +                          = '%') {
  2225  000E66  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2226  000E6A  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2227  000E6E  CFDE FFF6          	movff	postinc2,tblptrl
  2228  000E72  CFDD FFF7          	movff	postdec2,tblptrh
  2229  000E76                     	if	0	;tblptru may be non-zero
  2230  000E76                     	endif
  2231  000E76                     	if	0	;tblptru may be non-zero
  2232  000E76                     	endif
  2233  000E76  0008               	tblrd		*
  2234  000E78  50F5               	movf	tablat,w,c
  2235  000E7A  0A25               	xorlw	37
  2236  000E7C  A4D8               	btfss	status,2,c
  2237  000E7E  EF43  F007         	goto	u2301
  2238  000E82  EF45  F007         	goto	u2300
  2239  000E86                     u2301:
  2240  000E86  EF5C  F007         	goto	l2566
  2241  000E8A                     u2300:
  2242  000E8A                     
  2243                           ; BSR set to: 0
  2244                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1373:             ++*fmt;
  2245  000E8A  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2246  000E8E  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2247  000E92  2ADE               	incf	postinc2,f,c
  2248  000E94  0E00               	movlw	0
  2249  000E96  22DD               	addwfc	postdec2,f,c
  2250  000E98                     
  2251                           ; BSR set to: 0
  2252                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1374:             fputc((int)
      +                          '%', fp);
  2253  000E98  0E00               	movlw	0
  2254  000E9A  6E04               	movwf	(fputc@c+1)^0,c
  2255  000E9C  0E25               	movlw	37
  2256  000E9E  6E03               	movwf	fputc@c^0,c
  2257  000EA0  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2258  000EA4  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2259  000EA8  ECE6  F00A         	call	_fputc	;wreg free
  2260  000EAC                     l2562:
  2261                           
  2262                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1375:             return 1;
  2263  000EAC  0E00               	movlw	0
  2264  000EAE  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  2265  000EB0  0E01               	movlw	1
  2266  000EB2  6E42               	movwf	?_vfpfcnvrt^0,c
  2267  000EB4  EF84  F007         	goto	l950
  2268  000EB8                     l2566:
  2269                           
  2270                           ; BSR set to: 0
  2271                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt;
  2272  000EB8  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2273  000EBC  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2274  000EC0  2ADE               	incf	postinc2,f,c
  2275  000EC2  0E00               	movlw	0
  2276  000EC4  22DD               	addwfc	postdec2,f,c
  2277  000EC6                     
  2278                           ; BSR set to: 0
  2279                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1380:         return 0;
  2280  000EC6  0E00               	movlw	0
  2281  000EC8  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  2282  000ECA  0E00               	movlw	0
  2283  000ECC  6E42               	movwf	?_vfpfcnvrt^0,c
  2284  000ECE  EF84  F007         	goto	l950
  2285  000ED2                     l2572:
  2286                           
  2287                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1384:     fputc((int)(*fmt)[0
      +                          ], fp);
  2288  000ED2  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2289  000ED6  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2290  000EDA  CFDE FFF6          	movff	postinc2,tblptrl
  2291  000EDE  CFDD FFF7          	movff	postdec2,tblptrh
  2292  000EE2                     	if	0	;tblptru may be non-zero
  2293  000EE2                     	endif
  2294  000EE2                     	if	0	;tblptru may be non-zero
  2295  000EE2                     	endif
  2296  000EE2  0008               	tblrd		*
  2297  000EE4  50F5               	movf	tablat,w,c
  2298  000EE6  6E03               	movwf	fputc@c^0,c
  2299  000EE8  6A04               	clrf	(fputc@c+1)^0,c
  2300  000EEA  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2301  000EEE  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2302  000EF2  ECE6  F00A         	call	_fputc	;wreg free
  2303  000EF6                     
  2304                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  2305  000EF6  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2306  000EFA  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2307  000EFE  2ADE               	incf	postinc2,f,c
  2308  000F00  0E00               	movlw	0
  2309  000F02  22DD               	addwfc	postdec2,f,c
  2310  000F04  EF56  F007         	goto	l2562
  2311  000F08                     l950:
  2312  000F08  0012               	return		;funcret
  2313  000F0A                     __end_of_vfpfcnvrt:
  2314                           	callstack 0
  2315                           
  2316 ;; *************** function _dtoa *****************
  2317 ;; Defined at:
  2318 ;;		line 287 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  2319 ;; Parameters:    Size  Location     Type
  2320 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  2321 ;;		 -> sprintf@f(6), 
  2322 ;;  d               8   31[COMRAM] long long 
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;  n               8   55[COMRAM] long long 
  2325 ;;  i               2   63[COMRAM] int 
  2326 ;;  s               2   53[COMRAM] int 
  2327 ;;  w               2   51[COMRAM] int 
  2328 ;;  p               2   49[COMRAM] int 
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  2   29[COMRAM] int 
  2331 ;; Registers used:
  2332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2338 ;;      Params:        10       0       0       0       0       0       0       0       0
  2339 ;;      Locals:        18       0       0       0       0       0       0       0       0
  2340 ;;      Temps:          8       0       0       0       0       0       0       0       0
  2341 ;;      Totals:        36       0       0       0       0       0       0       0       0
  2342 ;;Total ram usage:       36 bytes
  2343 ;; Hardware stack levels used:    1
  2344 ;; Hardware stack levels required when called:    5
  2345 ;; This function calls:
  2346 ;;		___aodiv
  2347 ;;		___aomod
  2348 ;;		_abs
  2349 ;;		_pad
  2350 ;; This function is called by:
  2351 ;;		_vfpfcnvrt
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355                           	psect	text11
  2356  000828                     __ptext11:
  2357                           	callstack 0
  2358  000828                     _dtoa:
  2359                           	callstack 21
  2360  000828                     
  2361                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 287: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 288: {;/opt/mic
      +                          rochip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 289:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.31/pic/sources/c99/common/doprnt.c: 290:     long long n;;/opt/microchip/xc8/v2
      +                          .31/pic/sources/c99/common/doprnt.c: 293:     n = d;
  2362  000828  C020  F038         	movff	dtoa@d,dtoa@n
  2363  00082C  C021  F039         	movff	dtoa@d+1,dtoa@n+1
  2364  000830  C022  F03A         	movff	dtoa@d+2,dtoa@n+2
  2365  000834  C023  F03B         	movff	dtoa@d+3,dtoa@n+3
  2366  000838  C024  F03C         	movff	dtoa@d+4,dtoa@n+4
  2367  00083C  C025  F03D         	movff	dtoa@d+5,dtoa@n+5
  2368  000840  C026  F03E         	movff	dtoa@d+6,dtoa@n+6
  2369  000844  C027  F03F         	movff	dtoa@d+7,dtoa@n+7
  2370  000848                     
  2371                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ? 1 : 0;
  2372  000848  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  2373  00084A  EF29  F004         	goto	u2121
  2374  00084E  EF2C  F004         	goto	u2120
  2375  000852                     u2121:
  2376  000852  0E01               	movlw	1
  2377  000854  EF2D  F004         	goto	u2130
  2378  000858                     u2120:
  2379  000858  0E00               	movlw	0
  2380  00085A                     u2130:
  2381  00085A  6E36               	movwf	dtoa@s^0,c
  2382  00085C  6A37               	clrf	(dtoa@s+1)^0,c
  2383                           
  2384                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 295:     if (s) {
  2385  00085E  5036               	movf	dtoa@s^0,w,c
  2386  000860  1037               	iorwf	(dtoa@s+1)^0,w,c
  2387  000862  B4D8               	btfsc	status,2,c
  2388  000864  EF36  F004         	goto	u2141
  2389  000868  EF38  F004         	goto	u2140
  2390  00086C                     u2141:
  2391  00086C  EF48  F004         	goto	l2482
  2392  000870                     u2140:
  2393  000870                     
  2394                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 296:         n = -n;
  2395  000870  1E3F               	comf	(dtoa@n+7)^0,f,c
  2396  000872  1E3E               	comf	(dtoa@n+6)^0,f,c
  2397  000874  1E3D               	comf	(dtoa@n+5)^0,f,c
  2398  000876  1E3C               	comf	(dtoa@n+4)^0,f,c
  2399  000878  1E3B               	comf	(dtoa@n+3)^0,f,c
  2400  00087A  1E3A               	comf	(dtoa@n+2)^0,f,c
  2401  00087C  1E39               	comf	(dtoa@n+1)^0,f,c
  2402  00087E  6C38               	negf	dtoa@n^0,c
  2403  000880  0E00               	movlw	0
  2404  000882  2239               	addwfc	(dtoa@n+1)^0,f,c
  2405  000884  223A               	addwfc	(dtoa@n+2)^0,f,c
  2406  000886  223B               	addwfc	(dtoa@n+3)^0,f,c
  2407  000888  223C               	addwfc	(dtoa@n+4)^0,f,c
  2408  00088A  223D               	addwfc	(dtoa@n+5)^0,f,c
  2409  00088C  223E               	addwfc	(dtoa@n+6)^0,f,c
  2410  00088E  223F               	addwfc	(dtoa@n+7)^0,f,c
  2411  000890                     l2482:
  2412                           
  2413                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 300:     if (!(prec < 0)) {
  2414  000890  0100               	movlb	0	; () banked
  2415  000892  BF65               	btfsc	(_prec+1)& (0+255),7,b
  2416  000894  EF4E  F004         	goto	u2151
  2417  000898  EF50  F004         	goto	u2150
  2418  00089C                     u2151:
  2419  00089C  EF51  F004         	goto	l2486
  2420  0008A0                     u2150:
  2421  0008A0                     
  2422                           ; BSR set to: 0
  2423                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 301:         flags &= ~(1 << 
      +                          1);
  2424  0008A0  925B               	bcf	_flags^0,1,c
  2425  0008A2                     l2486:
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 303:     p = (0 < prec) ? pre
      +                          c : 1;
  2429  0008A2  BF65               	btfsc	(_prec+1)& (0+255),7,b
  2430  0008A4  EF5E  F004         	goto	u2160
  2431  0008A8  5165               	movf	(_prec+1)& (0+255),w,b
  2432  0008AA  E106               	bnz	u2161
  2433  0008AC  0564               	decf	_prec& (0+255),w,b
  2434  0008AE  B0D8               	btfsc	status,0,c
  2435  0008B0  EF5C  F004         	goto	u2161
  2436  0008B4  EF5E  F004         	goto	u2160
  2437  0008B8                     u2161:
  2438  0008B8  EF64  F004         	goto	l923
  2439  0008BC                     u2160:
  2440  0008BC                     
  2441                           ; BSR set to: 0
  2442  0008BC  0E00               	movlw	0
  2443  0008BE  6E33               	movwf	(dtoa@p+1)^0,c
  2444  0008C0  0E01               	movlw	1
  2445  0008C2  6E32               	movwf	dtoa@p^0,c
  2446  0008C4  EF68  F004         	goto	l925
  2447  0008C8                     l923:
  2448                           
  2449                           ; BSR set to: 0
  2450  0008C8  C064  F032         	movff	_prec,dtoa@p
  2451  0008CC  C065  F033         	movff	_prec+1,dtoa@p+1
  2452  0008D0                     l925:
  2453                           
  2454                           ; BSR set to: 0
  2455                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 304:     w = width;
  2456  0008D0  C062  F034         	movff	_width,dtoa@w
  2457  0008D4  C063  F035         	movff	_width+1,dtoa@w+1
  2458  0008D8                     
  2459                           ; BSR set to: 0
  2460                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 305:     if (s || (flags & (1
      +                           << 2))) {
  2461  0008D8  5036               	movf	dtoa@s^0,w,c
  2462  0008DA  1037               	iorwf	(dtoa@s+1)^0,w,c
  2463  0008DC  A4D8               	btfss	status,2,c
  2464  0008DE  EF73  F004         	goto	u2171
  2465  0008E2  EF75  F004         	goto	u2170
  2466  0008E6                     u2171:
  2467  0008E6  EF7C  F004         	goto	l2494
  2468  0008EA                     u2170:
  2469  0008EA                     
  2470                           ; BSR set to: 0
  2471  0008EA  A45B               	btfss	_flags^0,2,c
  2472  0008EC  EF7A  F004         	goto	u2181
  2473  0008F0  EF7C  F004         	goto	u2180
  2474  0008F4                     u2181:
  2475  0008F4  EF7F  F004         	goto	l2496
  2476  0008F8                     u2180:
  2477  0008F8                     l2494:
  2478                           
  2479                           ; BSR set to: 0
  2480                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 306:         --w;
  2481  0008F8  0634               	decf	dtoa@w^0,f,c
  2482  0008FA  A0D8               	btfss	status,0,c
  2483  0008FC  0635               	decf	(dtoa@w+1)^0,f,c
  2484  0008FE                     l2496:
  2485                           
  2486                           ; BSR set to: 0
  2487                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(dbuf) - 1
      +                          ;
  2488  0008FE  0E00               	movlw	0
  2489  000900  6E41               	movwf	(dtoa@i+1)^0,c
  2490  000902  0E1F               	movlw	31
  2491  000904  6E40               	movwf	dtoa@i^0,c
  2492  000906                     
  2493                           ; BSR set to: 0
  2494                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '\0';
  2495  000906  0E00               	movlw	0
  2496  000908  6FB8               	movwf	(_dbuf+31)& (0+255),b
  2497                           
  2498                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2499  00090A  EF03  F005         	goto	l2510
  2500  00090E                     l2500:
  2501                           
  2502                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 313:         --i;
  2503  00090E  0640               	decf	dtoa@i^0,f,c
  2504  000910  A0D8               	btfss	status,0,c
  2505  000912  0641               	decf	(dtoa@i+1)^0,f,c
  2506  000914                     
  2507                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 314:         dbuf[i] = (char)
      +                          ((int)'0' + abs(n % 10));
  2508  000914  0E99               	movlw	low _dbuf
  2509  000916  2440               	addwf	dtoa@i^0,w,c
  2510  000918  6ED9               	movwf	fsr2l,c
  2511  00091A  0E00               	movlw	high _dbuf
  2512  00091C  2041               	addwfc	(dtoa@i+1)^0,w,c
  2513  00091E  6EDA               	movwf	fsr2h,c
  2514  000920  C038  F003         	movff	dtoa@n,___aomod@dividend
  2515  000924  C039  F004         	movff	dtoa@n+1,___aomod@dividend+1
  2516  000928  C03A  F005         	movff	dtoa@n+2,___aomod@dividend+2
  2517  00092C  C03B  F006         	movff	dtoa@n+3,___aomod@dividend+3
  2518  000930  C03C  F007         	movff	dtoa@n+4,___aomod@dividend+4
  2519  000934  C03D  F008         	movff	dtoa@n+5,___aomod@dividend+5
  2520  000938  C03E  F009         	movff	dtoa@n+6,___aomod@dividend+6
  2521  00093C  C03F  F00A         	movff	dtoa@n+7,___aomod@dividend+7
  2522  000940  0E0A               	movlw	10
  2523  000942  6E0B               	movwf	___aomod@divisor^0,c
  2524  000944  0E00               	movlw	0
  2525  000946  6E0C               	movwf	(___aomod@divisor+1)^0,c
  2526  000948  0E00               	movlw	0
  2527  00094A  6E0D               	movwf	(___aomod@divisor+2)^0,c
  2528  00094C  0E00               	movlw	0
  2529  00094E  6E0E               	movwf	(___aomod@divisor+3)^0,c
  2530  000950  0E00               	movlw	0
  2531  000952  6E0F               	movwf	(___aomod@divisor+4)^0,c
  2532  000954  0E00               	movlw	0
  2533  000956  6E10               	movwf	(___aomod@divisor+5)^0,c
  2534  000958  0E00               	movlw	0
  2535  00095A  6E11               	movwf	(___aomod@divisor+6)^0,c
  2536  00095C  0E00               	movlw	0
  2537  00095E  6E12               	movwf	(___aomod@divisor+7)^0,c
  2538  000960  ECC9  F009         	call	___aomod	;wreg free
  2539  000964  C003  F028         	movff	?___aomod,??_dtoa
  2540  000968  C004  F029         	movff	?___aomod+1,??_dtoa+1
  2541  00096C  C005  F02A         	movff	?___aomod+2,??_dtoa+2
  2542  000970  C006  F02B         	movff	?___aomod+3,??_dtoa+3
  2543  000974  C007  F02C         	movff	?___aomod+4,??_dtoa+4
  2544  000978  C008  F02D         	movff	?___aomod+5,??_dtoa+5
  2545  00097C  C009  F02E         	movff	?___aomod+6,??_dtoa+6
  2546  000980  C00A  F02F         	movff	?___aomod+7,??_dtoa+7
  2547  000984  C028  F015         	movff	??_dtoa,abs@a
  2548  000988  C02A  F016         	movff	??_dtoa+2,abs@a+1
  2549  00098C  EC3A  F00E         	call	_abs	;wreg free
  2550  000990  5015               	movf	?_abs^0,w,c
  2551  000992  0F30               	addlw	48
  2552  000994  6EDF               	movwf	indf2,c
  2553  000996                     
  2554                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 315:         --p;
  2555  000996  0632               	decf	dtoa@p^0,f,c
  2556  000998  A0D8               	btfss	status,0,c
  2557  00099A  0633               	decf	(dtoa@p+1)^0,f,c
  2558  00099C                     
  2559                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 316:         --w;
  2560  00099C  0634               	decf	dtoa@w^0,f,c
  2561  00099E  A0D8               	btfss	status,0,c
  2562  0009A0  0635               	decf	(dtoa@w+1)^0,f,c
  2563  0009A2                     
  2564                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 317:         n = n / 10;
  2565  0009A2  C038  F003         	movff	dtoa@n,___aodiv@dividend
  2566  0009A6  C039  F004         	movff	dtoa@n+1,___aodiv@dividend+1
  2567  0009AA  C03A  F005         	movff	dtoa@n+2,___aodiv@dividend+2
  2568  0009AE  C03B  F006         	movff	dtoa@n+3,___aodiv@dividend+3
  2569  0009B2  C03C  F007         	movff	dtoa@n+4,___aodiv@dividend+4
  2570  0009B6  C03D  F008         	movff	dtoa@n+5,___aodiv@dividend+5
  2571  0009BA  C03E  F009         	movff	dtoa@n+6,___aodiv@dividend+6
  2572  0009BE  C03F  F00A         	movff	dtoa@n+7,___aodiv@dividend+7
  2573  0009C2  0E0A               	movlw	10
  2574  0009C4  6E0B               	movwf	___aodiv@divisor^0,c
  2575  0009C6  0E00               	movlw	0
  2576  0009C8  6E0C               	movwf	(___aodiv@divisor+1)^0,c
  2577  0009CA  0E00               	movlw	0
  2578  0009CC  6E0D               	movwf	(___aodiv@divisor+2)^0,c
  2579  0009CE  0E00               	movlw	0
  2580  0009D0  6E0E               	movwf	(___aodiv@divisor+3)^0,c
  2581  0009D2  0E00               	movlw	0
  2582  0009D4  6E0F               	movwf	(___aodiv@divisor+4)^0,c
  2583  0009D6  0E00               	movlw	0
  2584  0009D8  6E10               	movwf	(___aodiv@divisor+5)^0,c
  2585  0009DA  0E00               	movlw	0
  2586  0009DC  6E11               	movwf	(___aodiv@divisor+6)^0,c
  2587  0009DE  0E00               	movlw	0
  2588  0009E0  6E12               	movwf	(___aodiv@divisor+7)^0,c
  2589  0009E2  EC4A  F008         	call	___aodiv	;wreg free
  2590  0009E6  C003  F038         	movff	?___aodiv,dtoa@n
  2591  0009EA  C004  F039         	movff	?___aodiv+1,dtoa@n+1
  2592  0009EE  C005  F03A         	movff	?___aodiv+2,dtoa@n+2
  2593  0009F2  C006  F03B         	movff	?___aodiv+3,dtoa@n+3
  2594  0009F6  C007  F03C         	movff	?___aodiv+4,dtoa@n+4
  2595  0009FA  C008  F03D         	movff	?___aodiv+5,dtoa@n+5
  2596  0009FE  C009  F03E         	movff	?___aodiv+6,dtoa@n+6
  2597  000A02  C00A  F03F         	movff	?___aodiv+7,dtoa@n+7
  2598  000A06                     l2510:
  2599                           
  2600                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2601  000A06  BE41               	btfsc	(dtoa@i+1)^0,7,c
  2602  000A08  EF0E  F005         	goto	u2191
  2603  000A0C  5041               	movf	(dtoa@i+1)^0,w,c
  2604  000A0E  E108               	bnz	u2190
  2605  000A10  0440               	decf	dtoa@i^0,w,c
  2606  000A12  A0D8               	btfss	status,0,c
  2607  000A14  EF0E  F005         	goto	u2191
  2608  000A18  EF10  F005         	goto	u2190
  2609  000A1C                     u2191:
  2610  000A1C  EF40  F005         	goto	l2520
  2611  000A20                     u2190:
  2612  000A20  5038               	movf	dtoa@n^0,w,c
  2613  000A22  1039               	iorwf	(dtoa@n+1)^0,w,c
  2614  000A24  103A               	iorwf	(dtoa@n+2)^0,w,c
  2615  000A26  103B               	iorwf	(dtoa@n+3)^0,w,c
  2616  000A28  103C               	iorwf	(dtoa@n+4)^0,w,c
  2617  000A2A  103D               	iorwf	(dtoa@n+5)^0,w,c
  2618  000A2C  103E               	iorwf	(dtoa@n+6)^0,w,c
  2619  000A2E  103F               	iorwf	(dtoa@n+7)^0,w,c
  2620  000A30  A4D8               	btfss	status,2,c
  2621  000A32  EF1D  F005         	goto	u2201
  2622  000A36  EF1F  F005         	goto	u2200
  2623  000A3A                     u2201:
  2624  000A3A  EF87  F004         	goto	l2500
  2625  000A3E                     u2200:
  2626  000A3E  BE33               	btfsc	(dtoa@p+1)^0,7,c
  2627  000A40  EF2C  F005         	goto	u2210
  2628  000A44  5033               	movf	(dtoa@p+1)^0,w,c
  2629  000A46  E106               	bnz	u2211
  2630  000A48  0432               	decf	dtoa@p^0,w,c
  2631  000A4A  B0D8               	btfsc	status,0,c
  2632  000A4C  EF2A  F005         	goto	u2211
  2633  000A50  EF2C  F005         	goto	u2210
  2634  000A54                     u2211:
  2635  000A54  EF87  F004         	goto	l2500
  2636  000A58                     u2210:
  2637  000A58  BE35               	btfsc	(dtoa@w+1)^0,7,c
  2638  000A5A  EF37  F005         	goto	u2221
  2639  000A5E  5035               	movf	(dtoa@w+1)^0,w,c
  2640  000A60  E108               	bnz	u2220
  2641  000A62  0434               	decf	dtoa@w^0,w,c
  2642  000A64  A0D8               	btfss	status,0,c
  2643  000A66  EF37  F005         	goto	u2221
  2644  000A6A  EF39  F005         	goto	u2220
  2645  000A6E                     u2221:
  2646  000A6E  EF40  F005         	goto	l2520
  2647  000A72                     u2220:
  2648  000A72  B25B               	btfsc	_flags^0,1,c
  2649  000A74  EF3E  F005         	goto	u2231
  2650  000A78  EF40  F005         	goto	u2230
  2651  000A7C                     u2231:
  2652  000A7C  EF87  F004         	goto	l2500
  2653  000A80                     u2230:
  2654  000A80                     l2520:
  2655                           
  2656                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 321:     if (s || (flags & (1
      +                           << 2))) {
  2657  000A80  5036               	movf	dtoa@s^0,w,c
  2658  000A82  1037               	iorwf	(dtoa@s+1)^0,w,c
  2659  000A84  A4D8               	btfss	status,2,c
  2660  000A86  EF47  F005         	goto	u2241
  2661  000A8A  EF49  F005         	goto	u2240
  2662  000A8E                     u2241:
  2663  000A8E  EF50  F005         	goto	l2524
  2664  000A92                     u2240:
  2665  000A92  A45B               	btfss	_flags^0,2,c
  2666  000A94  EF4E  F005         	goto	u2251
  2667  000A98  EF50  F005         	goto	u2250
  2668  000A9C                     u2251:
  2669  000A9C  EF6E  F005         	goto	l2534
  2670  000AA0                     u2250:
  2671  000AA0                     l2524:
  2672                           
  2673                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 322:         --i;
  2674  000AA0  0640               	decf	dtoa@i^0,f,c
  2675  000AA2  A0D8               	btfss	status,0,c
  2676  000AA4  0641               	decf	(dtoa@i+1)^0,f,c
  2677  000AA6                     
  2678                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 323:         dbuf[i] = s ? '-
      +                          ' : '+';
  2679  000AA6  5036               	movf	dtoa@s^0,w,c
  2680  000AA8  1037               	iorwf	(dtoa@s+1)^0,w,c
  2681  000AAA  A4D8               	btfss	status,2,c
  2682  000AAC  EF5A  F005         	goto	u2261
  2683  000AB0  EF5C  F005         	goto	u2260
  2684  000AB4                     u2261:
  2685  000AB4  EF62  F005         	goto	l2530
  2686  000AB8                     u2260:
  2687  000AB8  0E00               	movlw	0
  2688  000ABA  6E31               	movwf	(_dtoa$1026+1)^0,c
  2689  000ABC  0E2B               	movlw	43
  2690  000ABE  6E30               	movwf	_dtoa$1026^0,c
  2691  000AC0  EF66  F005         	goto	l2532
  2692  000AC4                     l2530:
  2693  000AC4  0E00               	movlw	0
  2694  000AC6  6E31               	movwf	(_dtoa$1026+1)^0,c
  2695  000AC8  0E2D               	movlw	45
  2696  000ACA  6E30               	movwf	_dtoa$1026^0,c
  2697  000ACC                     l2532:
  2698  000ACC  0E99               	movlw	low _dbuf
  2699  000ACE  2440               	addwf	dtoa@i^0,w,c
  2700  000AD0  6ED9               	movwf	fsr2l,c
  2701  000AD2  0E00               	movlw	high _dbuf
  2702  000AD4  2041               	addwfc	(dtoa@i+1)^0,w,c
  2703  000AD6  6EDA               	movwf	fsr2h,c
  2704  000AD8  C030  FFDF         	movff	_dtoa$1026,indf2
  2705  000ADC                     l2534:
  2706                           
  2707                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 327:     return pad(fp, &dbuf
      +                          [i], w);
  2708  000ADC  C01E  F013         	movff	dtoa@fp,pad@fp
  2709  000AE0  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  2710  000AE4  0E99               	movlw	low _dbuf
  2711  000AE6  2440               	addwf	dtoa@i^0,w,c
  2712  000AE8  6E15               	movwf	pad@buf^0,c
  2713  000AEA  0E00               	movlw	high _dbuf
  2714  000AEC  2041               	addwfc	(dtoa@i+1)^0,w,c
  2715  000AEE  6E16               	movwf	(pad@buf+1)^0,c
  2716  000AF0  C034  F017         	movff	dtoa@w,pad@p
  2717  000AF4  C035  F018         	movff	dtoa@w+1,pad@p+1
  2718  000AF8  EC4B  F00B         	call	_pad	;wreg free
  2719  000AFC  C013  F01E         	movff	?_pad,?_dtoa
  2720  000B00  C014  F01F         	movff	?_pad+1,?_dtoa+1
  2721  000B04  0012               	return		;funcret
  2722  000B06                     __end_of_dtoa:
  2723                           	callstack 0
  2724                           
  2725 ;; *************** function _pad *****************
  2726 ;; Defined at:
  2727 ;;		line 72 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  2730 ;;		 -> sprintf@f(6), 
  2731 ;;  buf             2   20[COMRAM] PTR unsigned char 
  2732 ;;		 -> dbuf(32), 
  2733 ;;  p               2   22[COMRAM] int 
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;  w               2   27[COMRAM] int 
  2736 ;;  i               2   25[COMRAM] int 
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  2   18[COMRAM] int 
  2739 ;; Registers used:
  2740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2741 ;; Tracked objects:
  2742 ;;		On entry : 0/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2746 ;;      Params:         6       0       0       0       0       0       0       0       0
  2747 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2748 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2749 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2750 ;;Total ram usage:       11 bytes
  2751 ;; Hardware stack levels used:    1
  2752 ;; Hardware stack levels required when called:    4
  2753 ;; This function calls:
  2754 ;;		_fputc
  2755 ;;		_fputs
  2756 ;;		_strlen
  2757 ;; This function is called by:
  2758 ;;		_dtoa
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           	psect	text12
  2763  001696                     __ptext12:
  2764                           	callstack 0
  2765  001696                     _pad:
  2766                           	callstack 21
  2767  001696                     
  2768                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.31/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  2769  001696  A05B               	btfss	_flags^0,0,c
  2770  001698  EF50  F00B         	goto	u2071
  2771  00169C  EF52  F00B         	goto	u2070
  2772  0016A0                     u2071:
  2773  0016A0  EF5C  F00B         	goto	l2454
  2774  0016A4                     u2070:
  2775  0016A4                     
  2776                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  2777  0016A4  C015  F00C         	movff	pad@buf,fputs@s
  2778  0016A8  C016  F00D         	movff	pad@buf+1,fputs@s+1
  2779  0016AC  C013  F00E         	movff	pad@fp,fputs@fp
  2780  0016B0  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  2781  0016B4  EC18  F00E         	call	_fputs	;wreg free
  2782  0016B8                     l2454:
  2783                           
  2784                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  2785  0016B8  BE18               	btfsc	(pad@p+1)^0,7,c
  2786  0016BA  EF61  F00B         	goto	u2081
  2787  0016BE  EF63  F00B         	goto	u2080
  2788  0016C2                     u2081:
  2789  0016C2  EF69  F00B         	goto	l2458
  2790  0016C6                     u2080:
  2791  0016C6  C017  F01C         	movff	pad@p,pad@w
  2792  0016CA  C018  F01D         	movff	pad@p+1,pad@w+1
  2793  0016CE  EF6D  F00B         	goto	l912
  2794  0016D2                     l2458:
  2795  0016D2  0E00               	movlw	0
  2796  0016D4  6E1D               	movwf	(pad@w+1)^0,c
  2797  0016D6  0E00               	movlw	0
  2798  0016D8  6E1C               	movwf	pad@w^0,c
  2799  0016DA                     l912:
  2800                           
  2801                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  2802  0016DA  0E00               	movlw	0
  2803  0016DC  6E1B               	movwf	(pad@i+1)^0,c
  2804  0016DE  0E00               	movlw	0
  2805  0016E0  6E1A               	movwf	pad@i^0,c
  2806                           
  2807                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  2808  0016E2  EF7F  F00B         	goto	l2464
  2809  0016E6                     l2460:
  2810                           
  2811                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  2812  0016E6  0E00               	movlw	0
  2813  0016E8  6E04               	movwf	(fputc@c+1)^0,c
  2814  0016EA  0E20               	movlw	32
  2815  0016EC  6E03               	movwf	fputc@c^0,c
  2816  0016EE  C013  F005         	movff	pad@fp,fputc@fp
  2817  0016F2  C014  F006         	movff	pad@fp+1,fputc@fp+1
  2818  0016F6  ECE6  F00A         	call	_fputc	;wreg free
  2819  0016FA                     
  2820                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 86:         ++i;
  2821  0016FA  4A1A               	infsnz	pad@i^0,f,c
  2822  0016FC  2A1B               	incf	(pad@i+1)^0,f,c
  2823  0016FE                     l2464:
  2824                           
  2825                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  2826  0016FE  501C               	movf	pad@w^0,w,c
  2827  001700  5C1A               	subwf	pad@i^0,w,c
  2828  001702  501B               	movf	(pad@i+1)^0,w,c
  2829  001704  0A80               	xorlw	128
  2830  001706  6E19               	movwf	??_pad^0,c
  2831  001708  501D               	movf	(pad@w+1)^0,w,c
  2832  00170A  0A80               	xorlw	128
  2833  00170C  5819               	subwfb	??_pad^0,w,c
  2834  00170E  A0D8               	btfss	status,0,c
  2835  001710  EF8C  F00B         	goto	u2091
  2836  001714  EF8E  F00B         	goto	u2090
  2837  001718                     u2091:
  2838  001718  EF73  F00B         	goto	l2460
  2839  00171C                     u2090:
  2840  00171C                     
  2841                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  2842  00171C  B05B               	btfsc	_flags^0,0,c
  2843  00171E  EF93  F00B         	goto	u2101
  2844  001722  EF95  F00B         	goto	u2100
  2845  001726                     u2101:
  2846  001726  EF9F  F00B         	goto	l2468
  2847  00172A                     u2100:
  2848  00172A                     
  2849                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  2850  00172A  C015  F00C         	movff	pad@buf,fputs@s
  2851  00172E  C016  F00D         	movff	pad@buf+1,fputs@s+1
  2852  001732  C013  F00E         	movff	pad@fp,fputs@fp
  2853  001736  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  2854  00173A  EC18  F00E         	call	_fputs	;wreg free
  2855  00173E                     l2468:
  2856                           
  2857                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 94:     return (int)(strlen(b
      +                          uf) + (size_t)w);
  2858  00173E  C015  F003         	movff	pad@buf,strlen@s
  2859  001742  C016  F004         	movff	pad@buf+1,strlen@s+1
  2860  001746  EC5F  F00D         	call	_strlen	;wreg free
  2861  00174A  501C               	movf	pad@w^0,w,c
  2862  00174C  2403               	addwf	?_strlen^0,w,c
  2863  00174E  6E13               	movwf	?_pad^0,c
  2864  001750  501D               	movf	(pad@w+1)^0,w,c
  2865  001752  2004               	addwfc	(?_strlen+1)^0,w,c
  2866  001754  6E14               	movwf	(?_pad+1)^0,c
  2867  001756  0012               	return		;funcret
  2868  001758                     __end_of_pad:
  2869                           	callstack 0
  2870                           
  2871 ;; *************** function _fputs *****************
  2872 ;; Defined at:
  2873 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/nf_fputs.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;  s               2   11[COMRAM] PTR const unsigned char 
  2876 ;;		 -> dbuf(32), 
  2877 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  2878 ;;		 -> sprintf@f(6), 
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;  i               2   16[COMRAM] int 
  2881 ;;  c               1   15[COMRAM] unsigned char 
  2882 ;; Return value:  Size  Location     Type
  2883 ;;                  2   11[COMRAM] int 
  2884 ;; Registers used:
  2885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2891 ;;      Params:         4       0       0       0       0       0       0       0       0
  2892 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2893 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2894 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2895 ;;Total ram usage:        7 bytes
  2896 ;; Hardware stack levels used:    1
  2897 ;; Hardware stack levels required when called:    3
  2898 ;; This function calls:
  2899 ;;		_fputc
  2900 ;; This function is called by:
  2901 ;;		_pad
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905                           	psect	text13
  2906  001C30                     __ptext13:
  2907                           	callstack 0
  2908  001C30                     _fputs:
  2909                           	callstack 21
  2910  001C30  0E00               	movlw	0
  2911  001C32  6E12               	movwf	(fputs@i+1)^0,c
  2912  001C34  0E00               	movlw	0
  2913  001C36  6E11               	movwf	fputs@i^0,c
  2914  001C38  EF29  F00E         	goto	l2368
  2915  001C3C                     l2364:
  2916  001C3C  C010  F003         	movff	fputs@c,fputc@c
  2917  001C40  6A04               	clrf	(fputc@c+1)^0,c
  2918  001C42  C00E  F005         	movff	fputs@fp,fputc@fp
  2919  001C46  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  2920  001C4A  ECE6  F00A         	call	_fputc	;wreg free
  2921  001C4E  4A11               	infsnz	fputs@i^0,f,c
  2922  001C50  2A12               	incf	(fputs@i+1)^0,f,c
  2923  001C52                     l2368:
  2924  001C52  5011               	movf	fputs@i^0,w,c
  2925  001C54  240C               	addwf	fputs@s^0,w,c
  2926  001C56  6ED9               	movwf	fsr2l,c
  2927  001C58  5012               	movf	(fputs@i+1)^0,w,c
  2928  001C5A  200D               	addwfc	(fputs@s+1)^0,w,c
  2929  001C5C  6EDA               	movwf	fsr2h,c
  2930  001C5E  50DF               	movf	indf2,w,c
  2931  001C60  6E10               	movwf	fputs@c^0,c
  2932  001C62  5010               	movf	fputs@c^0,w,c
  2933  001C64  A4D8               	btfss	status,2,c
  2934  001C66  EF37  F00E         	goto	u1931
  2935  001C6A  EF39  F00E         	goto	u1930
  2936  001C6E                     u1931:
  2937  001C6E  EF1E  F00E         	goto	l2364
  2938  001C72                     u1930:
  2939  001C72  0012               	return		;funcret
  2940  001C74                     __end_of_fputs:
  2941                           	callstack 0
  2942                           
  2943 ;; *************** function _fputc *****************
  2944 ;; Defined at:
  2945 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/nf_fputc.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  c               2    2[COMRAM] int 
  2948 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  2949 ;;		 -> sprintf@f(6), 
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;		None
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  2    2[COMRAM] int 
  2954 ;; Registers used:
  2955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2961 ;;      Params:         4       0       0       0       0       0       0       0       0
  2962 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2963 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2964 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2965 ;;Total ram usage:        9 bytes
  2966 ;; Hardware stack levels used:    1
  2967 ;; Hardware stack levels required when called:    2
  2968 ;; This function calls:
  2969 ;;		_putch
  2970 ;; This function is called by:
  2971 ;;		_pad
  2972 ;;		_vfpfcnvrt
  2973 ;;		_fputs
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           	psect	text14
  2978  0015CC                     __ptext14:
  2979                           	callstack 0
  2980  0015CC                     _fputc:
  2981                           	callstack 24
  2982  0015CC  5005               	movf	fputc@fp^0,w,c
  2983  0015CE  1006               	iorwf	(fputc@fp+1)^0,w,c
  2984  0015D0  B4D8               	btfsc	status,2,c
  2985  0015D2  EFED  F00A         	goto	u1871
  2986  0015D6  EFEF  F00A         	goto	u1870
  2987  0015DA                     u1871:
  2988  0015DA  EFF8  F00A         	goto	l2342
  2989  0015DE                     u1870:
  2990  0015DE  5005               	movf	fputc@fp^0,w,c
  2991  0015E0  1006               	iorwf	(fputc@fp+1)^0,w,c
  2992  0015E2  A4D8               	btfss	status,2,c
  2993  0015E4  EFF6  F00A         	goto	u1881
  2994  0015E8  EFF8  F00A         	goto	u1880
  2995  0015EC                     u1881:
  2996  0015EC  EFFD  F00A         	goto	l2344
  2997  0015F0                     u1880:
  2998  0015F0                     l2342:
  2999  0015F0  5003               	movf	fputc@c^0,w,c
  3000  0015F2  ECDB  F00E         	call	_putch
  3001  0015F6  EF4A  F00B         	goto	l976
  3002  0015FA                     l2344:
  3003  0015FA  EE20 F004          	lfsr	2,4
  3004  0015FE  5005               	movf	fputc@fp^0,w,c
  3005  001600  26D9               	addwf	fsr2l,f,c
  3006  001602  5006               	movf	(fputc@fp+1)^0,w,c
  3007  001604  22DA               	addwfc	fsr2h,f,c
  3008  001606  50DE               	movf	postinc2,w,c
  3009  001608  10DE               	iorwf	postinc2,w,c
  3010  00160A  B4D8               	btfsc	status,2,c
  3011  00160C  EF0A  F00B         	goto	u1891
  3012  001610  EF0C  F00B         	goto	u1890
  3013  001614                     u1891:
  3014  001614  EF27  F00B         	goto	l2348
  3015  001618                     u1890:
  3016  001618  EE20 F004          	lfsr	2,4
  3017  00161C  5005               	movf	fputc@fp^0,w,c
  3018  00161E  26D9               	addwf	fsr2l,f,c
  3019  001620  5006               	movf	(fputc@fp+1)^0,w,c
  3020  001622  22DA               	addwfc	fsr2h,f,c
  3021  001624  EE10 F002          	lfsr	1,2
  3022  001628  5005               	movf	fputc@fp^0,w,c
  3023  00162A  26E1               	addwf	fsr1l,f,c
  3024  00162C  5006               	movf	(fputc@fp+1)^0,w,c
  3025  00162E  22E2               	addwfc	fsr1h,f,c
  3026  001630  50DE               	movf	postinc2,w,c
  3027  001632  5CE6               	subwf	postinc1,w,c
  3028  001634  50E6               	movf	postinc1,w,c
  3029  001636  0A80               	xorlw	128
  3030  001638  6E0B               	movwf	(??_fputc+4)^0,c
  3031  00163A  50DE               	movf	postinc2,w,c
  3032  00163C  0A80               	xorlw	128
  3033  00163E  580B               	subwfb	(??_fputc+4)^0,w,c
  3034  001640  B0D8               	btfsc	status,0,c
  3035  001642  EF25  F00B         	goto	u1901
  3036  001646  EF27  F00B         	goto	u1900
  3037  00164A                     u1901:
  3038  00164A  EF4A  F00B         	goto	l976
  3039  00164E                     u1900:
  3040  00164E                     l2348:
  3041  00164E  EE20 F002          	lfsr	2,2
  3042  001652  5005               	movf	fputc@fp^0,w,c
  3043  001654  26D9               	addwf	fsr2l,f,c
  3044  001656  5006               	movf	(fputc@fp+1)^0,w,c
  3045  001658  22DA               	addwfc	fsr2h,f,c
  3046  00165A  CFDE F007          	movff	postinc2,??_fputc
  3047  00165E  CFDD F008          	movff	postdec2,??_fputc+1
  3048  001662  C005  FFD9         	movff	fputc@fp,fsr2l
  3049  001666  C006  FFDA         	movff	fputc@fp+1,fsr2h
  3050  00166A  CFDE F009          	movff	postinc2,??_fputc+2
  3051  00166E  CFDD F00A          	movff	postdec2,??_fputc+3
  3052  001672  5007               	movf	??_fputc^0,w,c
  3053  001674  2409               	addwf	(??_fputc+2)^0,w,c
  3054  001676  6ED9               	movwf	fsr2l,c
  3055  001678  5008               	movf	(??_fputc+1)^0,w,c
  3056  00167A  200A               	addwfc	(??_fputc+3)^0,w,c
  3057  00167C  6EDA               	movwf	fsr2h,c
  3058  00167E  C003  FFDF         	movff	fputc@c,indf2
  3059  001682  EE20 F002          	lfsr	2,2
  3060  001686  5005               	movf	fputc@fp^0,w,c
  3061  001688  26D9               	addwf	fsr2l,f,c
  3062  00168A  5006               	movf	(fputc@fp+1)^0,w,c
  3063  00168C  22DA               	addwfc	fsr2h,f,c
  3064  00168E  2ADE               	incf	postinc2,f,c
  3065  001690  0E00               	movlw	0
  3066  001692  22DD               	addwfc	postdec2,f,c
  3067  001694                     l976:
  3068  001694  0012               	return		;funcret
  3069  001696                     __end_of_fputc:
  3070                           	callstack 0
  3071                           
  3072 ;; *************** function _putch *****************
  3073 ;; Defined at:
  3074 ;;		line 7 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/putch.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;  c               1    wreg     unsigned char 
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;  c               1    0[COMRAM] unsigned char 
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  1    wreg      void 
  3081 ;; Registers used:
  3082 ;;		wreg
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3088 ;;      Params:         0       0       0       0       0       0       0       0       0
  3089 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3090 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3091 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3092 ;;Total ram usage:        0 bytes
  3093 ;; Hardware stack levels used:    1
  3094 ;; Hardware stack levels required when called:    1
  3095 ;; This function calls:
  3096 ;;		Nothing
  3097 ;; This function is called by:
  3098 ;;		_fputc
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102                           	psect	text15
  3103  001DB6                     __ptext15:
  3104                           	callstack 0
  3105  001DB6                     _putch:
  3106                           	callstack 24
  3107  001DB6  0012               	return		;funcret
  3108  001DB8                     __end_of_putch:
  3109                           	callstack 0
  3110                           
  3111 ;; *************** function _abs *****************
  3112 ;; Defined at:
  3113 ;;		line 1 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/abs.c"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;  a               2   20[COMRAM] int 
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;		None
  3118 ;; Return value:  Size  Location     Type
  3119 ;;                  2   20[COMRAM] int 
  3120 ;; Registers used:
  3121 ;;		wreg, status,2, status,0
  3122 ;; Tracked objects:
  3123 ;;		On entry : 0/0
  3124 ;;		On exit  : 0/0
  3125 ;;		Unchanged: 0/0
  3126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3127 ;;      Params:         2       0       0       0       0       0       0       0       0
  3128 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3129 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3130 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3131 ;;Total ram usage:        4 bytes
  3132 ;; Hardware stack levels used:    1
  3133 ;; Hardware stack levels required when called:    1
  3134 ;; This function calls:
  3135 ;;		Nothing
  3136 ;; This function is called by:
  3137 ;;		_dtoa
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141                           	psect	text16
  3142  001C74                     __ptext16:
  3143                           	callstack 0
  3144  001C74                     _abs:
  3145                           	callstack 24
  3146  001C74  BE16               	btfsc	(abs@a+1)^0,7,c
  3147  001C76  EF47  F00E         	goto	u2110
  3148  001C7A  5016               	movf	(abs@a+1)^0,w,c
  3149  001C7C  E106               	bnz	u2111
  3150  001C7E  0415               	decf	abs@a^0,w,c
  3151  001C80  B0D8               	btfsc	status,0,c
  3152  001C82  EF45  F00E         	goto	u2111
  3153  001C86  EF47  F00E         	goto	u2110
  3154  001C8A                     u2111:
  3155  001C8A  EF55  F00E         	goto	l961
  3156  001C8E                     u2110:
  3157  001C8E  C015  F017         	movff	abs@a,??_abs
  3158  001C92  C016  F018         	movff	abs@a+1,??_abs+1
  3159  001C96  1E17               	comf	??_abs^0,f,c
  3160  001C98  1E18               	comf	(??_abs+1)^0,f,c
  3161  001C9A  4A17               	infsnz	??_abs^0,f,c
  3162  001C9C  2A18               	incf	(??_abs+1)^0,f,c
  3163  001C9E  C017  F015         	movff	??_abs,?_abs
  3164  001CA2  C018  F016         	movff	??_abs+1,?_abs+1
  3165  001CA6  EF59  F00E         	goto	l964
  3166  001CAA                     l961:
  3167  001CAA  C015  F015         	movff	abs@a,?_abs
  3168  001CAE  C016  F016         	movff	abs@a+1,?_abs+1
  3169  001CB2                     l964:
  3170  001CB2  0012               	return		;funcret
  3171  001CB4                     __end_of_abs:
  3172                           	callstack 0
  3173                           
  3174 ;; *************** function ___aomod *****************
  3175 ;; Defined at:
  3176 ;;		line 9 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/aomod.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;  dividend        8    2[COMRAM] long long 
  3179 ;;  divisor         8   10[COMRAM] long long 
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;  sign            1   19[COMRAM] unsigned char 
  3182 ;;  counter         1   18[COMRAM] unsigned char 
  3183 ;; Return value:  Size  Location     Type
  3184 ;;                  8    2[COMRAM] long long 
  3185 ;; Registers used:
  3186 ;;		wreg, status,2, status,0
  3187 ;; Tracked objects:
  3188 ;;		On entry : 0/0
  3189 ;;		On exit  : 0/0
  3190 ;;		Unchanged: 0/0
  3191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3192 ;;      Params:        16       0       0       0       0       0       0       0       0
  3193 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3194 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3195 ;;      Totals:        18       0       0       0       0       0       0       0       0
  3196 ;;Total ram usage:       18 bytes
  3197 ;; Hardware stack levels used:    1
  3198 ;; Hardware stack levels required when called:    1
  3199 ;; This function calls:
  3200 ;;		Nothing
  3201 ;; This function is called by:
  3202 ;;		_dtoa
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           	psect	text17
  3207  001392                     __ptext17:
  3208                           	callstack 0
  3209  001392                     ___aomod:
  3210                           	callstack 24
  3211  001392  0E00               	movlw	0
  3212  001394  6E14               	movwf	___aomod@sign^0,c
  3213  001396  BE0A               	btfsc	(___aomod@dividend+7)^0,7,c
  3214  001398  EFD2  F009         	goto	u2010
  3215  00139C  EFD0  F009         	goto	u2011
  3216  0013A0                     u2011:
  3217  0013A0  EFE4  F009         	goto	l2422
  3218  0013A4                     u2010:
  3219  0013A4  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  3220  0013A6  1E09               	comf	(___aomod@dividend+6)^0,f,c
  3221  0013A8  1E08               	comf	(___aomod@dividend+5)^0,f,c
  3222  0013AA  1E07               	comf	(___aomod@dividend+4)^0,f,c
  3223  0013AC  1E06               	comf	(___aomod@dividend+3)^0,f,c
  3224  0013AE  1E05               	comf	(___aomod@dividend+2)^0,f,c
  3225  0013B0  1E04               	comf	(___aomod@dividend+1)^0,f,c
  3226  0013B2  6C03               	negf	___aomod@dividend^0,c
  3227  0013B4  0E00               	movlw	0
  3228  0013B6  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  3229  0013B8  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  3230  0013BA  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  3231  0013BC  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  3232  0013BE  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  3233  0013C0  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  3234  0013C2  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  3235  0013C4  0E01               	movlw	1
  3236  0013C6  6E14               	movwf	___aomod@sign^0,c
  3237  0013C8                     l2422:
  3238  0013C8  BE12               	btfsc	(___aomod@divisor+7)^0,7,c
  3239  0013CA  EFEB  F009         	goto	u2020
  3240  0013CE  EFE9  F009         	goto	u2021
  3241  0013D2                     u2021:
  3242  0013D2  EFFB  F009         	goto	l2426
  3243  0013D6                     u2020:
  3244  0013D6  1E12               	comf	(___aomod@divisor+7)^0,f,c
  3245  0013D8  1E11               	comf	(___aomod@divisor+6)^0,f,c
  3246  0013DA  1E10               	comf	(___aomod@divisor+5)^0,f,c
  3247  0013DC  1E0F               	comf	(___aomod@divisor+4)^0,f,c
  3248  0013DE  1E0E               	comf	(___aomod@divisor+3)^0,f,c
  3249  0013E0  1E0D               	comf	(___aomod@divisor+2)^0,f,c
  3250  0013E2  1E0C               	comf	(___aomod@divisor+1)^0,f,c
  3251  0013E4  6C0B               	negf	___aomod@divisor^0,c
  3252  0013E6  0E00               	movlw	0
  3253  0013E8  220C               	addwfc	(___aomod@divisor+1)^0,f,c
  3254  0013EA  220D               	addwfc	(___aomod@divisor+2)^0,f,c
  3255  0013EC  220E               	addwfc	(___aomod@divisor+3)^0,f,c
  3256  0013EE  220F               	addwfc	(___aomod@divisor+4)^0,f,c
  3257  0013F0  2210               	addwfc	(___aomod@divisor+5)^0,f,c
  3258  0013F2  2211               	addwfc	(___aomod@divisor+6)^0,f,c
  3259  0013F4  2212               	addwfc	(___aomod@divisor+7)^0,f,c
  3260  0013F6                     l2426:
  3261  0013F6  500B               	movf	___aomod@divisor^0,w,c
  3262  0013F8  100C               	iorwf	(___aomod@divisor+1)^0,w,c
  3263  0013FA  100D               	iorwf	(___aomod@divisor+2)^0,w,c
  3264  0013FC  100E               	iorwf	(___aomod@divisor+3)^0,w,c
  3265  0013FE  100F               	iorwf	(___aomod@divisor+4)^0,w,c
  3266  001400  1010               	iorwf	(___aomod@divisor+5)^0,w,c
  3267  001402  1011               	iorwf	(___aomod@divisor+6)^0,w,c
  3268  001404  1012               	iorwf	(___aomod@divisor+7)^0,w,c
  3269  001406  B4D8               	btfsc	status,2,c
  3270  001408  EF08  F00A         	goto	u2031
  3271  00140C  EF0A  F00A         	goto	u2030
  3272  001410                     u2031:
  3273  001410  EF52  F00A         	goto	l2442
  3274  001414                     u2030:
  3275  001414  0E01               	movlw	1
  3276  001416  6E13               	movwf	___aomod@counter^0,c
  3277  001418  EF18  F00A         	goto	l2432
  3278  00141C                     l2430:
  3279  00141C  90D8               	bcf	status,0,c
  3280  00141E  360B               	rlcf	___aomod@divisor^0,f,c
  3281  001420  360C               	rlcf	(___aomod@divisor+1)^0,f,c
  3282  001422  360D               	rlcf	(___aomod@divisor+2)^0,f,c
  3283  001424  360E               	rlcf	(___aomod@divisor+3)^0,f,c
  3284  001426  360F               	rlcf	(___aomod@divisor+4)^0,f,c
  3285  001428  3610               	rlcf	(___aomod@divisor+5)^0,f,c
  3286  00142A  3611               	rlcf	(___aomod@divisor+6)^0,f,c
  3287  00142C  3612               	rlcf	(___aomod@divisor+7)^0,f,c
  3288  00142E  2A13               	incf	___aomod@counter^0,f,c
  3289  001430                     l2432:
  3290  001430  AE12               	btfss	(___aomod@divisor+7)^0,7,c
  3291  001432  EF1D  F00A         	goto	u2041
  3292  001436  EF1F  F00A         	goto	u2040
  3293  00143A                     u2041:
  3294  00143A  EF0E  F00A         	goto	l2430
  3295  00143E                     u2040:
  3296  00143E                     l2434:
  3297  00143E  500B               	movf	___aomod@divisor^0,w,c
  3298  001440  5C03               	subwf	___aomod@dividend^0,w,c
  3299  001442  500C               	movf	(___aomod@divisor+1)^0,w,c
  3300  001444  5804               	subwfb	(___aomod@dividend+1)^0,w,c
  3301  001446  500D               	movf	(___aomod@divisor+2)^0,w,c
  3302  001448  5805               	subwfb	(___aomod@dividend+2)^0,w,c
  3303  00144A  500E               	movf	(___aomod@divisor+3)^0,w,c
  3304  00144C  5806               	subwfb	(___aomod@dividend+3)^0,w,c
  3305  00144E  500F               	movf	(___aomod@divisor+4)^0,w,c
  3306  001450  5807               	subwfb	(___aomod@dividend+4)^0,w,c
  3307  001452  5010               	movf	(___aomod@divisor+5)^0,w,c
  3308  001454  5808               	subwfb	(___aomod@dividend+5)^0,w,c
  3309  001456  5011               	movf	(___aomod@divisor+6)^0,w,c
  3310  001458  5809               	subwfb	(___aomod@dividend+6)^0,w,c
  3311  00145A  5012               	movf	(___aomod@divisor+7)^0,w,c
  3312  00145C  580A               	subwfb	(___aomod@dividend+7)^0,w,c
  3313  00145E  A0D8               	btfss	status,0,c
  3314  001460  EF34  F00A         	goto	u2051
  3315  001464  EF36  F00A         	goto	u2050
  3316  001468                     u2051:
  3317  001468  EF46  F00A         	goto	l2438
  3318  00146C                     u2050:
  3319  00146C  500B               	movf	___aomod@divisor^0,w,c
  3320  00146E  5E03               	subwf	___aomod@dividend^0,f,c
  3321  001470  500C               	movf	(___aomod@divisor+1)^0,w,c
  3322  001472  5A04               	subwfb	(___aomod@dividend+1)^0,f,c
  3323  001474  500D               	movf	(___aomod@divisor+2)^0,w,c
  3324  001476  5A05               	subwfb	(___aomod@dividend+2)^0,f,c
  3325  001478  500E               	movf	(___aomod@divisor+3)^0,w,c
  3326  00147A  5A06               	subwfb	(___aomod@dividend+3)^0,f,c
  3327  00147C  500F               	movf	(___aomod@divisor+4)^0,w,c
  3328  00147E  5A07               	subwfb	(___aomod@dividend+4)^0,f,c
  3329  001480  5010               	movf	(___aomod@divisor+5)^0,w,c
  3330  001482  5A08               	subwfb	(___aomod@dividend+5)^0,f,c
  3331  001484  5011               	movf	(___aomod@divisor+6)^0,w,c
  3332  001486  5A09               	subwfb	(___aomod@dividend+6)^0,f,c
  3333  001488  5012               	movf	(___aomod@divisor+7)^0,w,c
  3334  00148A  5A0A               	subwfb	(___aomod@dividend+7)^0,f,c
  3335  00148C                     l2438:
  3336  00148C  90D8               	bcf	status,0,c
  3337  00148E  3212               	rrcf	(___aomod@divisor+7)^0,f,c
  3338  001490  3211               	rrcf	(___aomod@divisor+6)^0,f,c
  3339  001492  3210               	rrcf	(___aomod@divisor+5)^0,f,c
  3340  001494  320F               	rrcf	(___aomod@divisor+4)^0,f,c
  3341  001496  320E               	rrcf	(___aomod@divisor+3)^0,f,c
  3342  001498  320D               	rrcf	(___aomod@divisor+2)^0,f,c
  3343  00149A  320C               	rrcf	(___aomod@divisor+1)^0,f,c
  3344  00149C  320B               	rrcf	___aomod@divisor^0,f,c
  3345  00149E  2E13               	decfsz	___aomod@counter^0,f,c
  3346  0014A0  EF1F  F00A         	goto	l2434
  3347  0014A4                     l2442:
  3348  0014A4  5014               	movf	___aomod@sign^0,w,c
  3349  0014A6  B4D8               	btfsc	status,2,c
  3350  0014A8  EF58  F00A         	goto	u2061
  3351  0014AC  EF5A  F00A         	goto	u2060
  3352  0014B0                     u2061:
  3353  0014B0  EF6A  F00A         	goto	l2446
  3354  0014B4                     u2060:
  3355  0014B4  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  3356  0014B6  1E09               	comf	(___aomod@dividend+6)^0,f,c
  3357  0014B8  1E08               	comf	(___aomod@dividend+5)^0,f,c
  3358  0014BA  1E07               	comf	(___aomod@dividend+4)^0,f,c
  3359  0014BC  1E06               	comf	(___aomod@dividend+3)^0,f,c
  3360  0014BE  1E05               	comf	(___aomod@dividend+2)^0,f,c
  3361  0014C0  1E04               	comf	(___aomod@dividend+1)^0,f,c
  3362  0014C2  6C03               	negf	___aomod@dividend^0,c
  3363  0014C4  0E00               	movlw	0
  3364  0014C6  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  3365  0014C8  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  3366  0014CA  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  3367  0014CC  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  3368  0014CE  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  3369  0014D0  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  3370  0014D2  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  3371  0014D4                     l2446:
  3372  0014D4  C003  F003         	movff	___aomod@dividend,?___aomod
  3373  0014D8  C004  F004         	movff	___aomod@dividend+1,?___aomod+1
  3374  0014DC  C005  F005         	movff	___aomod@dividend+2,?___aomod+2
  3375  0014E0  C006  F006         	movff	___aomod@dividend+3,?___aomod+3
  3376  0014E4  C007  F007         	movff	___aomod@dividend+4,?___aomod+4
  3377  0014E8  C008  F008         	movff	___aomod@dividend+5,?___aomod+5
  3378  0014EC  C009  F009         	movff	___aomod@dividend+6,?___aomod+6
  3379  0014F0  C00A  F00A         	movff	___aomod@dividend+7,?___aomod+7
  3380  0014F4  0012               	return		;funcret
  3381  0014F6                     __end_of___aomod:
  3382                           	callstack 0
  3383                           
  3384 ;; *************** function ___aodiv *****************
  3385 ;; Defined at:
  3386 ;;		line 9 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/aodiv.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;  dividend        8    2[COMRAM] long long 
  3389 ;;  divisor         8   10[COMRAM] long long 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  quotient        8   20[COMRAM] long long 
  3392 ;;  sign            1   19[COMRAM] unsigned char 
  3393 ;;  counter         1   18[COMRAM] unsigned char 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  8    2[COMRAM] long long 
  3396 ;; Registers used:
  3397 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3403 ;;      Params:        16       0       0       0       0       0       0       0       0
  3404 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3405 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3406 ;;      Totals:        26       0       0       0       0       0       0       0       0
  3407 ;;Total ram usage:       26 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; Hardware stack levels required when called:    1
  3410 ;; This function calls:
  3411 ;;		Nothing
  3412 ;; This function is called by:
  3413 ;;		_dtoa
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           	psect	text18
  3418  001094                     __ptext18:
  3419                           	callstack 0
  3420  001094                     ___aodiv:
  3421                           	callstack 24
  3422  001094  0E00               	movlw	0
  3423  001096  6E14               	movwf	___aodiv@sign^0,c
  3424  001098  BE12               	btfsc	(___aodiv@divisor+7)^0,7,c
  3425  00109A  EF53  F008         	goto	u1940
  3426  00109E  EF51  F008         	goto	u1941
  3427  0010A2                     u1941:
  3428  0010A2  EF65  F008         	goto	l2378
  3429  0010A6                     u1940:
  3430  0010A6  1E12               	comf	(___aodiv@divisor+7)^0,f,c
  3431  0010A8  1E11               	comf	(___aodiv@divisor+6)^0,f,c
  3432  0010AA  1E10               	comf	(___aodiv@divisor+5)^0,f,c
  3433  0010AC  1E0F               	comf	(___aodiv@divisor+4)^0,f,c
  3434  0010AE  1E0E               	comf	(___aodiv@divisor+3)^0,f,c
  3435  0010B0  1E0D               	comf	(___aodiv@divisor+2)^0,f,c
  3436  0010B2  1E0C               	comf	(___aodiv@divisor+1)^0,f,c
  3437  0010B4  6C0B               	negf	___aodiv@divisor^0,c
  3438  0010B6  0E00               	movlw	0
  3439  0010B8  220C               	addwfc	(___aodiv@divisor+1)^0,f,c
  3440  0010BA  220D               	addwfc	(___aodiv@divisor+2)^0,f,c
  3441  0010BC  220E               	addwfc	(___aodiv@divisor+3)^0,f,c
  3442  0010BE  220F               	addwfc	(___aodiv@divisor+4)^0,f,c
  3443  0010C0  2210               	addwfc	(___aodiv@divisor+5)^0,f,c
  3444  0010C2  2211               	addwfc	(___aodiv@divisor+6)^0,f,c
  3445  0010C4  2212               	addwfc	(___aodiv@divisor+7)^0,f,c
  3446  0010C6  0E01               	movlw	1
  3447  0010C8  6E14               	movwf	___aodiv@sign^0,c
  3448  0010CA                     l2378:
  3449  0010CA  BE0A               	btfsc	(___aodiv@dividend+7)^0,7,c
  3450  0010CC  EF6C  F008         	goto	u1950
  3451  0010D0  EF6A  F008         	goto	u1951
  3452  0010D4                     u1951:
  3453  0010D4  EF7E  F008         	goto	l2384
  3454  0010D8                     u1950:
  3455  0010D8  1E0A               	comf	(___aodiv@dividend+7)^0,f,c
  3456  0010DA  1E09               	comf	(___aodiv@dividend+6)^0,f,c
  3457  0010DC  1E08               	comf	(___aodiv@dividend+5)^0,f,c
  3458  0010DE  1E07               	comf	(___aodiv@dividend+4)^0,f,c
  3459  0010E0  1E06               	comf	(___aodiv@dividend+3)^0,f,c
  3460  0010E2  1E05               	comf	(___aodiv@dividend+2)^0,f,c
  3461  0010E4  1E04               	comf	(___aodiv@dividend+1)^0,f,c
  3462  0010E6  6C03               	negf	___aodiv@dividend^0,c
  3463  0010E8  0E00               	movlw	0
  3464  0010EA  2204               	addwfc	(___aodiv@dividend+1)^0,f,c
  3465  0010EC  2205               	addwfc	(___aodiv@dividend+2)^0,f,c
  3466  0010EE  2206               	addwfc	(___aodiv@dividend+3)^0,f,c
  3467  0010F0  2207               	addwfc	(___aodiv@dividend+4)^0,f,c
  3468  0010F2  2208               	addwfc	(___aodiv@dividend+5)^0,f,c
  3469  0010F4  2209               	addwfc	(___aodiv@dividend+6)^0,f,c
  3470  0010F6  220A               	addwfc	(___aodiv@dividend+7)^0,f,c
  3471  0010F8  0E01               	movlw	1
  3472  0010FA  1A14               	xorwf	___aodiv@sign^0,f,c
  3473  0010FC                     l2384:
  3474  0010FC  EE20  F015         	lfsr	2,___aodiv@quotient
  3475  001100  0E07               	movlw	7
  3476  001102                     u1961:
  3477  001102  6ADE               	clrf	postinc2,c
  3478  001104  06E8               	decf	wreg,f,c
  3479  001106  E2FD               	bc	u1961
  3480  001108  500B               	movf	___aodiv@divisor^0,w,c
  3481  00110A  100C               	iorwf	(___aodiv@divisor+1)^0,w,c
  3482  00110C  100D               	iorwf	(___aodiv@divisor+2)^0,w,c
  3483  00110E  100E               	iorwf	(___aodiv@divisor+3)^0,w,c
  3484  001110  100F               	iorwf	(___aodiv@divisor+4)^0,w,c
  3485  001112  1010               	iorwf	(___aodiv@divisor+5)^0,w,c
  3486  001114  1011               	iorwf	(___aodiv@divisor+6)^0,w,c
  3487  001116  1012               	iorwf	(___aodiv@divisor+7)^0,w,c
  3488  001118  B4D8               	btfsc	status,2,c
  3489  00111A  EF91  F008         	goto	u1971
  3490  00111E  EF93  F008         	goto	u1970
  3491  001122                     u1971:
  3492  001122  EFE5  F008         	goto	l2406
  3493  001126                     u1970:
  3494  001126  0E01               	movlw	1
  3495  001128  6E13               	movwf	___aodiv@counter^0,c
  3496  00112A  EFA1  F008         	goto	l2392
  3497  00112E                     l2390:
  3498  00112E  90D8               	bcf	status,0,c
  3499  001130  360B               	rlcf	___aodiv@divisor^0,f,c
  3500  001132  360C               	rlcf	(___aodiv@divisor+1)^0,f,c
  3501  001134  360D               	rlcf	(___aodiv@divisor+2)^0,f,c
  3502  001136  360E               	rlcf	(___aodiv@divisor+3)^0,f,c
  3503  001138  360F               	rlcf	(___aodiv@divisor+4)^0,f,c
  3504  00113A  3610               	rlcf	(___aodiv@divisor+5)^0,f,c
  3505  00113C  3611               	rlcf	(___aodiv@divisor+6)^0,f,c
  3506  00113E  3612               	rlcf	(___aodiv@divisor+7)^0,f,c
  3507  001140  2A13               	incf	___aodiv@counter^0,f,c
  3508  001142                     l2392:
  3509  001142  AE12               	btfss	(___aodiv@divisor+7)^0,7,c
  3510  001144  EFA6  F008         	goto	u1981
  3511  001148  EFA8  F008         	goto	u1980
  3512  00114C                     u1981:
  3513  00114C  EF97  F008         	goto	l2390
  3514  001150                     u1980:
  3515  001150                     l2394:
  3516  001150  90D8               	bcf	status,0,c
  3517  001152  3615               	rlcf	___aodiv@quotient^0,f,c
  3518  001154  3616               	rlcf	(___aodiv@quotient+1)^0,f,c
  3519  001156  3617               	rlcf	(___aodiv@quotient+2)^0,f,c
  3520  001158  3618               	rlcf	(___aodiv@quotient+3)^0,f,c
  3521  00115A  3619               	rlcf	(___aodiv@quotient+4)^0,f,c
  3522  00115C  361A               	rlcf	(___aodiv@quotient+5)^0,f,c
  3523  00115E  361B               	rlcf	(___aodiv@quotient+6)^0,f,c
  3524  001160  361C               	rlcf	(___aodiv@quotient+7)^0,f,c
  3525  001162  500B               	movf	___aodiv@divisor^0,w,c
  3526  001164  5C03               	subwf	___aodiv@dividend^0,w,c
  3527  001166  500C               	movf	(___aodiv@divisor+1)^0,w,c
  3528  001168  5804               	subwfb	(___aodiv@dividend+1)^0,w,c
  3529  00116A  500D               	movf	(___aodiv@divisor+2)^0,w,c
  3530  00116C  5805               	subwfb	(___aodiv@dividend+2)^0,w,c
  3531  00116E  500E               	movf	(___aodiv@divisor+3)^0,w,c
  3532  001170  5806               	subwfb	(___aodiv@dividend+3)^0,w,c
  3533  001172  500F               	movf	(___aodiv@divisor+4)^0,w,c
  3534  001174  5807               	subwfb	(___aodiv@dividend+4)^0,w,c
  3535  001176  5010               	movf	(___aodiv@divisor+5)^0,w,c
  3536  001178  5808               	subwfb	(___aodiv@dividend+5)^0,w,c
  3537  00117A  5011               	movf	(___aodiv@divisor+6)^0,w,c
  3538  00117C  5809               	subwfb	(___aodiv@dividend+6)^0,w,c
  3539  00117E  5012               	movf	(___aodiv@divisor+7)^0,w,c
  3540  001180  580A               	subwfb	(___aodiv@dividend+7)^0,w,c
  3541  001182  A0D8               	btfss	status,0,c
  3542  001184  EFC6  F008         	goto	u1991
  3543  001188  EFC8  F008         	goto	u1990
  3544  00118C                     u1991:
  3545  00118C  EFD9  F008         	goto	l2402
  3546  001190                     u1990:
  3547  001190  500B               	movf	___aodiv@divisor^0,w,c
  3548  001192  5E03               	subwf	___aodiv@dividend^0,f,c
  3549  001194  500C               	movf	(___aodiv@divisor+1)^0,w,c
  3550  001196  5A04               	subwfb	(___aodiv@dividend+1)^0,f,c
  3551  001198  500D               	movf	(___aodiv@divisor+2)^0,w,c
  3552  00119A  5A05               	subwfb	(___aodiv@dividend+2)^0,f,c
  3553  00119C  500E               	movf	(___aodiv@divisor+3)^0,w,c
  3554  00119E  5A06               	subwfb	(___aodiv@dividend+3)^0,f,c
  3555  0011A0  500F               	movf	(___aodiv@divisor+4)^0,w,c
  3556  0011A2  5A07               	subwfb	(___aodiv@dividend+4)^0,f,c
  3557  0011A4  5010               	movf	(___aodiv@divisor+5)^0,w,c
  3558  0011A6  5A08               	subwfb	(___aodiv@dividend+5)^0,f,c
  3559  0011A8  5011               	movf	(___aodiv@divisor+6)^0,w,c
  3560  0011AA  5A09               	subwfb	(___aodiv@dividend+6)^0,f,c
  3561  0011AC  5012               	movf	(___aodiv@divisor+7)^0,w,c
  3562  0011AE  5A0A               	subwfb	(___aodiv@dividend+7)^0,f,c
  3563  0011B0  8015               	bsf	___aodiv@quotient^0,0,c
  3564  0011B2                     l2402:
  3565  0011B2  90D8               	bcf	status,0,c
  3566  0011B4  3212               	rrcf	(___aodiv@divisor+7)^0,f,c
  3567  0011B6  3211               	rrcf	(___aodiv@divisor+6)^0,f,c
  3568  0011B8  3210               	rrcf	(___aodiv@divisor+5)^0,f,c
  3569  0011BA  320F               	rrcf	(___aodiv@divisor+4)^0,f,c
  3570  0011BC  320E               	rrcf	(___aodiv@divisor+3)^0,f,c
  3571  0011BE  320D               	rrcf	(___aodiv@divisor+2)^0,f,c
  3572  0011C0  320C               	rrcf	(___aodiv@divisor+1)^0,f,c
  3573  0011C2  320B               	rrcf	___aodiv@divisor^0,f,c
  3574  0011C4  2E13               	decfsz	___aodiv@counter^0,f,c
  3575  0011C6  EFA8  F008         	goto	l2394
  3576  0011CA                     l2406:
  3577  0011CA  5014               	movf	___aodiv@sign^0,w,c
  3578  0011CC  B4D8               	btfsc	status,2,c
  3579  0011CE  EFEB  F008         	goto	u2001
  3580  0011D2  EFED  F008         	goto	u2000
  3581  0011D6                     u2001:
  3582  0011D6  EFFD  F008         	goto	l2410
  3583  0011DA                     u2000:
  3584  0011DA  1E1C               	comf	(___aodiv@quotient+7)^0,f,c
  3585  0011DC  1E1B               	comf	(___aodiv@quotient+6)^0,f,c
  3586  0011DE  1E1A               	comf	(___aodiv@quotient+5)^0,f,c
  3587  0011E0  1E19               	comf	(___aodiv@quotient+4)^0,f,c
  3588  0011E2  1E18               	comf	(___aodiv@quotient+3)^0,f,c
  3589  0011E4  1E17               	comf	(___aodiv@quotient+2)^0,f,c
  3590  0011E6  1E16               	comf	(___aodiv@quotient+1)^0,f,c
  3591  0011E8  6C15               	negf	___aodiv@quotient^0,c
  3592  0011EA  0E00               	movlw	0
  3593  0011EC  2216               	addwfc	(___aodiv@quotient+1)^0,f,c
  3594  0011EE  2217               	addwfc	(___aodiv@quotient+2)^0,f,c
  3595  0011F0  2218               	addwfc	(___aodiv@quotient+3)^0,f,c
  3596  0011F2  2219               	addwfc	(___aodiv@quotient+4)^0,f,c
  3597  0011F4  221A               	addwfc	(___aodiv@quotient+5)^0,f,c
  3598  0011F6  221B               	addwfc	(___aodiv@quotient+6)^0,f,c
  3599  0011F8  221C               	addwfc	(___aodiv@quotient+7)^0,f,c
  3600  0011FA                     l2410:
  3601  0011FA  C015  F003         	movff	___aodiv@quotient,?___aodiv
  3602  0011FE  C016  F004         	movff	___aodiv@quotient+1,?___aodiv+1
  3603  001202  C017  F005         	movff	___aodiv@quotient+2,?___aodiv+2
  3604  001206  C018  F006         	movff	___aodiv@quotient+3,?___aodiv+3
  3605  00120A  C019  F007         	movff	___aodiv@quotient+4,?___aodiv+4
  3606  00120E  C01A  F008         	movff	___aodiv@quotient+5,?___aodiv+5
  3607  001212  C01B  F009         	movff	___aodiv@quotient+6,?___aodiv+6
  3608  001216  C01C  F00A         	movff	___aodiv@quotient+7,?___aodiv+7
  3609  00121A  0012               	return		;funcret
  3610  00121C                     __end_of___aodiv:
  3611                           	callstack 0
  3612                           
  3613 ;; *************** function _memset *****************
  3614 ;; Defined at:
  3615 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/memset.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;  dest            2    2[COMRAM] PTR void 
  3618 ;;		 -> data_out(50), dht_raw_data(80), data_in(512), 
  3619 ;;  c               2    4[COMRAM] int 
  3620 ;;  n               2    6[COMRAM] unsigned int 
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;  s               2   12[COMRAM] PTR unsigned char 
  3623 ;;		 -> data_out(50), dht_raw_data(80), data_in(512), 
  3624 ;;  k               2   10[COMRAM] unsigned int 
  3625 ;; Return value:  Size  Location     Type
  3626 ;;                  2    2[COMRAM] PTR void 
  3627 ;; Registers used:
  3628 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/0
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3634 ;;      Params:         6       0       0       0       0       0       0       0       0
  3635 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3636 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3637 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3638 ;;Total ram usage:       12 bytes
  3639 ;; Hardware stack levels used:    1
  3640 ;; Hardware stack levels required when called:    1
  3641 ;; This function calls:
  3642 ;;		Nothing
  3643 ;; This function is called by:
  3644 ;;		_main
  3645 ;;		_dht_read
  3646 ;;		_get_action
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           	psect	text19
  3651  00121C                     __ptext19:
  3652                           	callstack 0
  3653  00121C                     _memset:
  3654                           	callstack 29
  3655  00121C  C003  F00D         	movff	memset@dest,memset@s
  3656  001220  C004  F00E         	movff	memset@dest+1,memset@s+1
  3657  001224  5007               	movf	memset@n^0,w,c
  3658  001226  1008               	iorwf	(memset@n+1)^0,w,c
  3659  001228  A4D8               	btfss	status,2,c
  3660  00122A  EF19  F009         	goto	u2481
  3661  00122E  EF1B  F009         	goto	u2480
  3662  001232                     u2481:
  3663  001232  EF1D  F009         	goto	l2670
  3664  001236                     u2480:
  3665  001236  EFC8  F009         	goto	l872
  3666  00123A                     l2670:
  3667  00123A  C00D  FFD9         	movff	memset@s,fsr2l
  3668  00123E  C00E  FFDA         	movff	memset@s+1,fsr2h
  3669  001242  C005  FFDF         	movff	memset@c,indf2
  3670  001246  5007               	movf	memset@n^0,w,c
  3671  001248  240D               	addwf	memset@s^0,w,c
  3672  00124A  6E09               	movwf	??_memset^0,c
  3673  00124C  5008               	movf	(memset@n+1)^0,w,c
  3674  00124E  200E               	addwfc	(memset@s+1)^0,w,c
  3675  001250  6E0A               	movwf	(??_memset+1)^0,c
  3676  001252  0EFF               	movlw	255
  3677  001254  2409               	addwf	??_memset^0,w,c
  3678  001256  6ED9               	movwf	fsr2l,c
  3679  001258  0EFF               	movlw	255
  3680  00125A  200A               	addwfc	(??_memset+1)^0,w,c
  3681  00125C  6EDA               	movwf	fsr2h,c
  3682  00125E  C005  FFDF         	movff	memset@c,indf2
  3683  001262  5008               	movf	(memset@n+1)^0,w,c
  3684  001264  E107               	bnz	u2491
  3685  001266  0E03               	movlw	3
  3686  001268  5C07               	subwf	memset@n^0,w,c
  3687  00126A  B0D8               	btfsc	status,0,c
  3688  00126C  EF3A  F009         	goto	u2491
  3689  001270  EF3C  F009         	goto	u2490
  3690  001274                     u2491:
  3691  001274  EF3E  F009         	goto	l2676
  3692  001278                     u2490:
  3693  001278  EFC8  F009         	goto	l872
  3694  00127C                     l2676:
  3695  00127C  EE20 F001          	lfsr	2,1
  3696  001280  500D               	movf	memset@s^0,w,c
  3697  001282  26D9               	addwf	fsr2l,f,c
  3698  001284  500E               	movf	(memset@s+1)^0,w,c
  3699  001286  22DA               	addwfc	fsr2h,f,c
  3700  001288  C005  FFDF         	movff	memset@c,indf2
  3701  00128C  EE20 F002          	lfsr	2,2
  3702  001290  500D               	movf	memset@s^0,w,c
  3703  001292  26D9               	addwf	fsr2l,f,c
  3704  001294  500E               	movf	(memset@s+1)^0,w,c
  3705  001296  22DA               	addwfc	fsr2h,f,c
  3706  001298  C005  FFDF         	movff	memset@c,indf2
  3707  00129C  5007               	movf	memset@n^0,w,c
  3708  00129E  240D               	addwf	memset@s^0,w,c
  3709  0012A0  6E09               	movwf	??_memset^0,c
  3710  0012A2  5008               	movf	(memset@n+1)^0,w,c
  3711  0012A4  200E               	addwfc	(memset@s+1)^0,w,c
  3712  0012A6  6E0A               	movwf	(??_memset+1)^0,c
  3713  0012A8  0EFE               	movlw	254
  3714  0012AA  2409               	addwf	??_memset^0,w,c
  3715  0012AC  6ED9               	movwf	fsr2l,c
  3716  0012AE  0EFF               	movlw	255
  3717  0012B0  200A               	addwfc	(??_memset+1)^0,w,c
  3718  0012B2  6EDA               	movwf	fsr2h,c
  3719  0012B4  C005  FFDF         	movff	memset@c,indf2
  3720  0012B8  5007               	movf	memset@n^0,w,c
  3721  0012BA  240D               	addwf	memset@s^0,w,c
  3722  0012BC  6E09               	movwf	??_memset^0,c
  3723  0012BE  5008               	movf	(memset@n+1)^0,w,c
  3724  0012C0  200E               	addwfc	(memset@s+1)^0,w,c
  3725  0012C2  6E0A               	movwf	(??_memset+1)^0,c
  3726  0012C4  0EFD               	movlw	253
  3727  0012C6  2409               	addwf	??_memset^0,w,c
  3728  0012C8  6ED9               	movwf	fsr2l,c
  3729  0012CA  0EFF               	movlw	255
  3730  0012CC  200A               	addwfc	(??_memset+1)^0,w,c
  3731  0012CE  6EDA               	movwf	fsr2h,c
  3732  0012D0  C005  FFDF         	movff	memset@c,indf2
  3733  0012D4  5008               	movf	(memset@n+1)^0,w,c
  3734  0012D6  E107               	bnz	u2501
  3735  0012D8  0E07               	movlw	7
  3736  0012DA  5C07               	subwf	memset@n^0,w,c
  3737  0012DC  B0D8               	btfsc	status,0,c
  3738  0012DE  EF73  F009         	goto	u2501
  3739  0012E2  EF75  F009         	goto	u2500
  3740  0012E6                     u2501:
  3741  0012E6  EF77  F009         	goto	l2682
  3742  0012EA                     u2500:
  3743  0012EA  EFC8  F009         	goto	l872
  3744  0012EE                     l2682:
  3745  0012EE  EE20 F003          	lfsr	2,3
  3746  0012F2  500D               	movf	memset@s^0,w,c
  3747  0012F4  26D9               	addwf	fsr2l,f,c
  3748  0012F6  500E               	movf	(memset@s+1)^0,w,c
  3749  0012F8  22DA               	addwfc	fsr2h,f,c
  3750  0012FA  C005  FFDF         	movff	memset@c,indf2
  3751  0012FE  5007               	movf	memset@n^0,w,c
  3752  001300  240D               	addwf	memset@s^0,w,c
  3753  001302  6E09               	movwf	??_memset^0,c
  3754  001304  5008               	movf	(memset@n+1)^0,w,c
  3755  001306  200E               	addwfc	(memset@s+1)^0,w,c
  3756  001308  6E0A               	movwf	(??_memset+1)^0,c
  3757  00130A  0EFC               	movlw	252
  3758  00130C  2409               	addwf	??_memset^0,w,c
  3759  00130E  6ED9               	movwf	fsr2l,c
  3760  001310  0EFF               	movlw	255
  3761  001312  200A               	addwfc	(??_memset+1)^0,w,c
  3762  001314  6EDA               	movwf	fsr2h,c
  3763  001316  C005  FFDF         	movff	memset@c,indf2
  3764  00131A  5008               	movf	(memset@n+1)^0,w,c
  3765  00131C  E107               	bnz	u2511
  3766  00131E  0E09               	movlw	9
  3767  001320  5C07               	subwf	memset@n^0,w,c
  3768  001322  B0D8               	btfsc	status,0,c
  3769  001324  EF96  F009         	goto	u2511
  3770  001328  EF98  F009         	goto	u2510
  3771  00132C                     u2511:
  3772  00132C  EF9A  F009         	goto	l2688
  3773  001330                     u2510:
  3774  001330  EFC8  F009         	goto	l872
  3775  001334                     l2688:
  3776  001334  C00D  F009         	movff	memset@s,??_memset
  3777  001338  C00E  F00A         	movff	memset@s+1,??_memset+1
  3778  00133C  1E09               	comf	??_memset^0,f,c
  3779  00133E  1E0A               	comf	(??_memset+1)^0,f,c
  3780  001340  4A09               	infsnz	??_memset^0,f,c
  3781  001342  2A0A               	incf	(??_memset+1)^0,f,c
  3782  001344  0E03               	movlw	3
  3783  001346  1409               	andwf	??_memset^0,w,c
  3784  001348  6E0B               	movwf	memset@k^0,c
  3785  00134A  6A0C               	clrf	(memset@k+1)^0,c
  3786  00134C  500B               	movf	memset@k^0,w,c
  3787  00134E  260D               	addwf	memset@s^0,f,c
  3788  001350  500C               	movf	(memset@k+1)^0,w,c
  3789  001352  220E               	addwfc	(memset@s+1)^0,f,c
  3790  001354  500B               	movf	memset@k^0,w,c
  3791  001356  5E07               	subwf	memset@n^0,f,c
  3792  001358  500C               	movf	(memset@k+1)^0,w,c
  3793  00135A  5A08               	subwfb	(memset@n+1)^0,f,c
  3794  00135C  0EFC               	movlw	252
  3795  00135E  1607               	andwf	memset@n^0,f,c
  3796  001360  0EFF               	movlw	255
  3797  001362  1608               	andwf	(memset@n+1)^0,f,c
  3798  001364  EFBF  F009         	goto	l2696
  3799  001368                     l2690:
  3800  001368  C00D  FFD9         	movff	memset@s,fsr2l
  3801  00136C  C00E  FFDA         	movff	memset@s+1,fsr2h
  3802  001370  C005  FFDF         	movff	memset@c,indf2
  3803  001374  0607               	decf	memset@n^0,f,c
  3804  001376  A0D8               	btfss	status,0,c
  3805  001378  0608               	decf	(memset@n+1)^0,f,c
  3806  00137A  4A0D               	infsnz	memset@s^0,f,c
  3807  00137C  2A0E               	incf	(memset@s+1)^0,f,c
  3808  00137E                     l2696:
  3809  00137E  5007               	movf	memset@n^0,w,c
  3810  001380  1008               	iorwf	(memset@n+1)^0,w,c
  3811  001382  A4D8               	btfss	status,2,c
  3812  001384  EFC6  F009         	goto	u2521
  3813  001388  EFC8  F009         	goto	u2520
  3814  00138C                     u2521:
  3815  00138C  EFB4  F009         	goto	l2690
  3816  001390                     u2520:
  3817  001390                     l872:
  3818  001390  0012               	return		;funcret
  3819  001392                     __end_of_memset:
  3820                           	callstack 0
  3821                           
  3822 ;; *************** function _dht_read_bit *****************
  3823 ;; Defined at:
  3824 ;;		line 195 in file "main.c"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;		None
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;		None
  3829 ;; Return value:  Size  Location     Type
  3830 ;;                  2    2[COMRAM] int 
  3831 ;; Registers used:
  3832 ;;		wreg, status,2
  3833 ;; Tracked objects:
  3834 ;;		On entry : 0/0
  3835 ;;		On exit  : 0/0
  3836 ;;		Unchanged: 0/0
  3837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3838 ;;      Params:         2       0       0       0       0       0       0       0       0
  3839 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3840 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3841 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3842 ;;Total ram usage:        2 bytes
  3843 ;; Hardware stack levels used:    1
  3844 ;; Hardware stack levels required when called:    1
  3845 ;; This function calls:
  3846 ;;		Nothing
  3847 ;; This function is called by:
  3848 ;;		_dht_read
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851                           
  3852                           	psect	text20
  3853  001BA4                     __ptext20:
  3854                           	callstack 0
  3855  001BA4                     _dht_read_bit:
  3856                           	callstack 28
  3857  001BA4                     l107:
  3858  001BA4  A483               	btfss	131,2,c	;volatile
  3859  001BA6  EFD7  F00D         	goto	u2531
  3860  001BAA  EFD9  F00D         	goto	u2530
  3861  001BAE                     u2531:
  3862  001BAE  EFD2  F00D         	goto	l107
  3863  001BB2                     u2530:
  3864  001BB2                     
  3865                           ;main.c: 197:     _delay((unsigned long)((30)*(16000000/4000000.0)));
  3866  001BB2  0E28               	movlw	40
  3867  001BB4                     u2817:
  3868  001BB4  2EE8               	decfsz	wreg,f,c
  3869  001BB6  D7FE               	bra	u2817
  3870  001BB8                     
  3871                           ;main.c: 199:     if (PORTDbits.RD2 == 1) {
  3872  001BB8  A483               	btfss	131,2,c	;volatile
  3873  001BBA  EFE1  F00D         	goto	u2541
  3874  001BBE  EFE3  F00D         	goto	u2540
  3875  001BC2                     u2541:
  3876  001BC2  EFF0  F00D         	goto	l2712
  3877  001BC6                     u2540:
  3878  001BC6                     l111:
  3879  001BC6  B483               	btfsc	131,2,c	;volatile
  3880  001BC8  EFE8  F00D         	goto	u2551
  3881  001BCC  EFEA  F00D         	goto	u2550
  3882  001BD0                     u2551:
  3883  001BD0  EFE3  F00D         	goto	l111
  3884  001BD4                     u2550:
  3885  001BD4                     
  3886                           ;main.c: 201:         return 1;
  3887  001BD4  0E00               	movlw	0
  3888  001BD6  6E04               	movwf	(?_dht_read_bit+1)^0,c
  3889  001BD8  0E01               	movlw	1
  3890  001BDA  6E03               	movwf	?_dht_read_bit^0,c
  3891  001BDC  EFF4  F00D         	goto	l114
  3892  001BE0                     l2712:
  3893                           
  3894                           ;main.c: 203:         return 0;
  3895  001BE0  0E00               	movlw	0
  3896  001BE2  6E04               	movwf	(?_dht_read_bit+1)^0,c
  3897  001BE4  0E00               	movlw	0
  3898  001BE6  6E03               	movwf	?_dht_read_bit^0,c
  3899  001BE8                     l114:
  3900  001BE8  0012               	return		;funcret
  3901  001BEA                     __end_of_dht_read_bit:
  3902                           	callstack 0
  3903                           
  3904 ;; *************** function _USART_SendString *****************
  3905 ;; Defined at:
  3906 ;;		line 275 in file "main.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;  data            2    6[COMRAM] PTR unsigned char 
  3909 ;;		 -> data_out(50), 
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;  index           1   10[COMRAM] unsigned char 
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  1    wreg      void 
  3914 ;; Registers used:
  3915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3921 ;;      Params:         2       0       0       0       0       0       0       0       0
  3922 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3923 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3924 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3925 ;;Total ram usage:        5 bytes
  3926 ;; Hardware stack levels used:    1
  3927 ;; Hardware stack levels required when called:    2
  3928 ;; This function calls:
  3929 ;;		_USART_SendChar
  3930 ;;		_strlen
  3931 ;; This function is called by:
  3932 ;;		_dht_read
  3933 ;; This function uses a non-reentrant model
  3934 ;;
  3935                           
  3936                           	psect	text21
  3937  001BEA                     __ptext21:
  3938                           	callstack 0
  3939  001BEA                     _USART_SendString:
  3940                           	callstack 27
  3941  001BEA                     
  3942                           ;main.c: 276:     for (uint8_t index = 0; index < strlen(data); index++) {
  3943  001BEA  0E00               	movlw	0
  3944  001BEC  6E0B               	movwf	USART_SendString@index^0,c
  3945  001BEE  EF03  F00E         	goto	l2734
  3946  001BF2                     l2730:
  3947                           
  3948                           ;main.c: 277:         USART_SendChar(data[index]);
  3949  001BF2  500B               	movf	USART_SendString@index^0,w,c
  3950  001BF4  2407               	addwf	USART_SendString@data^0,w,c
  3951  001BF6  6ED9               	movwf	fsr2l,c
  3952  001BF8  0E00               	movlw	0
  3953  001BFA  2008               	addwfc	(USART_SendString@data+1)^0,w,c
  3954  001BFC  6EDA               	movwf	fsr2h,c
  3955  001BFE  50DF               	movf	indf2,w,c
  3956  001C00  ECCE  F00E         	call	_USART_SendChar
  3957  001C04                     
  3958                           ;main.c: 278:     }
  3959  001C04  2A0B               	incf	USART_SendString@index^0,f,c
  3960  001C06                     l2734:
  3961  001C06  C007  F003         	movff	USART_SendString@data,strlen@s
  3962  001C0A  C008  F004         	movff	USART_SendString@data+1,strlen@s+1
  3963  001C0E  EC5F  F00D         	call	_strlen	;wreg free
  3964  001C12  500B               	movf	USART_SendString@index^0,w,c
  3965  001C14  6E09               	movwf	??_USART_SendString^0,c
  3966  001C16  6A0A               	clrf	(??_USART_SendString+1)^0,c
  3967  001C18  5003               	movf	?_strlen^0,w,c
  3968  001C1A  5C09               	subwf	??_USART_SendString^0,w,c
  3969  001C1C  5004               	movf	(?_strlen+1)^0,w,c
  3970  001C1E  580A               	subwfb	(??_USART_SendString+1)^0,w,c
  3971  001C20  A0D8               	btfss	status,0,c
  3972  001C22  EF15  F00E         	goto	u2561
  3973  001C26  EF17  F00E         	goto	u2560
  3974  001C2A                     u2561:
  3975  001C2A  EFF9  F00D         	goto	l2730
  3976  001C2E                     u2560:
  3977  001C2E  0012               	return		;funcret
  3978  001C30                     __end_of_USART_SendString:
  3979                           	callstack 0
  3980                           
  3981 ;; *************** function _USART_SendChar *****************
  3982 ;; Defined at:
  3983 ;;		line 270 in file "main.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  data            1    wreg     unsigned char 
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;  data            1    2[COMRAM] unsigned char 
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  1    wreg      void 
  3990 ;; Registers used:
  3991 ;;		wreg
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3997 ;;      Params:         0       0       0       0       0       0       0       0       0
  3998 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3999 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4000 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4001 ;;Total ram usage:        1 bytes
  4002 ;; Hardware stack levels used:    1
  4003 ;; Hardware stack levels required when called:    1
  4004 ;; This function calls:
  4005 ;;		Nothing
  4006 ;; This function is called by:
  4007 ;;		_USART_SendString
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           	psect	text22
  4012  001D9C                     __ptext22:
  4013                           	callstack 0
  4014  001D9C                     _USART_SendChar:
  4015                           	callstack 27
  4016                           
  4017                           ;incstack = 0
  4018                           ;USART_SendChar@data stored from wreg
  4019  001D9C  6E03               	movwf	USART_SendChar@data^0,c
  4020  001D9E                     l140:
  4021  001D9E  A89E               	btfss	3998,4,c	;volatile
  4022  001DA0  EFD4  F00E         	goto	u2421
  4023  001DA4  EFD6  F00E         	goto	u2420
  4024  001DA8                     u2421:
  4025  001DA8  EFCF  F00E         	goto	l140
  4026  001DAC                     u2420:
  4027  001DAC                     
  4028                           ;main.c: 272:     TXREG = data;
  4029  001DAC  C003  FFAD         	movff	USART_SendChar@data,4013	;volatile
  4030  001DB0  0012               	return		;funcret
  4031  001DB2                     __end_of_USART_SendChar:
  4032                           	callstack 0
  4033                           
  4034 ;; *************** function _data_received *****************
  4035 ;; Defined at:
  4036 ;;		line 207 in file "main.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;		None
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;  ptr             2   19[COMRAM] PTR unsigned char 
  4041 ;;		 -> NULL(0), data_in(512), 
  4042 ;; Return value:  Size  Location     Type
  4043 ;;                  1    wreg      _Bool 
  4044 ;; Registers used:
  4045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4046 ;; Tracked objects:
  4047 ;;		On entry : 0/0
  4048 ;;		On exit  : 0/0
  4049 ;;		Unchanged: 0/0
  4050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4051 ;;      Params:         0       0       0       0       0       0       0       0       0
  4052 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4053 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4054 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4055 ;;Total ram usage:        2 bytes
  4056 ;; Hardware stack levels used:    1
  4057 ;; Hardware stack levels required when called:    3
  4058 ;; This function calls:
  4059 ;;		_strstr
  4060 ;; This function is called by:
  4061 ;;		_main
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           
  4065                           	psect	text23
  4066  001D24                     __ptext23:
  4067                           	callstack 0
  4068  001D24                     _data_received:
  4069                           	callstack 27
  4070  001D24                     
  4071                           ;main.c: 208:     char * ptr = strstr(data_in, END_CMD);
  4072  001D24  0E50               	movlw	low _data_in
  4073  001D26  6E0E               	movwf	strstr@h^0,c
  4074  001D28  0E01               	movlw	high _data_in
  4075  001D2A  6E0F               	movwf	(strstr@h+1)^0,c
  4076  001D2C  0E20               	movlw	low STR_2
  4077  001D2E  6E10               	movwf	strstr@n^0,c
  4078  001D30  0E08               	movlw	high STR_2
  4079  001D32  6E11               	movwf	(strstr@n+1)^0,c
  4080  001D34  ECAC  F00B         	call	_strstr	;wreg free
  4081  001D38  C00E  F014         	movff	?_strstr,data_received@ptr
  4082  001D3C  C00F  F015         	movff	?_strstr+1,data_received@ptr+1
  4083  001D40                     
  4084                           ;main.c: 210:     if (ptr != ((void*)0)) {
  4085  001D40  5014               	movf	data_received@ptr^0,w,c
  4086  001D42  1015               	iorwf	(data_received@ptr+1)^0,w,c
  4087  001D44  B4D8               	btfsc	status,2,c
  4088  001D46  EFA7  F00E         	goto	u2731
  4089  001D4A  EFA9  F00E         	goto	u2730
  4090  001D4E                     u2731:
  4091  001D4E  EFAC  F00E         	goto	l2890
  4092  001D52                     u2730:
  4093  001D52                     
  4094                           ;main.c: 211:         return 1;
  4095  001D52  0E01               	movlw	1
  4096  001D54  EFAD  F00E         	goto	l119
  4097  001D58                     l2890:
  4098                           
  4099                           ;main.c: 214:     return 0;
  4100  001D58  0E00               	movlw	0
  4101  001D5A                     l119:
  4102  001D5A  0012               	return		;funcret
  4103  001D5C                     __end_of_data_received:
  4104                           	callstack 0
  4105                           
  4106 ;; *************** function _strstr *****************
  4107 ;; Defined at:
  4108 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/strstr.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;  h               2   13[COMRAM] PTR const unsigned char 
  4111 ;;		 -> NULL(0), data_in(512), 
  4112 ;;  n               2   15[COMRAM] PTR const unsigned char 
  4113 ;;		 -> STR_5(2), STR_2(4), STR_1(8), 
  4114 ;; Auto vars:     Size  Location     Type
  4115 ;;  nl              2   17[COMRAM] unsigned int 
  4116 ;; Return value:  Size  Location     Type
  4117 ;;                  2   13[COMRAM] PTR unsigned char 
  4118 ;; Registers used:
  4119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4120 ;; Tracked objects:
  4121 ;;		On entry : 0/0
  4122 ;;		On exit  : 0/0
  4123 ;;		Unchanged: 0/0
  4124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4125 ;;      Params:         4       0       0       0       0       0       0       0       0
  4126 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4127 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4128 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4129 ;;Total ram usage:        6 bytes
  4130 ;; Hardware stack levels used:    1
  4131 ;; Hardware stack levels required when called:    2
  4132 ;; This function calls:
  4133 ;;		_strchr
  4134 ;;		_strlen
  4135 ;;		_strncmp
  4136 ;; This function is called by:
  4137 ;;		_data_received
  4138 ;;		_get_action
  4139 ;;		_is_command
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143                           	psect	text24
  4144  001758                     __ptext24:
  4145                           	callstack 0
  4146  001758                     _strstr:
  4147                           	callstack 27
  4148  001758  5010               	movf	strstr@n^0,w,c
  4149  00175A  1011               	iorwf	(strstr@n+1)^0,w,c
  4150  00175C  B4D8               	btfsc	status,2,c
  4151  00175E  EFB3  F00B         	goto	u2381
  4152  001762  EFB5  F00B         	goto	u2380
  4153  001766                     u2381:
  4154  001766  EF07  F00C         	goto	l2628
  4155  00176A                     u2380:
  4156  00176A  C010  F003         	movff	strstr@n,strlen@s
  4157  00176E  C011  F004         	movff	strstr@n+1,strlen@s+1
  4158  001772  EC5F  F00D         	call	_strlen	;wreg free
  4159  001776  C003  F012         	movff	?_strlen,strstr@nl
  4160  00177A  C004  F013         	movff	?_strlen+1,strstr@nl+1
  4161  00177E  EFF2  F00B         	goto	l2624
  4162  001782                     l2616:
  4163  001782  C00E  F003         	movff	strstr@h,strncmp@_l
  4164  001786  C00F  F004         	movff	strstr@h+1,strncmp@_l+1
  4165  00178A  C010  F005         	movff	strstr@n,strncmp@_r
  4166  00178E  C011  F006         	movff	strstr@n+1,strncmp@_r+1
  4167  001792  C012  F007         	movff	strstr@nl,strncmp@n
  4168  001796  C013  F008         	movff	strstr@nl+1,strncmp@n+1
  4169  00179A  EC7B  F00A         	call	_strncmp	;wreg free
  4170  00179E  5003               	movf	?_strncmp^0,w,c
  4171  0017A0  1004               	iorwf	(?_strncmp+1)^0,w,c
  4172  0017A2  A4D8               	btfss	status,2,c
  4173  0017A4  EFD6  F00B         	goto	u2391
  4174  0017A8  EFD8  F00B         	goto	u2390
  4175  0017AC                     u2391:
  4176  0017AC  EFDE  F00B         	goto	l2622
  4177  0017B0                     u2390:
  4178  0017B0  C00E  F00E         	movff	strstr@h,?_strstr
  4179  0017B4  C00F  F00F         	movff	strstr@h+1,?_strstr+1
  4180  0017B8  EF0B  F00C         	goto	l1006
  4181  0017BC                     l2622:
  4182  0017BC  0E01               	movlw	1
  4183  0017BE  240E               	addwf	strstr@h^0,w,c
  4184  0017C0  6E03               	movwf	strchr@s^0,c
  4185  0017C2  0E00               	movlw	0
  4186  0017C4  200F               	addwfc	(strstr@h+1)^0,w,c
  4187  0017C6  6E04               	movwf	(strchr@s+1)^0,c
  4188  0017C8  C010  FFF6         	movff	strstr@n,tblptrl
  4189  0017CC  C011  FFF7         	movff	strstr@n+1,tblptrh
  4190  0017D0                     	if	0	;tblptru may be non-zero
  4191  0017D0                     	endif
  4192  0017D0                     	if	0	;tblptru may be non-zero
  4193  0017D0                     	endif
  4194  0017D0  0008               	tblrd		*
  4195  0017D2  50F5               	movf	tablat,w,c
  4196  0017D4  6E05               	movwf	strchr@c^0,c
  4197  0017D6  6A06               	clrf	(strchr@c+1)^0,c
  4198  0017D8  EC86  F00D         	call	_strchr	;wreg free
  4199  0017DC  C003  F00E         	movff	?_strchr,strstr@h
  4200  0017E0  C004  F00F         	movff	?_strchr+1,strstr@h+1
  4201  0017E4                     l2624:
  4202  0017E4  500E               	movf	strstr@h^0,w,c
  4203  0017E6  100F               	iorwf	(strstr@h+1)^0,w,c
  4204  0017E8  B4D8               	btfsc	status,2,c
  4205  0017EA  EFF9  F00B         	goto	u2401
  4206  0017EE  EFFB  F00B         	goto	u2400
  4207  0017F2                     u2401:
  4208  0017F2  EF07  F00C         	goto	l2628
  4209  0017F6                     u2400:
  4210  0017F6  C00E  FFD9         	movff	strstr@h,fsr2l
  4211  0017FA  C00F  FFDA         	movff	strstr@h+1,fsr2h
  4212  0017FE  50DF               	movf	indf2,w,c
  4213  001800  A4D8               	btfss	status,2,c
  4214  001802  EF05  F00C         	goto	u2411
  4215  001806  EF07  F00C         	goto	u2410
  4216  00180A                     u2411:
  4217  00180A  EFC1  F00B         	goto	l2616
  4218  00180E                     u2410:
  4219  00180E                     l2628:
  4220  00180E  0E00               	movlw	0
  4221  001810  6E0E               	movwf	?_strstr^0,c
  4222  001812  0E00               	movlw	0
  4223  001814  6E0F               	movwf	(?_strstr+1)^0,c
  4224  001816                     l1006:
  4225  001816  0012               	return		;funcret
  4226  001818                     __end_of_strstr:
  4227                           	callstack 0
  4228                           
  4229 ;; *************** function _strncmp *****************
  4230 ;; Defined at:
  4231 ;;		line 3 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/strncmp.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;  _l              2    2[COMRAM] PTR const unsigned char 
  4234 ;;		 -> NULL(0), data_in(512), 
  4235 ;;  _r              2    4[COMRAM] PTR const unsigned char 
  4236 ;;		 -> STR_5(2), STR_2(4), STR_1(8), 
  4237 ;;  n               2    6[COMRAM] unsigned int 
  4238 ;; Auto vars:     Size  Location     Type
  4239 ;;  r               2   11[COMRAM] PTR const unsigned char 
  4240 ;;		 -> STR_5(2), STR_2(4), STR_1(8), 
  4241 ;;  l               2    9[COMRAM] PTR const unsigned char 
  4242 ;;		 -> NULL(0), data_in(512), 
  4243 ;; Return value:  Size  Location     Type
  4244 ;;                  2    2[COMRAM] int 
  4245 ;; Registers used:
  4246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4252 ;;      Params:         6       0       0       0       0       0       0       0       0
  4253 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4254 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4255 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4256 ;;Total ram usage:       11 bytes
  4257 ;; Hardware stack levels used:    1
  4258 ;; Hardware stack levels required when called:    1
  4259 ;; This function calls:
  4260 ;;		Nothing
  4261 ;; This function is called by:
  4262 ;;		_strstr
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text25
  4267  0014F6                     __ptext25:
  4268                           	callstack 0
  4269  0014F6                     _strncmp:
  4270                           	callstack 27
  4271  0014F6  C003  F00A         	movff	strncmp@_l,strncmp@l
  4272  0014FA  C004  F00B         	movff	strncmp@_l+1,strncmp@l+1
  4273  0014FE  C005  F00C         	movff	strncmp@_r,strncmp@r
  4274  001502  C006  F00D         	movff	strncmp@_r+1,strncmp@r+1
  4275  001506  0607               	decf	strncmp@n^0,f,c
  4276  001508  A0D8               	btfss	status,0,c
  4277  00150A  0608               	decf	(strncmp@n+1)^0,f,c
  4278  00150C  2807               	incf	strncmp@n^0,w,c
  4279  00150E  E106               	bnz	u2311
  4280  001510  2808               	incf	(strncmp@n+1)^0,w,c
  4281  001512  A4D8               	btfss	status,2,c
  4282  001514  EF8E  F00A         	goto	u2311
  4283  001518  EF90  F00A         	goto	u2310
  4284  00151C                     u2311:
  4285  00151C  EF9D  F00A         	goto	l2588
  4286  001520                     u2310:
  4287  001520  0E00               	movlw	0
  4288  001522  6E04               	movwf	(?_strncmp+1)^0,c
  4289  001524  0E00               	movlw	0
  4290  001526  6E03               	movwf	?_strncmp^0,c
  4291  001528  EFE5  F00A         	goto	l1019
  4292  00152C                     l2586:
  4293  00152C  4A0A               	infsnz	strncmp@l^0,f,c
  4294  00152E  2A0B               	incf	(strncmp@l+1)^0,f,c
  4295  001530  4A0C               	infsnz	strncmp@r^0,f,c
  4296  001532  2A0D               	incf	(strncmp@r+1)^0,f,c
  4297  001534  0607               	decf	strncmp@n^0,f,c
  4298  001536  A0D8               	btfss	status,0,c
  4299  001538  0608               	decf	(strncmp@n+1)^0,f,c
  4300  00153A                     l2588:
  4301  00153A  C00A  FFD9         	movff	strncmp@l,fsr2l
  4302  00153E  C00B  FFDA         	movff	strncmp@l+1,fsr2h
  4303  001542  50DF               	movf	indf2,w,c
  4304  001544  B4D8               	btfsc	status,2,c
  4305  001546  EFA7  F00A         	goto	u2321
  4306  00154A  EFA9  F00A         	goto	u2320
  4307  00154E                     u2321:
  4308  00154E  EFD4  F00A         	goto	l2596
  4309  001552                     u2320:
  4310  001552  C00C  FFF6         	movff	strncmp@r,tblptrl
  4311  001556  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  4312  00155A                     	if	0	;tblptru may be non-zero
  4313  00155A                     	endif
  4314  00155A                     	if	0	;tblptru may be non-zero
  4315  00155A                     	endif
  4316  00155A  0008               	tblrd		*
  4317  00155C  50F5               	movf	tablat,w,c
  4318  00155E  0900               	iorlw	0
  4319  001560  B4D8               	btfsc	status,2,c
  4320  001562  EFB5  F00A         	goto	u2331
  4321  001566  EFB7  F00A         	goto	u2330
  4322  00156A                     u2331:
  4323  00156A  EFD4  F00A         	goto	l2596
  4324  00156E                     u2330:
  4325  00156E  5007               	movf	strncmp@n^0,w,c
  4326  001570  1008               	iorwf	(strncmp@n+1)^0,w,c
  4327  001572  B4D8               	btfsc	status,2,c
  4328  001574  EFBE  F00A         	goto	u2341
  4329  001578  EFC0  F00A         	goto	u2340
  4330  00157C                     u2341:
  4331  00157C  EFD4  F00A         	goto	l2596
  4332  001580                     u2340:
  4333  001580  C00A  FFD9         	movff	strncmp@l,fsr2l
  4334  001584  C00B  FFDA         	movff	strncmp@l+1,fsr2h
  4335  001588  50DF               	movf	indf2,w,c
  4336  00158A  6E09               	movwf	??_strncmp^0,c
  4337  00158C  C00C  FFF6         	movff	strncmp@r,tblptrl
  4338  001590  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  4339  001594                     	if	0	;tblptru may be non-zero
  4340  001594                     	endif
  4341  001594                     	if	0	;tblptru may be non-zero
  4342  001594                     	endif
  4343  001594  0008               	tblrd		*
  4344  001596  50F5               	movf	tablat,w,c
  4345  001598  1809               	xorwf	??_strncmp^0,w,c
  4346  00159A  B4D8               	btfsc	status,2,c
  4347  00159C  EFD2  F00A         	goto	u2351
  4348  0015A0  EFD4  F00A         	goto	u2350
  4349  0015A4                     u2351:
  4350  0015A4  EF96  F00A         	goto	l2586
  4351  0015A8                     u2350:
  4352  0015A8                     l2596:
  4353  0015A8  C00A  FFD9         	movff	strncmp@l,fsr2l
  4354  0015AC  C00B  FFDA         	movff	strncmp@l+1,fsr2h
  4355  0015B0  50DF               	movf	indf2,w,c
  4356  0015B2  6E09               	movwf	??_strncmp^0,c
  4357  0015B4  C00C  FFF6         	movff	strncmp@r,tblptrl
  4358  0015B8  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  4359  0015BC                     	if	0	;tblptru may be non-zero
  4360  0015BC                     	endif
  4361  0015BC                     	if	0	;tblptru may be non-zero
  4362  0015BC                     	endif
  4363  0015BC  0008               	tblrd		*
  4364  0015BE  50F5               	movf	tablat,w,c
  4365  0015C0  5C09               	subwf	??_strncmp^0,w,c
  4366  0015C2  6E03               	movwf	?_strncmp^0,c
  4367  0015C4  6A04               	clrf	(?_strncmp+1)^0,c
  4368  0015C6  A0D8               	btfss	status,0,c
  4369  0015C8  0604               	decf	(?_strncmp+1)^0,f,c
  4370  0015CA                     l1019:
  4371  0015CA  0012               	return		;funcret
  4372  0015CC                     __end_of_strncmp:
  4373                           	callstack 0
  4374                           
  4375 ;; *************** function _strlen *****************
  4376 ;; Defined at:
  4377 ;;		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/strlen.c"
  4378 ;; Parameters:    Size  Location     Type
  4379 ;;  s               2    2[COMRAM] PTR const unsigned char 
  4380 ;;		 -> dbuf(32), STR_5(2), data_out(50), STR_2(4), 
  4381 ;;		 -> STR_1(8), 
  4382 ;; Auto vars:     Size  Location     Type
  4383 ;;  a               2    4[COMRAM] PTR const unsigned char 
  4384 ;;		 -> dbuf(32), STR_5(2), data_out(50), STR_2(4), 
  4385 ;;		 -> STR_1(8), 
  4386 ;; Return value:  Size  Location     Type
  4387 ;;                  2    2[COMRAM] unsigned int 
  4388 ;; Registers used:
  4389 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  4390 ;; Tracked objects:
  4391 ;;		On entry : 0/0
  4392 ;;		On exit  : 0/0
  4393 ;;		Unchanged: 0/0
  4394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4395 ;;      Params:         2       0       0       0       0       0       0       0       0
  4396 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4397 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4398 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4399 ;;Total ram usage:        4 bytes
  4400 ;; Hardware stack levels used:    1
  4401 ;; Hardware stack levels required when called:    1
  4402 ;; This function calls:
  4403 ;;		Nothing
  4404 ;; This function is called by:
  4405 ;;		_USART_SendString
  4406 ;;		_pad
  4407 ;;		_strstr
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411                           	psect	text26
  4412  001ABE                     __ptext26:
  4413                           	callstack 0
  4414  001ABE                     _strlen:
  4415                           	callstack 27
  4416  001ABE  C003  F005         	movff	strlen@s,strlen@a
  4417  001AC2  C004  F006         	movff	strlen@s+1,strlen@a+1
  4418  001AC6  EF67  F00D         	goto	l2356
  4419  001ACA                     l2354:
  4420  001ACA  4A03               	infsnz	strlen@s^0,f,c
  4421  001ACC  2A04               	incf	(strlen@s+1)^0,f,c
  4422  001ACE                     l2356:
  4423  001ACE  C003  FFF6         	movff	strlen@s,tblptrl
  4424  001AD2  C004  FFF7         	movff	strlen@s+1,tblptrh
  4425  001AD6  6AF8               	clrf	tblptru,c
  4426  001AD8  0E07               	movlw	(high __ramtop+-1)
  4427  001ADA  64F7               	cpfsgt	tblptrh,c
  4428  001ADC  D003               	bra	u1917
  4429  001ADE  0008               	tblrd		*
  4430  001AE0  50F5               	movf	tablat,w,c
  4431  001AE2  D005               	bra	u1910
  4432  001AE4                     u1917:
  4433  001AE4  CFF6 FFE1          	movff	tblptrl,fsr1l
  4434  001AE8  CFF7 FFE2          	movff	tblptrh,fsr1h
  4435  001AEC  50E7               	movf	indf1,w,c
  4436  001AEE                     u1910:
  4437  001AEE  0900               	iorlw	0
  4438  001AF0  A4D8               	btfss	status,2,c
  4439  001AF2  EF7D  F00D         	goto	u1921
  4440  001AF6  EF7F  F00D         	goto	u1920
  4441  001AFA                     u1921:
  4442  001AFA  EF65  F00D         	goto	l2354
  4443  001AFE                     u1920:
  4444  001AFE  5005               	movf	strlen@a^0,w,c
  4445  001B00  5C03               	subwf	strlen@s^0,w,c
  4446  001B02  6E03               	movwf	?_strlen^0,c
  4447  001B04  5006               	movf	(strlen@a+1)^0,w,c
  4448  001B06  5804               	subwfb	(strlen@s+1)^0,w,c
  4449  001B08  6E04               	movwf	(?_strlen+1)^0,c
  4450  001B0A  0012               	return		;funcret
  4451  001B0C                     __end_of_strlen:
  4452                           	callstack 0
  4453                           
  4454 ;; *************** function _strchr *****************
  4455 ;; Defined at:
  4456 ;;		line 3 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/strchr.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;  s               2    2[COMRAM] PTR const unsigned char 
  4459 ;;		 -> NULL(0), data_in(512), 
  4460 ;;  c               2    4[COMRAM] int 
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;		None
  4463 ;; Return value:  Size  Location     Type
  4464 ;;                  2    2[COMRAM] PTR unsigned char 
  4465 ;; Registers used:
  4466 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4467 ;; Tracked objects:
  4468 ;;		On entry : 0/0
  4469 ;;		On exit  : 0/0
  4470 ;;		Unchanged: 0/0
  4471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4472 ;;      Params:         4       0       0       0       0       0       0       0       0
  4473 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4474 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4475 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4476 ;;Total ram usage:        5 bytes
  4477 ;; Hardware stack levels used:    1
  4478 ;; Hardware stack levels required when called:    1
  4479 ;; This function calls:
  4480 ;;		Nothing
  4481 ;; This function is called by:
  4482 ;;		_strstr
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486                           	psect	text27
  4487  001B0C                     __ptext27:
  4488                           	callstack 0
  4489  001B0C                     _strchr:
  4490                           	callstack 27
  4491  001B0C                     l1012:
  4492  001B0C  C003  FFD9         	movff	strchr@s,fsr2l
  4493  001B10  C004  FFDA         	movff	strchr@s+1,fsr2h
  4494  001B14  5005               	movf	strchr@c^0,w,c
  4495  001B16  18DE               	xorwf	postinc2,w,c
  4496  001B18  A4D8               	btfss	status,2,c
  4497  001B1A  EF91  F00D         	goto	u2361
  4498  001B1E  EF93  F00D         	goto	u2360
  4499  001B22                     u2361:
  4500  001B22  EF99  F00D         	goto	l2606
  4501  001B26                     u2360:
  4502  001B26  C003  F003         	movff	strchr@s,?_strchr
  4503  001B2A  C004  F004         	movff	strchr@s+1,?_strchr+1
  4504  001B2E  EFAB  F00D         	goto	l1014
  4505  001B32                     l2606:
  4506  001B32  C003  FFD9         	movff	strchr@s,fsr2l
  4507  001B36  C004  FFDA         	movff	strchr@s+1,fsr2h
  4508  001B3A  4A03               	infsnz	strchr@s^0,f,c
  4509  001B3C  2A04               	incf	(strchr@s+1)^0,f,c
  4510  001B3E  50DF               	movf	indf2,w,c
  4511  001B40  A4D8               	btfss	status,2,c
  4512  001B42  EFA5  F00D         	goto	u2371
  4513  001B46  EFA7  F00D         	goto	u2370
  4514  001B4A                     u2371:
  4515  001B4A  EF86  F00D         	goto	l1012
  4516  001B4E                     u2370:
  4517  001B4E  0E00               	movlw	0
  4518  001B50  6E03               	movwf	?_strchr^0,c
  4519  001B52  0E00               	movlw	0
  4520  001B54  6E04               	movwf	(?_strchr+1)^0,c
  4521  001B56                     l1014:
  4522  001B56  0012               	return		;funcret
  4523  001B58                     __end_of_strchr:
  4524                           	callstack 0
  4525                           
  4526 ;; *************** function _USART_Init *****************
  4527 ;; Defined at:
  4528 ;;		line 242 in file "main.c"
  4529 ;; Parameters:    Size  Location     Type
  4530 ;;		None
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;		None
  4533 ;; Return value:  Size  Location     Type
  4534 ;;                  1    wreg      void 
  4535 ;; Registers used:
  4536 ;;		wreg, status,2
  4537 ;; Tracked objects:
  4538 ;;		On entry : 0/0
  4539 ;;		On exit  : 0/0
  4540 ;;		Unchanged: 0/0
  4541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4542 ;;      Params:         0       0       0       0       0       0       0       0       0
  4543 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4544 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4545 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4546 ;;Total ram usage:        0 bytes
  4547 ;; Hardware stack levels used:    1
  4548 ;; Hardware stack levels required when called:    1
  4549 ;; This function calls:
  4550 ;;		Nothing
  4551 ;; This function is called by:
  4552 ;;		_main
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           
  4556                           	psect	text28
  4557  001D82                     __ptext28:
  4558                           	callstack 0
  4559  001D82                     _USART_Init:
  4560                           	callstack 29
  4561  001D82                     
  4562                           ;main.c: 243:     TRISC6=1;
  4563  001D82  8C94               	bsf	3988,6,c	;volatile
  4564                           
  4565                           ;main.c: 244:     TRISC7=1;
  4566  001D84  8E94               	bsf	3988,7,c	;volatile
  4567  001D86                     
  4568                           ;main.c: 245:     SPBRG = 25;
  4569  001D86  0E19               	movlw	25
  4570  001D88  6EAF               	movwf	175,c	;volatile
  4571  001D8A                     
  4572                           ;main.c: 246:     TXSTAbits.CSRC = 1;
  4573  001D8A  8EAC               	bsf	172,7,c	;volatile
  4574  001D8C                     
  4575                           ;main.c: 247:     TXSTAbits.TXEN = 1;
  4576  001D8C  8AAC               	bsf	172,5,c	;volatile
  4577  001D8E                     
  4578                           ;main.c: 248:     RCSTAbits.CREN = 1;
  4579  001D8E  88AB               	bsf	171,4,c	;volatile
  4580  001D90                     
  4581                           ;main.c: 249:     RCSTAbits.SPEN = 1;
  4582  001D90  8EAB               	bsf	171,7,c	;volatile
  4583  001D92                     
  4584                           ;main.c: 251:     INTCONbits.GIE = 1;
  4585  001D92  8EF2               	bsf	242,7,c	;volatile
  4586  001D94                     
  4587                           ;main.c: 252:     INTCONbits.PEIE = 1;
  4588  001D94  8CF2               	bsf	242,6,c	;volatile
  4589  001D96                     
  4590                           ;main.c: 253:     PIE1bits.RCIE = 1;
  4591  001D96  8A9D               	bsf	157,5,c	;volatile
  4592  001D98                     
  4593                           ;main.c: 254:     PIE1bits.TXIE = 0;
  4594  001D98  989D               	bcf	157,4,c	;volatile
  4595  001D9A  0012               	return		;funcret
  4596  001D9C                     __end_of_USART_Init:
  4597                           	callstack 0
  4598                           
  4599 ;; *************** function _isr *****************
  4600 ;; Defined at:
  4601 ;;		line 257 in file "main.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;		None
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;		None
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  1    wreg      void 
  4608 ;; Registers used:
  4609 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4615 ;;      Params:         0       0       0       0       0       0       0       0       0
  4616 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4617 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4618 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4619 ;;Total ram usage:        2 bytes
  4620 ;; Hardware stack levels used:    1
  4621 ;; This function calls:
  4622 ;;		Nothing
  4623 ;; This function is called by:
  4624 ;;		Interrupt level 2
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628                           	psect	intcode
  4629  000008                     __pintcode:
  4630                           	callstack 0
  4631  000008                     _isr:
  4632                           	callstack 21
  4633                           
  4634                           ;incstack = 0
  4635  000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4636  00000A  EDAC  F00D         	call	int_func,f	;refresh shadow registers
  4637                           
  4638                           	psect	intcode_body
  4639  001B58                     __pintcode_body:
  4640                           	callstack 21
  4641  001B58                     int_func:
  4642                           	callstack 21
  4643  001B58  0006               	pop		; remove dummy address from shadow register refresh
  4644  001B5A  CFD9 F001          	movff	fsr2l,??_isr
  4645  001B5E  CFDA F002          	movff	fsr2h,??_isr+1
  4646  001B62                     
  4647                           ;main.c: 258:     if (RCIF == 1) {
  4648  001B62  AA9E               	btfss	3998,5,c	;volatile
  4649  001B64  EFB6  F00D         	goto	i2u185_41
  4650  001B68  EFB8  F00D         	goto	i2u185_40
  4651  001B6C                     i2u185_41:
  4652  001B6C  EFCC  F00D         	goto	i2l137
  4653  001B70                     i2u185_40:
  4654  001B70                     
  4655                           ;main.c: 259:         if (RCSTAbits.OERR) {
  4656  001B70  A2AB               	btfss	171,1,c	;volatile
  4657  001B72  EFBD  F00D         	goto	i2u186_41
  4658  001B76  EFBF  F00D         	goto	i2u186_40
  4659  001B7A                     i2u186_41:
  4660  001B7A  EFC2  F00D         	goto	i2l2284
  4661  001B7E                     i2u186_40:
  4662  001B7E                     
  4663                           ;main.c: 260:             CREN = 0;
  4664  001B7E  98AB               	bcf	4011,4,c	;volatile
  4665                           
  4666                           ;main.c: 261:             __nop();
  4667  001B80  F000               	nop	
  4668                           
  4669                           ;main.c: 262:             CREN=1;
  4670  001B82  88AB               	bsf	4011,4,c	;volatile
  4671  001B84                     i2l2284:
  4672                           
  4673                           ;main.c: 265:         data_in[position] = RCREG;
  4674  001B84  0E50               	movlw	low _data_in
  4675  001B86  0100               	movlb	0	; () banked
  4676  001B88  2566               	addwf	_position& (0+255),w,b
  4677  001B8A  6ED9               	movwf	fsr2l,c
  4678  001B8C  6ADA               	clrf	fsr2h,c
  4679  001B8E  0E01               	movlw	high _data_in
  4680  001B90  22DA               	addwfc	fsr2h,f,c
  4681  001B92  CFAE FFDF          	movff	4014,indf2	;volatile
  4682  001B96                     
  4683                           ; BSR set to: 0
  4684                           ;main.c: 266:         position++;
  4685  001B96  2B66               	incf	_position& (0+255),f,b
  4686  001B98                     i2l137:
  4687  001B98  C002  FFDA         	movff	??_isr+1,fsr2h
  4688  001B9C  C001  FFD9         	movff	??_isr,fsr2l
  4689  001BA0  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4690  001BA2  0011               	retfie		f
  4691  001BA4                     __end_of_isr:
  4692                           	callstack 0
  4693                           
  4694                           	psect	rparam
  4695  0000                     
  4696                           	psect	temp
  4697  00005D                     btemp:
  4698                           	callstack 0
  4699  00005D                     	ds	1
  4700  0000                     int$flags	set	btemp
  4701  0000                     wtemp8	set	btemp+1
  4702  0000                     ttemp5	set	btemp+1
  4703  0000                     ttemp6	set	btemp+4
  4704  0000                     ttemp7	set	btemp+8
  4705                           
  4706                           	psect	idloc
  4707                           
  4708                           ;Config register IDLOC0 @ 0x200000
  4709                           ;	unspecified, using default values
  4710  200000                     	org	2097152
  4711  200000  FF                 	db	255
  4712                           
  4713                           ;Config register IDLOC1 @ 0x200001
  4714                           ;	unspecified, using default values
  4715  200001                     	org	2097153
  4716  200001  FF                 	db	255
  4717                           
  4718                           ;Config register IDLOC2 @ 0x200002
  4719                           ;	unspecified, using default values
  4720  200002                     	org	2097154
  4721  200002  FF                 	db	255
  4722                           
  4723                           ;Config register IDLOC3 @ 0x200003
  4724                           ;	unspecified, using default values
  4725  200003                     	org	2097155
  4726  200003  FF                 	db	255
  4727                           
  4728                           ;Config register IDLOC4 @ 0x200004
  4729                           ;	unspecified, using default values
  4730  200004                     	org	2097156
  4731  200004  FF                 	db	255
  4732                           
  4733                           ;Config register IDLOC5 @ 0x200005
  4734                           ;	unspecified, using default values
  4735  200005                     	org	2097157
  4736  200005  FF                 	db	255
  4737                           
  4738                           ;Config register IDLOC6 @ 0x200006
  4739                           ;	unspecified, using default values
  4740  200006                     	org	2097158
  4741  200006  FF                 	db	255
  4742                           
  4743                           ;Config register IDLOC7 @ 0x200007
  4744                           ;	unspecified, using default values
  4745  200007                     	org	2097159
  4746  200007  FF                 	db	255
  4747                           
  4748                           	psect	config
  4749                           
  4750                           ;Config register CONFIG1L @ 0x300000
  4751                           ;	PLL Prescaler Selection bits
  4752                           ;	PLLDIV = 4, Divide by 4 (16 MHz oscillator input)
  4753                           ;	System Clock Postscaler Selection bits
  4754                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  4755                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4756                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  4757  300000                     	org	3145728
  4758  300000  03                 	db	3
  4759                           
  4760                           ;Config register CONFIG1H @ 0x300001
  4761                           ;	Oscillator Selection bits
  4762                           ;	FOSC = HS, HS oscillator (HS)
  4763                           ;	Fail-Safe Clock Monitor Enable bit
  4764                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4765                           ;	Internal/External Oscillator Switchover bit
  4766                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4767  300001                     	org	3145729
  4768  300001  0C                 	db	12
  4769                           
  4770                           ;Config register CONFIG2L @ 0x300002
  4771                           ;	Power-up Timer Enable bit
  4772                           ;	PWRT = OFF, PWRT disabled
  4773                           ;	Brown-out Reset Enable bits
  4774                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4775                           ;	Brown-out Reset Voltage bits
  4776                           ;	BORV = 3, Minimum setting
  4777                           ;	USB Voltage Regulator Enable bit
  4778                           ;	VREGEN = OFF, USB voltage regulator disabled
  4779  300002                     	org	3145730
  4780  300002  1F                 	db	31
  4781                           
  4782                           ;Config register CONFIG2H @ 0x300003
  4783                           ;	Watchdog Timer Enable bit
  4784                           ;	WDT = ON, WDT enabled
  4785                           ;	Watchdog Timer Postscale Select bits
  4786                           ;	WDTPS = 32768, 1:32768
  4787  300003                     	org	3145731
  4788  300003  1F                 	db	31
  4789                           
  4790                           ; Padding undefined space
  4791  300004                     	org	3145732
  4792  300004  FF                 	db	255
  4793                           
  4794                           ;Config register CONFIG3H @ 0x300005
  4795                           ;	CCP2 MUX bit
  4796                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  4797                           ;	PORTB A/D Enable bit
  4798                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  4799                           ;	Low-Power Timer 1 Oscillator Enable bit
  4800                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4801                           ;	MCLR Pin Enable bit
  4802                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4803  300005                     	org	3145733
  4804  300005  83                 	db	131
  4805                           
  4806                           ;Config register CONFIG4L @ 0x300006
  4807                           ;	Stack Full/Underflow Reset Enable bit
  4808                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4809                           ;	Single-Supply ICSP Enable bit
  4810                           ;	LVP = ON, Single-Supply ICSP enabled
  4811                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4812                           ;	ICPRT = OFF, ICPORT disabled
  4813                           ;	Extended Instruction Set Enable bit
  4814                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4815                           ;	Background Debugger Enable bit
  4816                           ;	DEBUG = 0x1, unprogrammed default
  4817  300006                     	org	3145734
  4818  300006  85                 	db	133
  4819                           
  4820                           ; Padding undefined space
  4821  300007                     	org	3145735
  4822  300007  FF                 	db	255
  4823                           
  4824                           ;Config register CONFIG5L @ 0x300008
  4825                           ;	Code Protection bit
  4826                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  4827                           ;	Code Protection bit
  4828                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  4829                           ;	Code Protection bit
  4830                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  4831                           ;	Code Protection bit
  4832                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  4833  300008                     	org	3145736
  4834  300008  0F                 	db	15
  4835                           
  4836                           ;Config register CONFIG5H @ 0x300009
  4837                           ;	Boot Block Code Protection bit
  4838                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  4839                           ;	Data EEPROM Code Protection bit
  4840                           ;	CPD = OFF, Data EEPROM is not code-protected
  4841  300009                     	org	3145737
  4842  300009  C0                 	db	192
  4843                           
  4844                           ;Config register CONFIG6L @ 0x30000A
  4845                           ;	Write Protection bit
  4846                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  4847                           ;	Write Protection bit
  4848                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  4849                           ;	Write Protection bit
  4850                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  4851                           ;	Write Protection bit
  4852                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  4853  30000A                     	org	3145738
  4854  30000A  0F                 	db	15
  4855                           
  4856                           ;Config register CONFIG6H @ 0x30000B
  4857                           ;	Configuration Register Write Protection bit
  4858                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4859                           ;	Boot Block Write Protection bit
  4860                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  4861                           ;	Data EEPROM Write Protection bit
  4862                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4863  30000B                     	org	3145739
  4864  30000B  E0                 	db	224
  4865                           
  4866                           ;Config register CONFIG7L @ 0x30000C
  4867                           ;	Table Read Protection bit
  4868                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4869                           ;	Table Read Protection bit
  4870                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4871                           ;	Table Read Protection bit
  4872                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4873                           ;	Table Read Protection bit
  4874                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4875  30000C                     	org	3145740
  4876  30000C  0F                 	db	15
  4877                           
  4878                           ;Config register CONFIG7H @ 0x30000D
  4879                           ;	Boot Block Table Read Protection bit
  4880                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  4881  30000D                     	org	3145741
  4882  30000D  40                 	db	64
  4883                           tosu	equ	0xFFF
  4884                           tosh	equ	0xFFE
  4885                           tosl	equ	0xFFD
  4886                           stkptr	equ	0xFFC
  4887                           pclatu	equ	0xFFB
  4888                           pclath	equ	0xFFA
  4889                           pcl	equ	0xFF9
  4890                           tblptru	equ	0xFF8
  4891                           tblptrh	equ	0xFF7
  4892                           tblptrl	equ	0xFF6
  4893                           tablat	equ	0xFF5
  4894                           prodh	equ	0xFF4
  4895                           prodl	equ	0xFF3
  4896                           indf0	equ	0xFEF
  4897                           postinc0	equ	0xFEE
  4898                           postdec0	equ	0xFED
  4899                           preinc0	equ	0xFEC
  4900                           plusw0	equ	0xFEB
  4901                           fsr0h	equ	0xFEA
  4902                           fsr0l	equ	0xFE9
  4903                           wreg	equ	0xFE8
  4904                           indf1	equ	0xFE7
  4905                           postinc1	equ	0xFE6
  4906                           postdec1	equ	0xFE5
  4907                           preinc1	equ	0xFE4
  4908                           plusw1	equ	0xFE3
  4909                           fsr1h	equ	0xFE2
  4910                           fsr1l	equ	0xFE1
  4911                           bsr	equ	0xFE0
  4912                           indf2	equ	0xFDF
  4913                           postinc2	equ	0xFDE
  4914                           postdec2	equ	0xFDD
  4915                           preinc2	equ	0xFDC
  4916                           plusw2	equ	0xFDB
  4917                           fsr2h	equ	0xFDA
  4918                           fsr2l	equ	0xFD9
  4919                           status	equ	0xFD8

Data Sizes:
    Strings     37
    Constant    0
    Data        4
    BSS         683
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      92
    BANK0           160     32     125
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           244      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_5(CODE[2]), STR_2(CODE[4]), STR_1(CODE[8]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_5(CODE[2]), STR_2(CODE[4]), STR_1(CODE[8]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), data_in(BIGRAM_1[512]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), data_in(BIGRAM_1[512]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), data_in(BIGRAM_1[512]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), data_in(BIGRAM_1[512]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), data_in(BIGRAM_1[512]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_5(CODE[2]), STR_2(CODE[4]), STR_1(CODE[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> dbuf(BANK0[32]), STR_5(CODE[2]), data_out(BANK0[50]), STR_2(CODE[4]), 
		 -> STR_1(CODE[8]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 50
		 -> dbuf(BANK0[32]), STR_5(CODE[2]), data_out(BANK0[50]), STR_2(CODE[4]), 
		 -> STR_1(CODE[8]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> data_out(BANK0[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[7]), STR_3(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[7]), STR_3(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[7]), STR_3(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> data_out(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S957_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> data_out(BANK0[50]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> data_out(BANK0[50]), 

    memset@dest	PTR void  size(2) Largest target is 512
		 -> data_out(BANK0[50]), dht_raw_data(BANK1[80]), data_in(BIGRAM_1[512]), 

    memset@s	PTR unsigned char  size(2) Largest target is 512
		 -> data_out(BANK0[50]), dht_raw_data(BANK1[80]), data_in(BIGRAM_1[512]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), data_in(BIGRAM_1[512]), 

    USART_SendString@data	PTR unsigned char  size(2) Largest target is 50
		 -> data_out(BANK0[50]), 

    is_command@command	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 

    is_command@ptr	PTR unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), data_in(BIGRAM_1[512]), 

    get_action@str_value	PTR unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), data_in(BIGRAM_1[512]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), data_in(BIGRAM_1[512]), 

    data_received@ptr	PTR unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), data_in(BIGRAM_1[512]), 

    sp__memset	PTR void  size(2) Largest target is 512
		 -> data_out(BANK0[50]), dht_raw_data(BANK1[80]), data_in(BIGRAM_1[512]), 

    END_CMD	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), 

    LED0_CMD	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _get_action->_atoi
    _is_command->_strstr
    _atoi->_isspace
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _USART_SendString->_strlen
    _data_received->_strstr
    _strstr->_strncmp

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_dht_read
    _dht_read->_sprintf

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   25549
                                             89 COMRAM     1     1      0
                                             30 BANK0      2     2      0
                         _USART_Init
                      _data_received
                           _dht_read
                         _get_action
                             _memset
 ---------------------------------------------------------------------------------
 (1) _get_action                                           4     4      0    8425
                                             24 COMRAM     4     4      0
                               _atoi
                         _is_command
                             _memset
                             _strstr
 ---------------------------------------------------------------------------------
 (2) _is_command                                           4     2      2    2310
                                             19 COMRAM     4     2      2
                             _strstr
 ---------------------------------------------------------------------------------
 (2) _atoi                                                15    13      2    1525
                                              9 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (3) _isspace                                              7     5      2     259
                                              2 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              6     4      2     191
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     512
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _dht_read                                            14    14      0   12534
                                             16 BANK0     14    14      0
                   _USART_SendString
                       _dht_read_bit
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6    8777
                                              0 BANK0     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    8111
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    7638
                                             65 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5863
                                             29 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3597
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _memset                                              12     6      6    2367
                                              2 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _dht_read_bit                                         2     0      2       0
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _USART_SendString                                     5     3      2     741
                                              6 COMRAM     5     3      2
                     _USART_SendChar
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _USART_SendChar                                       1     1      0      31
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _data_received                                        2     2      0    2189
                                             19 COMRAM     2     2      0
                             _strstr
 ---------------------------------------------------------------------------------
 (2) _strstr                                               6     2      4    2155
                                             13 COMRAM     6     2      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                             11     5      6     595
                                              2 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     400
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _strchr                                               5     1      4     304
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _isr                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USART_Init
   _data_received
     _strstr
       _strchr
       _strlen
       _strncmp
   _dht_read
     _USART_SendString
       _USART_SendChar
       _strlen
     _dht_read_bit
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
   _get_action
     _atoi
       ___wmul
       _isdigit
       _isspace
     _is_command
       _strstr
         _strchr
         _strlen
         _strncmp
     _memset
     _strstr
       _strchr
       _strlen
       _strncmp
   _memset

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0     200      21       50.0%
BIGRAM             3F3      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK3            F4      0       0      12        0.0%
BANK3               F4      0       0      10        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     20      7D       5       78.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5C       1       97.9%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     129      11        0.0%
DATA                 0      0     329       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Jan 25 03:23:20 2021

           ??_dht_read_bit 0005     __end_of_USART_SendChar 1DB2                         l80 1882  
                       l82 1888                         l92 0B56                         l78 18C2  
                       l95 0B64                         l89 0B48        ___wmul@multiplicand 0005  
                      l111 1BC6                        l104 0D54                        l130 1D9A  
                      l114 1BE8                        l107 1BA4                        l123 1958  
                      l140 1D9E                        l119 1D5A                        l143 1DB0  
                      l127 1CEA                        l152 1D80                        l149 1C2E  
                      l266 121A                        l279 14F4                        l912 16DA  
                      l915 171C                        l923 08C8                        l851 108A  
                      l917 1756                        l925 08D0                        l950 0F08  
                      l854 1092                        l943 0B04                        l872 1390  
                      l961 1CAA                        l857 1D22                        l865 1A6A  
                      l964 1CB2                        l956 19B2                        l957 19BA  
                      l885 1ABC                        l976 1694                        l984 1C72  
                      l993 1B0A                        l987 1DB6                        _abs 1C74  
                      _pad 1696                        _isr 0008                        prod 000FF3  
                      wreg 000FE8                       l1012 1B0C                       l1014 1B56  
                     l1006 1816                       l1019 15CA                       ?_abs 0015  
                     l2400 11B0                       l2410 11FA                       l2402 11B2  
                     l2404 11C4                       l2420 13C4                       l2340 15DE  
                     l2500 090E                       l2406 11CA                       l2430 141C  
                     l2422 13C8                       l2414 1392                       l2342 15F0  
                     l2502 0914                       l2510 0A06                       l2600 1B0C  
                     l2352 1ABE                       l2408 11DA                       l2440 149E  
                     l2432 1430                       l2424 13D6                       l2416 1396  
                     l2344 15FA                       l2512 0A20                       l2520 0A80  
                     l2504 0996                       l2602 1B26                       l2354 1ACA  
                     l2370 1094                       l2434 143E                       l2442 14A4  
                     l2426 13F6                       l2418 13A4                       l2346 1618  
                     l2338 15CC                       l2362 1C30                       l2450 1696  
                     l2530 0AC4                       l2522 0A92                       l2514 0A3E  
                     l2506 099C                       l2356 1ACE                       l2612 1758  
                     l2700 1BB2                       l2380 10D8                       l2372 1098  
                     l2444 14B4                       l2436 146C                       l2428 1414  
                     l2348 164E                       l2364 1C3C                       l2460 16E6  
                     l2452 16A4                       l2532 0ACC                       l2524 0AA0  
                     l2516 0A58                       l2508 09A2                       l2540 0D7A  
                     l2606 1B32                       l2358 1AFE                       l2622 17BC  
                     l2614 176A                       l2702 1BB8                       l2390 112E  
                     l2382 10F8                       l2374 10A6                       l2446 14D4  
                     l2438 148C                       l2366 1C4E                       l2462 16FA  
                     l2454 16B8                       l2526 0AA6                       l2534 0ADC  
                     l2518 0A72                       l2550 0DE6                       l2542 0D88  
                     l2800 1D90                       l2608 1B4E                       l2616 1782  
                     l2624 17E4                       l2632 1D9E                       l2712 1BE0  
                     l2392 1142                       l2384 10FC                       l2376 10C6  
                     l2472 1C74                       l2368 1C52                       l2464 16FE  
                     l2456 16C6                       l2528 0AB8                       l2480 0870  
                     l2560 0E98                       l2552 0E2E                       l2544 0D9A  
                     l2720 1A86                       l2802 1D92                       l2626 17F6  
                     l2618 17B0                       l2634 1DAC                       l2730 1BF2  
                     l2706 1BD4                       l2394 1150                       l2386 1108  
                     l2378 10CA                       l2474 1C8E                       l2466 172A  
                     l2458 16D2                       l2490 08D8                       l2482 0890  
                     l2562 0EAC                       l2546 0D9E                       l2538 0D56  
                     l2722 1A8E                       l2810 0B06                       l2650 1A64  
                     l2642 1A1A                       l2804 1D94                       l2580 14F6  
                     l2628 180E                       l2732 1C04                       l2396 1162  
                     l2388 1126                       l2468 173E                       l2492 08EA  
                     l2484 08A0                       l2476 0828                       l2556 0E66  
                     l2548 0DC2                       l2572 0ED2                       l2660 1962  
                     l2724 1AAA                       l2716 1A6C                       l2820 0B3C  
                     l2812 0B22                       l2636 1D5C                       l2644 1A1E  
                     l2740 1CE2                       l2900 191A                       l2806 1D96  
                     l2590 1552                       l2582 1520                       l2734 1C06  
                     l2670 123A                       l2398 1190                       l2494 08F8  
                     l2486 08A2                       l2478 0848                       l2574 0EF6  
                     l2558 0E8A                       l2566 0EB8                       l2662 1970  
                     l2718 1A7E                       l2830 0B78                       l2822 0B44  
                     l2814 0B26                       l2638 1D78                       l2654 1CEC  
                     l2646 1A32                       l2750 0F1E                       l2902 1936  
                     l2808 1D98                       l2592 156E                       l2728 1BEA  
                     l2672 1246                       l2496 08FE                       l2488 08BC  
                     l2568 0EC6                       l2664 1996                       l2832 0B96  
                     l2824 0B72                       l2816 0B28                       l2648 1A60  
                     l2760 0F78                       l2752 0F22                       l2744 1CE8  
                     l2736 1CB4                       l2904 193C                       l2920 1842  
                     l2912 1818                       l2594 1580                       l2586 152C  
                     l2690 1368                       l2682 12EE                       l2666 121C  
                     l2498 0906                       l2658 195A                       l2850 0C24  
                     l2842 0BD0                       l2834 0B98                       l2818 0B3A  
                     l2770 0FA4                       l2754 0F26                       l2738 1CD0  
                     l2922 1846                       l2914 181C                       l2596 15A8  
                     l2588 153A                       l2692 1374                       l2684 131A  
                     l2676 127C                       l2860 0C54                       l2852 0C28  
                     l2844 0BEA                       l2836 0BA8                       l2780 104A  
                     l2772 0FD6                       l2764 0F7E                       l2756 0F40  
                     l2748 0F0A                       l2908 1956                       l2932 188E  
                     l2924 1860                       l2916 1838                       l2790 1D82  
                     l2694 137A                       l2678 12D4                       l2870 0CAC  
                     l2862 0C6E                       l2854 0C44                       l2846 0C10  
                     l2782 105C                       l2766 0F94                       l2758 0F74  
                     l2926 1864                       l2918 183E                       ?_pad 0013  
                     l2792 1D86                       l2696 137E                       l2688 1334  
                     l2880 0D48                       l2872 0CC8                       l2864 0C94  
                     l2848 0C1E                       l2784 106E                       l2776 100E  
                     l2768 0F9C                       l2928 1878                       l2794 1D8A  
                     l2890 1D58                       l2882 1D24                       l2698 1BA4  
                     l2874 0CE4                       l2866 0CA2                       l2796 1D8C  
                     l2884 1D40                       l2876 0D02                       l2868 0CA8  
                     l2798 1D8E                       l2886 1D52                       l2878 0D2A  
                     l2894 18CA                       l2990 18A4                       l2992 0FC0  
                     l2896 18E6                       l2898 1906                       ?_isr 0001  
                     STR_1 0811                       STR_2 0820                       STR_3 0801  
                     STR_4 0819                       STR_5 0824                       _CREN 007D5C  
                     u2000 11DA                       u2001 11D6                       u2010 13A4  
                     u2011 13A0                       u2020 13D6                       u2100 172A  
                     u2021 13D2                       u2101 1726                       u2030 1414  
                     u2110 1C8E                       u2031 1410                       u2111 1C8A  
                     u2040 143E                       u2200 0A3E                       u2120 0858  
                     u2041 143A                       u2201 0A3A                       u2121 0852  
                     u2050 146C                       u2210 0A58                       u2130 085A  
                     u2051 1468                       u2211 0A54                       u2060 14B4  
                     u2220 0A72                       u2140 0870                       u2300 0E8A  
                     u2061 14B0                       u2221 0A6E                       u2141 086C  
                     u2301 0E86                       u2310 1520                       u2070 16A4  
                     u2230 0A80                       u2150 08A0                       u2311 151C  
                     u2071 16A0                       u2231 0A7C                       u2151 089C  
                     u2320 1552                       u2400 17F6                       u2080 16C6  
                     u2240 0A92                       u2160 08BC                       _LATD 000F8C  
                     u2321 154E                       u2401 17F2                       u2081 16C2  
                     u2241 0A8E                       u2161 08B8                       u2330 156E  
                     u2410 180E                       u2090 171C                       u2250 0AA0  
                     u2170 08EA                       u2331 156A                       u2411 180A  
                     u2091 1718                       u2251 0A9C                       u2171 08E6  
                     u2340 1580                       u2420 1DAC                       u2500 12EA  
                     u2260 0AB8                       u2180 08F8                       u2341 157C  
                     u2421 1DA8                       u2501 12E6                       u2261 0AB4  
                     u2181 08F4                       u2350 15A8                       u2510 1330  
                     u2190 0A20                       u2270 0D7A                       u2430 1A32  
                     u2351 15A4                       u2511 132C                       u2191 0A1C  
                     u2271 0D76                       u2431 1A2E                       u2360 1B26  
                     u2520 1390                       u2280 0DC2                       u2440 1A60  
                     u2600 0F90                       u2361 1B22                       u2521 138C  
                     u2281 0DBE                       u2441 1A5C                       u2601 0F8C  
                     u2370 1B4E                       u2530 1BB2                       u2290 0DE6  
                     u2450 1D1C                       u2610 1044                       u2371 1B4A  
                     u2531 1BAE                       u2291 0DE2                       u2451 1D16  
                     u2611 103E                       u2380 176A                       u2540 1BC6  
                     u1900 164E                       u2700 0C44                       u2460 1D1E  
                     u2620 1046                       u2381 1766                       u2541 1BC2  
                     u1901 164A                       u2701 0C40                       u1910 1AEE  
                     u2390 17B0                       u2550 1BD4                       u2470 19B2  
                     u2630 105C                       u2391 17AC                       u2551 1BD0  
                     u2471 19AE                       u2631 1058                       u1920 1AFE  
                     u2560 1C2E                       u2480 1236                       u2720 0CC8  
                     u2640 106E                       u1921 1AFA                       u2561 1C2A  
                     u2481 1232                       u2721 0CC4                       u2641 106A  
                     u2730 1D52                       u2490 1278                       u1930 1C72  
                     u2714 0C86                       u2650 0B56                       u2570 1CE2  
                     u2731 1D4E                       u2491 1274                       u1931 1C6E  
                     u2715 0C80                       u2651 0B52                       u2571 1CDE  
                     u1940 10A6                       u2660 0B64                       u2580 0F40  
                     u2740 18E6                       u1917 1AE4                       u1941 10A2  
                     u2661 0B60                       u2581 0F3C                       u2741 18E2  
                     u1950 10D8                       u1870 15DE                       u2670 0B72  
                     u2590 0F74                       u2750 1950                       u1951 10D4  
                     u1871 15DA                       u2671 0B6E                       u2807 0B3E  
                     u2591 0F70                       u2751 194A                       u1880 15F0  
                     u2680 0BA8                       u2760 1952                       u2817 1BB4  
                     u1961 1102                       u1881 15EC                       u2681 0BA4  
                     u1970 1126                       u1890 1618                       u2770 1878  
                     u1971 1122                       u1891 1614                       u2771 1874  
                     u1980 1150                       u1981 114C                       u1990 1190  
                     u2694 0C02                       u1991 118C                       u2695 0BFC  
                     u2787 1852                       _RCIF 007CF5                       u2797 0B30  
                     _TXIF 007CF4                       abs@a 0015                       _dbuf 0099  
                     _atoi 0F0A                       _main 1818                       _dtoa 0828  
                     _prec 0064                       _nout 0060                       pad@i 001A  
                     pad@p 0017                       fsr1h 000FE2                       fsr2h 000FDA  
                     indf1 000FE7                       indf2 000FDF                       fsr1l 000FE1  
                     pad@w 001C                       fsr2l 000FD9                       btemp 005D  
 __end_of_USART_SendString 1C30                       prodh 000FF4                       prodl 000FF3  
                     start 000E               ___param_bank 000000                      ??_abs 0017  
                    ??_pad 0019                      ??_isr 0001            ?_USART_SendChar 0001  
          __end_of___aodiv 121C                      ?_atoi 000A                      ?_main 0001  
                    ?_dtoa 001E            __end_of___aomod 14F6                      i2l137 1B98  
    __end_of_data_received 1D5C                      _RCREG 000FAE               vfpfcnvrt@fmt 0044  
                    _SPBRG 000FAF         USART_SendChar@data 0003                      _TRISD 000F95  
                    _TXREG 000FAD                      _flags 005B                      _fputc 15CC  
                    _fputs 1C30            __end_of_isdigit 1D24                      atoi@n 0017  
                    pad@fp 0013                      atoi@s 000A                      _width 0062  
                    _putch 1DB6                      dtoa@d 0020                      dtoa@i 0040  
                    dtoa@n 0038                      dtoa@p 0032                      dtoa@s 0036  
                    dtoa@w 0034            __end_of_isspace 1A6C                      tablat 000FF5  
                    ttemp5 005E                      ttemp6 0061                      ttemp7 0065  
          get_action@value 001B                      status 000FD8                      wtemp8 005E  
          __end_of_sprintf 1ABE            __end_of_strncmp 15CC                ?_USART_Init 0001  
          __initialization 19BC               __end_of_atoi 1094               __end_of_main 18CA  
             __end_of_dtoa 0B06           data_received@ptr 0014                     ??_atoi 000C  
                   ??_main 00D7                     ??_dtoa 0028              __activetblptr 000002  
                   ?_fputc 0003                     ?_fputs 000C                     ?_putch 0001  
     __end_of_dht_read_bit 1BEA                     i2l2280 1B70                     i2l2282 1B7E  
                   i2l2284 1B84                     i2l2286 1B96                     i2l2278 1B62  
                   _TRISC6 007CA6                     _TRISC7 007CA7           __end_of_dht_read 0D56  
             vfprintf@cfmt 0058                  ??___aodiv 0013                  ??___aomod 0013  
                   ___wmul 1D5C                     _memset 121C                     clear_0 19E4  
                   clear_1 19F6                     clear_2 1A02                     pad@buf 0015  
                   dtoa@fp 001E                     _strchr 1B0C                     _strlen 1ABE  
                   _strstr 1758                     fputc@c 0003                     fputs@c 0010  
                   fputs@i 0011                     fputs@s 000C                  ??_isdigit 0005  
             __mediumconst 0000                  ??_isspace 0005                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8        __size_of_USART_Init 001A  
                   putch@c 0001           __end_of_vfprintf 19BC                  ??_sprintf 005A  
                ??_strncmp 0009                 __accesstop 0060    __end_of__initialization 1A0C  
            ___rparam_used 000001             __pcstackCOMRAM 0001               __pidataBANK0 1DB2  
            __end_of_fputc 1696              __end_of_fputs 1C74              __end_of_putch 1DB8  
                  ??_fputc 0007                    ??_fputs 0010                    ??_putch 0003  
               __pbssBANK0 0060                 __pbssBANK1 0100  dht_read@relative_humidity 00CC  
        ?_USART_SendString 0007           ??_USART_SendChar 0003         ??_USART_SendString 0009  
                  ?___wmul 0003                    ?_memset 0003                    ?_strchr 0003  
                  ?_strlen 0003                    ?_strstr 000E                    _END_CMD 00D9  
               _get_action 18CA      __size_of_dht_read_bit 0046         __size_of_vfpfcnvrt 01B4  
                ?_dht_read 0001               ??_USART_Init 0003                    __Hparam 0000  
                  __Lparam 0000                 _is_command 1CB4                    ___aodiv 1094  
                  ___aomod 1392            __size_of___wmul 0026                  ?_vfprintf 0052  
             __psmallconst 0800               _dht_read_bit 1BA4                    _data_in 0150  
                  __pcinit 19BC            __size_of_memset 0176                    __ramtop 0800  
                  __ptext0 1818                    __ptext1 18CA                    __ptext2 1CB4  
                  __ptext3 0F0A                    __ptext4 1A1A                    __ptext5 1CEC  
                  __ptext6 1D5C                    __ptext7 0B06                    __ptext8 1A6C  
                  __ptext9 195A               _dht_raw_data 0100            __size_of_strchr 004C  
          __size_of_strlen 004E            __size_of_strstr 00C0               __size_of_abs 0040  
             __size_of_pad 00C2                    _isdigit 1CEC               __size_of_isr 1B9C  
                  _isspace 1A1A                    atoi@neg 0010         __end_of_USART_Init 1D9C  
               ??_dht_read 00C9                    _sprintf 1A6C                    _strncmp 14F6  
           __pintcode_body 1B58       end_of_initialization 1A0C                    fputc@fp 0005  
                  memset@c 0005                    memset@k 000B                    memset@n 0007  
                  memset@s 000D              __Lmediumconst 0000                    int_func 1B58  
                  fputs@fp 000E     __size_of_data_received 0038          __end_of_vfpfcnvrt 0F0A  
                _RCSTAbits 000FAB                    postdec1 000FE5                    postdec2 000FDD  
                  postinc0 000FEE                    postinc1 000FE6                    postinc2 000FDE  
               ??_vfprintf 0058                    strchr@c 0005                    strchr@s 0003  
                  strlen@a 0005                    strlen@s 0003                    strstr@h 000E  
                  strstr@n 0010                  _PORTDbits 000F83                ?_get_action 0001  
            __pbssBIGRAM_1 0150                 main@action 005A                  _TXSTAbits 000FAC  
              ?_is_command 0014                vfpfcnvrt@ap 0046                vfpfcnvrt@fp 0042  
              vfpfcnvrt@ll 004A             __end_of___wmul 1D82        dht_read@temperature 00CE  
           __end_of_memset 1392             __end_of_strchr 1B58             __end_of_strlen 1B0C  
            _data_received 1D24             __end_of_strstr 1818        start_initialization 19BC  
              __end_of_abs 1CB4          dht_read@bit_index 00D5                __end_of_pad 1758  
              __end_of_isr 1BA4       dht_read@bit_position 00D0        __size_of_get_action 0090  
              vfprintf@fmt 0054                   ??___wmul 0007                __pdataBANK0 00D9  
                 ??_memset 0009                 memset@dest 0003                   ??_strchr 0007  
                 ??_strlen 0005  __size_of_USART_SendString 0046                   ??_strstr 0012  
           ?_data_received 0001                __pbssCOMRAM 005B              __pcstackBANK0 00B9  
         ___aodiv@dividend 0003        __size_of_is_command 0038          __size_of_dht_read 0250  
                _dtoa$1026 0030                  __pintcode 0008                   ?___aodiv 0003  
                 ?___aomod 0003           ___aodiv@quotient 0015      USART_SendString@index 000B  
        __size_of_vfprintf 0062                __smallconst 0800                   ?_isdigit 0003  
                 ?_isspace 0003                   _LED0_CMD 00DB                   ?_sprintf 00B9  
           __size_of_fputc 00CA             __size_of_fputs 0044                   ?_strncmp 0003  
           __size_of_putch 0002             ___wmul@product 0007                   _LATDbits 000F8C  
                 _PIE1bits 000F9D                   i2u185_40 1B70                   i2u185_41 1B6C  
                 i2u186_40 1B7E                   i2u186_41 1B7A              is_command@ptr 0016  
                _vfpfcnvrt 0D56            ??_data_received 0014          ___wmul@multiplier 0003  
  __size_of_USART_SendChar 0016               ??_get_action 0019                  copy_data0 19D0  
                 __Hrparam 0000                 vfprintf@ap 0056                   __Lrparam 0000  
               vfprintf@fp 0052         __end_of_get_action 195A               ??_is_command 0016  
         __size_of___aodiv 0188           __size_of___aomod 0164                 ?_vfpfcnvrt 0042  
          ___aodiv@divisor 000B            ___aodiv@counter 0013          is_command@command 0014  
         _USART_SendString 1BEA                 sprintf@fmt 00BB                   _atoi$930 0014  
                 _atoi$928 0012                   _atoi$929 0016                   _data_out 0067  
         __size_of_isdigit 0038           __size_of_isspace 0052       USART_SendString@data 0007  
                 __ptext10 0D56                   __ptext11 0828                   __ptext20 1BA4  
                 __ptext12 1696                   __ptext21 1BEA                   __ptext13 1C30  
                 __ptext22 1D9C                   __ptext14 15CC                   __ptext23 1D24  
                 __ptext15 1DB6                   __ptext24 1758                   __ptext16 1C74  
                 __ptext25 14F6                   __ptext17 1392                   __ptext26 1ABE  
                 __ptext18 1094                   __ptext27 1B0C                   __ptext19 121C  
                 __ptext28 1D82                   _dht_read 0B06           __size_of_sprintf 0052  
       __end_of_is_command 1CEC           __size_of_strncmp 00D6              __size_of_atoi 018A  
            __size_of_main 00B2              __size_of_dtoa 02DE                   int$flags 005D  
                 _position 0066                   _vfprintf 195A                _isspace$946 0009  
         ___aomod@dividend 0003                 _INTCONbits 000FF2                   isdigit@c 0003  
                 intlevel2 0000              dht_read@index 00D2                  sprintf@ap 00C1  
                 isspace@c 0003                  strncmp@_l 0003                  strncmp@_r 0005  
      get_action@str_value 0019            ___aomod@divisor 000B              ?_dht_read_bit 0003  
              ??_vfpfcnvrt 0048            ___aomod@counter 0013             _USART_SendChar 1D9C  
             dht_read@mask 00D3                   sprintf@f 00C3                   sprintf@s 00B9  
                 strncmp@l 000A                   strncmp@n 0007                   strncmp@r 000C  
                 strstr@nl 0012               ___aodiv@sign 0014               ___aomod@sign 0014  
               _USART_Init 1D82  
